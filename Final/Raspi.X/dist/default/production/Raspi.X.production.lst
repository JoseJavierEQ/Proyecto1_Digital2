

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun May 10 17:03:26 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     	FNCALL	_main,_LCD_CURSOR
   868                           	FNCALL	_main,_LCD_DATO
   869                           	FNCALL	_main,_LCD_STRING
   870                           	FNCALL	_main,_config
   871                           	FNCALL	_main,_lcd_init
   872                           	FNCALL	_main,_mandar
   873                           	FNCALL	_main,_spiInit
   874                           	FNCALL	_main,_sprintf
   875                           	FNCALL	_sprintf,___bmul
   876                           	FNCALL	_sprintf,___lwdiv
   877                           	FNCALL	_sprintf,___lwmod
   878                           	FNCALL	_sprintf,_isdigit
   879                           	FNCALL	_lcd_init,_lcd_cmd
   880                           	FNCALL	_lcd_cmd,_lcd_lat
   881                           	FNCALL	_lcd_cmd,_lcd_ready
   882                           	FNCALL	_lcd_ready,_delay
   883                           	FNCALL	_lcd_lat,_delay
   884                           	FNCALL	_LCD_STRING,_LCD_CHAR
   885                           	FNCALL	_LCD_CURSOR,_LCD_DATO
   886                           	FNROOT	_main
   887                           	FNCALL	_isr,_spiRead
   888                           	FNCALL	_isr,_spiWrite
   889                           	FNCALL	_spiRead,_spiReceiveWait
   890                           	FNCALL	intlevel1,_isr
   891                           	global	intlevel1
   892                           	FNROOT	intlevel1
   893                           	global	_dpowers
   894                           psect	strings,class=STRING,delta=2,noexec
   895                           global __pstrings
   896                           __pstrings:
   897  0400                     stringtab:
   898  0400                     	global    __stringtab
   899                           __stringtab:
   900  0400                     ;	String table - string pointers are 1 byte each
   901                           	btfsc	(btemp+1),7
   902  0400  1BFF               	ljmp	stringcode
   903  0401  2C0A               	bcf	status,7
   904  0402  1383               	btfsc	(btemp+1),0
   905  0403  187F               	bsf	status,7
   906  0404  1783               	movf	indf,w
   907  0405  0800               	incf fsr
   908  0406  0A84               skipnz
   909  0407  1903               incf btemp+1
   910  0408  0AFF               	return
   911  0409  0008               stringcode:stringdir:
   912  040A                     movlw high(stringdir)
      + 040A                     stringdir:	
   913  040A  3004               movwf pclath
   914  040B  008A               movf fsr,w
   915  040C  0804               incf fsr
   916  040D  0A84               	addwf pc
   917  040E  0782               	global __stringbase
   918                           __stringbase:
   919  040F                     	retlw	0
   920  040F  3400               psect	strings
   921                           	global    __end_of__stringtab
   922                           __end_of__stringtab:
   923  0410                     	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
   924                           	line	358
   925                           _dpowers:
   926  0410                     	retlw	01h
   927  0410  3401               	retlw	0
   928  0411  3400               
   929                           	retlw	0Ah
   930  0412  340A               	retlw	0
   931  0413  3400               
   932                           	retlw	064h
   933  0414  3464               	retlw	0
   934  0415  3400               
   935                           	retlw	0E8h
   936  0416  34E8               	retlw	03h
   937  0417  3403               
   938                           	retlw	010h
   939  0418  3410               	retlw	027h
   940  0419  3427               
   941                           	global __end_of_dpowers
   942                           __end_of_dpowers:
   943  041A                     	global	_dpowers
   944                           	global	_lectura
   945                           	global	_B1
   946                           	global	_A1
   947                           	global	_E1
   948                           	global	_D1
   949                           	global	_C1
   950                           	global	_valor
   951                           	global	_valor1
   952                           	global	_PORTDbits
   953                           _PORTDbits	set	0x8
   954  0008                     	global	_SSPBUF
   955                           _SSPBUF	set	0x13
   956  0013                     	global	_SSPCON
   957                           _SSPCON	set	0x14
   958  0014                     	global	_RCREG
   959                           _RCREG	set	0x1A
   960  001A                     	global	_PIR1bits
   961                           _PIR1bits	set	0xC
   962  000C                     	global	_INTCONbits
   963                           _INTCONbits	set	0xB
   964  000B                     	global	_PORTD
   965                           _PORTD	set	0x8
   966  0008                     	global	_PORTA
   967                           _PORTA	set	0x5
   968  0005                     	global	_PORTB
   969                           _PORTB	set	0x6
   970  0006                     	global	_TXREG
   971                           _TXREG	set	0x19
   972  0019                     	global	_RCSTAbits
   973                           _RCSTAbits	set	0x18
   974  0018                     	global	_RCIF
   975                           _RCIF	set	0x65
   976  0065                     	global	_SSPIF
   977                           _SSPIF	set	0x63
   978  0063                     	global	_SSPSTATbits
   979                           _SSPSTATbits	set	0x94
   980  0094                     	global	_SSPSTAT
   981                           _SSPSTAT	set	0x94
   982  0094                     	global	_TRISAbits
   983                           _TRISAbits	set	0x85
   984  0085                     	global	_PIE1bits
   985                           _PIE1bits	set	0x8C
   986  008C                     	global	_TRISA
   987                           _TRISA	set	0x85
   988  0085                     	global	_TRISCbits
   989                           _TRISCbits	set	0x87
   990  0087                     	global	_TRISB
   991                           _TRISB	set	0x86
   992  0086                     	global	_TRISD
   993                           _TRISD	set	0x88
   994  0088                     	global	_SPBRGH
   995                           _SPBRGH	set	0x9A
   996  009A                     	global	_SPBRG
   997                           _SPBRG	set	0x99
   998  0099                     	global	_TXSTAbits
   999                           _TXSTAbits	set	0x98
  1000  0098                     	global	_TRISC3
  1001                           _TRISC3	set	0x43B
  1002  043B                     	global	_TRISC5
  1003                           _TRISC5	set	0x43D
  1004  043D                     	global	_ANSELH
  1005                           _ANSELH	set	0x189
  1006  0189                     	global	_ANSEL
  1007                           _ANSEL	set	0x188
  1008  0188                     	global	_BAUDCTLbits
  1009                           _BAUDCTLbits	set	0x187
  1010  0187                     	
  1011                           STR_4:	
  1012  041A                     	retlw	37	;'%'
  1013  041A  3425               	retlw	46	;'.'
  1014  041B  342E               	retlw	49	;'1'
  1015  041C  3431               	retlw	100	;'d'
  1016  041D  3464               	retlw	32	;' '
  1017  041E  3420               	retlw	37	;'%'
  1018  041F  3425               	retlw	46	;'.'
  1019  0420  342E               	retlw	49	;'1'
  1020  0421  3431               	retlw	100	;'d'
  1021  0422  3464               	retlw	32	;' '
  1022  0423  3420               	retlw	32	;' '
  1023  0424  3420               	retlw	37	;'%'
  1024  0425  3425               	retlw	46	;'.'
  1025  0426  342E               	retlw	51	;'3'
  1026  0427  3433               	retlw	100	;'d'
  1027  0428  3464               	retlw	32	;' '
  1028  0429  3420               	retlw	37	;'%'
  1029  042A  3425               	retlw	46	;'.'
  1030  042B  342E               	retlw	49	;'1'
  1031  042C  3431               	retlw	100	;'d'
  1032  042D  3464               	retlw	32	;' '
  1033  042E  3420               	retlw	32	;' '
  1034  042F  3420               	retlw	32	;' '
  1035  0430  3420               	retlw	32	;' '
  1036  0431  3420               	retlw	37	;'%'
  1037  0432  3425               	retlw	46	;'.'
  1038  0433  342E               	retlw	100	;'d'
  1039  0434  3464               	retlw	0
  1040  0435  3400               psect	strings
  1041                           	
  1042                           STR_3:	
  1043  0436                     	retlw	70	;'F'
  1044  0436  3446               	retlw	32	;' '
  1045  0437  3420               	retlw	76	;'L'
  1046  0438  344C               	retlw	108	;'l'
  1047  0439  346C               	retlw	32	;' '
  1048  043A  3420               	retlw	68	;'D'
  1049  043B  3444               	retlw	105	;'i'
  1050  043C  3469               	retlw	115	;'s'
  1051  043D  3473               	retlw	32	;' '
  1052  043E  3420               	retlw	76	;'L'
  1053  043F  344C               	retlw	105	;'i'
  1054  0440  3469               	retlw	32	;' '
  1055  0441  3420               	retlw	32	;' '
  1056  0442  3420               	retlw	83	;'S'
  1057  0443  3453               	retlw	101	;'e'
  1058  0444  3465               	retlw	99	;'c'
  1059  0445  3463               	retlw	0
  1060  0446  3400               psect	strings
  1061                           	
  1062                           STR_2:	
  1063  0447                     	retlw	69	;'E'
  1064  0447  3445               	retlw	83	;'S'
  1065  0448  3453               	retlw	84	;'T'
  1066  0449  3454               	retlw	82	;'R'
  1067  044A  3452               	retlw	65	;'A'
  1068  044B  3441               	retlw	68	;'D'
  1069  044C  3444               	retlw	65	;'A'
  1070  044D  3441               	retlw	32	;' '
  1071  044E  3420               	retlw	32	;' '
  1072  044F  3420               	retlw	35	;'#'
  1073  0450  3423               	retlw	49	;'1'
  1074  0451  3431               	retlw	55	;'7'
  1075  0452  3437               	retlw	48	;'0'
  1076  0453  3430               	retlw	55	;'7'
  1077  0454  3437               	retlw	56	;'8'
  1078  0455  3438               	retlw	0
  1079  0456  3400               psect	strings
  1080                           	
  1081                           STR_1:	
  1082  0457                     	retlw	74	;'J'
  1083  0457  344A               	retlw	79	;'O'
  1084  0458  344F               	retlw	83	;'S'
  1085  0459  3453               	retlw	69	;'E'
  1086  045A  3445               	retlw	32	;' '
  1087  045B  3420               	retlw	74	;'J'
  1088  045C  344A               	retlw	65	;'A'
  1089  045D  3441               	retlw	86	;'V'
  1090  045E  3456               	retlw	73	;'I'
  1091  045F  3449               	retlw	69	;'E'
  1092  0460  3445               	retlw	82	;'R'
  1093  0461  3452               	retlw	0
  1094  0462  3400               psect	strings
  1095                           ; #config settings
  1096                           global __CFG_FOSC$INTRC_NOCLKOUT
  1097                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1098  0000                     global __CFG_WDTE$OFF
  1099                           __CFG_WDTE$OFF equ 0x0
  1100  0000                     global __CFG_PWRTE$OFF
  1101                           __CFG_PWRTE$OFF equ 0x0
  1102  0000                     global __CFG_MCLRE$OFF
  1103                           __CFG_MCLRE$OFF equ 0x0
  1104  0000                     global __CFG_CP$OFF
  1105                           __CFG_CP$OFF equ 0x0
  1106  0000                     global __CFG_CPD$OFF
  1107                           __CFG_CPD$OFF equ 0x0
  1108  0000                     global __CFG_BOREN$OFF
  1109                           __CFG_BOREN$OFF equ 0x0
  1110  0000                     global __CFG_IESO$OFF
  1111                           __CFG_IESO$OFF equ 0x0
  1112  0000                     global __CFG_FCMEN$OFF
  1113                           __CFG_FCMEN$OFF equ 0x0
  1114  0000                     global __CFG_LVP$OFF
  1115                           __CFG_LVP$OFF equ 0x0
  1116  0000                     global __CFG_BOR4V$BOR40V
  1117                           __CFG_BOR4V$BOR40V equ 0x0
  1118  0000                     global __CFG_WRT$OFF
  1119                           __CFG_WRT$OFF equ 0x0
  1120  0000                     	file	"C:\Users\JOSJAV~1\AppData\Local\Temp\so5g."
  1121                           	line	#
  1122                           psect cinit,class=CODE,delta=2
  1123                           global start_initialization
  1124                           start_initialization:
  1125  000F                     
  1126                           global __initialization
  1127                           __initialization:
  1128  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
  1129                           global __pbssCOMMON
  1130                           __pbssCOMMON:
  1131  0070                     _lectura:
  1132  0070                            ds      2
  1133  0070                     
  1134                           _B1:
  1135  0072                            ds      2
  1136  0072                     
  1137                           _A1:
  1138  0074                            ds      2
  1139  0074                     
  1140                           psect	bssBANK0,class=BANK0,space=1,noexec
  1141                           global __pbssBANK0
  1142                           __pbssBANK0:
  1143  0020                     _E1:
  1144  0020                            ds      2
  1145  0020                     
  1146                           _D1:
  1147  0022                            ds      2
  1148  0022                     
  1149                           _C1:
  1150  0024                            ds      2
  1151  0024                     
  1152                           _E:
  1153  0026                            ds      2
  1154  0026                     
  1155                           _D:
  1156  0028                            ds      2
  1157  0028                     
  1158                           _C:
  1159  002A                            ds      2
  1160  002A                     
  1161                           _B:
  1162  002C                            ds      2
  1163  002C                     
  1164                           _A:
  1165  002E                            ds      2
  1166  002E                     
  1167                           _e:
  1168  0030                            ds      2
  1169  0030                     
  1170                           _d:
  1171  0032                            ds      2
  1172  0032                     
  1173                           _c:
  1174  0034                            ds      2
  1175  0034                     
  1176                           _b:
  1177  0036                            ds      2
  1178  0036                     
  1179                           _a:
  1180  0038                            ds      2
  1181  0038                     
  1182                           _valor:
  1183  003A                            ds      16
  1184  003A                     
  1185                           psect	bssBANK1,class=BANK1,space=1,noexec
  1186                           global __pbssBANK1
  1187                           __pbssBANK1:
  1188  00A0                     _valor1:
  1189  00A0                            ds      16
  1190  00A0                     
  1191                           	file	"C:\Users\JOSJAV~1\AppData\Local\Temp\so5g."
  1192                           	line	#
  1193                           psect clrtext,class=CODE,delta=2
  1194                           global clear_ram0
  1195                           ;	Called with FSR containing the base address, and
  1196                           ;	W with the last address+1
  1197                           clear_ram0:
  1198  06D9                     	clrwdt			;clear the watchdog before getting into this loop
  1199  06D9  0064               clrloop0:
  1200  06DA                     	clrf	indf		;clear RAM location pointed to by FSR
  1201  06DA  0180               	incf	fsr,f		;increment pointer
  1202  06DB  0A84               	xorwf	fsr,w		;XOR with final address
  1203  06DC  0604               	btfsc	status,2	;have we reached the end yet?
  1204  06DD  1903               	retlw	0		;all done for this memory range, return
  1205  06DE  3400               	xorwf	fsr,w		;XOR again to restore value
  1206  06DF  0604               	goto	clrloop0		;do the next byte
  1207  06E0  2EDA               
  1208                           ; Clear objects allocated to COMMON
  1209                           psect cinit,class=CODE,delta=2,merge=1
  1210                           	clrf	((__pbssCOMMON)+0)&07Fh
  1211  000F  01F0               	clrf	((__pbssCOMMON)+1)&07Fh
  1212  0010  01F1               	clrf	((__pbssCOMMON)+2)&07Fh
  1213  0011  01F2               	clrf	((__pbssCOMMON)+3)&07Fh
  1214  0012  01F3               	clrf	((__pbssCOMMON)+4)&07Fh
  1215  0013  01F4               	clrf	((__pbssCOMMON)+5)&07Fh
  1216  0014  01F5               ; Clear objects allocated to BANK0
  1217                           psect cinit,class=CODE,delta=2,merge=1
  1218                           	bcf	status, 7	;select IRP bank0
  1219  0015  1383               	movlw	low(__pbssBANK0)
  1220  0016  3020               	movwf	fsr
  1221  0017  0084               	movlw	low((__pbssBANK0)+02Ah)
  1222  0018  304A               	fcall	clear_ram0
  1223  0019  120A  118A  26D9  120A  118A  ; Clear objects allocated to BANK1
  1224                           psect cinit,class=CODE,delta=2,merge=1
  1225                           	movlw	low(__pbssBANK1)
  1226  001E  30A0               	movwf	fsr
  1227  001F  0084               	movlw	low((__pbssBANK1)+010h)
  1228  0020  30B0               	fcall	clear_ram0
  1229  0021  120A  118A  26D9  120A  118A  psect cinit,class=CODE,delta=2,merge=1
  1230                           global end_of_initialization,__end_of__initialization
  1231                           
  1232                           ;End of C runtime variable initialization code
  1233                           
  1234                           end_of_initialization:
  1235  0026                     __end_of__initialization:
  1236  0026                     clrf status
  1237  0026  0183               ljmp _main	;jump to C main() function
  1238  0027  120A  118A  282A   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1239                           global __pcstackCOMMON
  1240                           __pcstackCOMMON:
  1241  0076                     ?_isdigit:	; 1 bit 
  1242  0076                     ?_spiRead:	; 1 bytes @ 0x0
  1243  0076                     ??_spiRead:	; 1 bytes @ 0x0
  1244  0076                     ?_spiWrite:	; 1 bytes @ 0x0
  1245  0076                     ?_lcd_init:	; 1 bytes @ 0x0
  1246  0076                     ?_config:	; 1 bytes @ 0x0
  1247  0076                     ?_isr:	; 1 bytes @ 0x0
  1248  0076                     ?_main:	; 1 bytes @ 0x0
  1249  0076                     ?_spiReceiveWait:	; 1 bytes @ 0x0
  1250  0076                     ??_spiReceiveWait:	; 1 bytes @ 0x0
  1251  0076                     ?_lcd_lat:	; 1 bytes @ 0x0
  1252  0076                     ?_lcd_ready:	; 1 bytes @ 0x0
  1253  0076                     ?_lcd_cmd:	; 1 bytes @ 0x0
  1254  0076                     ?_LCD_CHAR:	; 1 bytes @ 0x0
  1255  0076                     	global	spiWrite@dat
  1256                           spiWrite@dat:	; 2 bytes @ 0x0
  1257  0076                     	ds	2
  1258  0076                     ??_spiWrite:	; 1 bytes @ 0x2
  1259  0078                     ??_isr:	; 1 bytes @ 0x2
  1260  0078                     	ds	4
  1261  0078                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1262                           global __pcstackBANK0
  1263                           __pcstackBANK0:
  1264  004A                     ?_spiInit:	; 1 bytes @ 0x0
  1265  004A                     ?_LCD_DATO:	; 1 bytes @ 0x0
  1266  004A                     ?_delay:	; 1 bytes @ 0x0
  1267  004A                     ??_isdigit:	; 1 bytes @ 0x0
  1268  004A                     ??_config:	; 1 bytes @ 0x0
  1269  004A                     ?_mandar:	; 1 bytes @ 0x0
  1270  004A                     ??_LCD_CHAR:	; 1 bytes @ 0x0
  1271  004A                     ?___bmul:	; 1 bytes @ 0x0
  1272  004A                     	global	?___lwdiv
  1273                           ?___lwdiv:	; 2 bytes @ 0x0
  1274  004A                     	global	spiInit@sDataSample
  1275                           spiInit@sDataSample:	; 1 bytes @ 0x0
  1276  004A                     	global	___bmul@multiplicand
  1277                           ___bmul@multiplicand:	; 1 bytes @ 0x0
  1278  004A                     	global	_isdigit$1048
  1279                           _isdigit$1048:	; 1 bytes @ 0x0
  1280  004A                     	global	mandar@dato
  1281                           mandar@dato:	; 2 bytes @ 0x0
  1282  004A                     	global	delay@ms
  1283                           delay@ms:	; 2 bytes @ 0x0
  1284  004A                     	global	LCD_DATO@var
  1285                           LCD_DATO@var:	; 2 bytes @ 0x0
  1286  004A                     	global	___lwdiv@divisor
  1287                           ___lwdiv@divisor:	; 2 bytes @ 0x0
  1288  004A                     	ds	1
  1289  004A                     ??___bmul:	; 1 bytes @ 0x1
  1290  004B                     	global	spiInit@sClockIdle
  1291                           spiInit@sClockIdle:	; 1 bytes @ 0x1
  1292  004B                     	global	LCD_CHAR@a
  1293                           LCD_CHAR@a:	; 1 bytes @ 0x1
  1294  004B                     	global	isdigit@c
  1295                           isdigit@c:	; 1 bytes @ 0x1
  1296  004B                     	ds	1
  1297  004B                     ?_LCD_STRING:	; 1 bytes @ 0x2
  1298  004C                     ??_LCD_DATO:	; 1 bytes @ 0x2
  1299  004C                     ??_delay:	; 1 bytes @ 0x2
  1300  004C                     ??_mandar:	; 1 bytes @ 0x2
  1301  004C                     	global	spiInit@sTransmitEdge
  1302                           spiInit@sTransmitEdge:	; 1 bytes @ 0x2
  1303  004C                     	global	___bmul@product
  1304                           ___bmul@product:	; 1 bytes @ 0x2
  1305  004C                     	global	delay@j
  1306                           delay@j:	; 2 bytes @ 0x2
  1307  004C                     	global	LCD_STRING@a
  1308                           LCD_STRING@a:	; 2 bytes @ 0x2
  1309  004C                     	global	___lwdiv@dividend
  1310                           ___lwdiv@dividend:	; 2 bytes @ 0x2
  1311  004C                     	ds	1
  1312  004C                     ??_spiInit:	; 1 bytes @ 0x3
  1313  004D                     	global	spiInit@sType
  1314                           spiInit@sType:	; 1 bytes @ 0x3
  1315  004D                     	global	___bmul@multiplier
  1316                           ___bmul@multiplier:	; 1 bytes @ 0x3
  1317  004D                     	ds	1
  1318  004D                     ??_LCD_STRING:	; 1 bytes @ 0x4
  1319  004E                     ?_LCD_CURSOR:	; 1 bytes @ 0x4
  1320  004E                     ??___lwdiv:	; 1 bytes @ 0x4
  1321  004E                     	global	delay@i
  1322                           delay@i:	; 2 bytes @ 0x4
  1323  004E                     	global	LCD_CURSOR@a
  1324                           LCD_CURSOR@a:	; 2 bytes @ 0x4
  1325  004E                     	ds	1
  1326  004E                     	global	___lwdiv@counter
  1327                           ___lwdiv@counter:	; 1 bytes @ 0x5
  1328  004F                     	ds	1
  1329  004F                     ??_lcd_lat:	; 1 bytes @ 0x6
  1330  0050                     ??_lcd_ready:	; 1 bytes @ 0x6
  1331  0050                     	global	LCD_CURSOR@b
  1332                           LCD_CURSOR@b:	; 2 bytes @ 0x6
  1333  0050                     	global	___lwdiv@quotient
  1334                           ___lwdiv@quotient:	; 2 bytes @ 0x6
  1335  0050                     	ds	1
  1336  0050                     ??_lcd_cmd:	; 1 bytes @ 0x7
  1337  0051                     	global	lcd_cmd@x
  1338                           lcd_cmd@x:	; 1 bytes @ 0x7
  1339  0051                     	global	LCD_STRING@n
  1340                           LCD_STRING@n:	; 2 bytes @ 0x7
  1341  0051                     	ds	1
  1342  0051                     ??_lcd_init:	; 1 bytes @ 0x8
  1343  0052                     ??_LCD_CURSOR:	; 1 bytes @ 0x8
  1344  0052                     	global	?___lwmod
  1345                           ?___lwmod:	; 2 bytes @ 0x8
  1346  0052                     	global	LCD_CURSOR@d
  1347                           LCD_CURSOR@d:	; 2 bytes @ 0x8
  1348  0052                     	global	___lwmod@divisor
  1349                           ___lwmod@divisor:	; 2 bytes @ 0x8
  1350  0052                     	ds	2
  1351  0052                     	global	___lwmod@dividend
  1352                           ___lwmod@dividend:	; 2 bytes @ 0xA
  1353  0054                     	ds	2
  1354  0054                     ??___lwmod:	; 1 bytes @ 0xC
  1355  0056                     	ds	1
  1356  0056                     	global	___lwmod@counter
  1357                           ___lwmod@counter:	; 1 bytes @ 0xD
  1358  0057                     	ds	1
  1359  0057                     	global	?_sprintf
  1360                           ?_sprintf:	; 2 bytes @ 0xE
  1361  0058                     	global	sprintf@f
  1362                           sprintf@f:	; 1 bytes @ 0xE
  1363  0058                     	ds	11
  1364  0058                     ??_sprintf:	; 1 bytes @ 0x19
  1365  0063                     	ds	3
  1366  0063                     	global	sprintf@ap
  1367                           sprintf@ap:	; 1 bytes @ 0x1C
  1368  0066                     	ds	1
  1369  0066                     	global	sprintf@flag
  1370                           sprintf@flag:	; 1 bytes @ 0x1D
  1371  0067                     	ds	1
  1372  0067                     	global	sprintf@val
  1373                           sprintf@val:	; 2 bytes @ 0x1E
  1374  0068                     	ds	2
  1375  0068                     	global	sprintf@sp
  1376                           sprintf@sp:	; 1 bytes @ 0x20
  1377  006A                     	ds	1
  1378  006A                     	global	sprintf@prec
  1379                           sprintf@prec:	; 1 bytes @ 0x21
  1380  006B                     	ds	1
  1381  006B                     	global	sprintf@c
  1382                           sprintf@c:	; 1 bytes @ 0x22
  1383  006C                     	ds	1
  1384  006C                     ??_main:	; 1 bytes @ 0x23
  1385  006D                     	ds	3
  1386  006D                     ;!
  1387                           ;!Data Sizes:
  1388                           ;!    Strings     73
  1389                           ;!    Constant    10
  1390                           ;!    Data        0
  1391                           ;!    BSS         64
  1392                           ;!    Persistent  0
  1393                           ;!    Stack       0
  1394                           ;!
  1395                           ;!Auto Spaces:
  1396                           ;!    Space          Size  Autos    Used
  1397                           ;!    COMMON           14      6      12
  1398                           ;!    BANK0            80     38      80
  1399                           ;!    BANK1            80      0      16
  1400                           ;!    BANK3            96      0       0
  1401                           ;!    BANK2            96      0       0
  1402                           
  1403                           ;!
  1404                           ;!Pointer List with Targets:
  1405                           ;!
  1406                           ;!    sprintf@f	PTR const unsigned char  size(1) Largest target is 28
  1407                           ;!		 -> STR_4(CODE[28]), STR_3(CODE[17]), 
  1408                           ;!
  1409                           ;!    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1410                           ;!		 -> valor(BANK0[16]), valor1(BANK1[16]), 
  1411                           ;!
  1412                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  1413                           ;!		 -> ?_sprintf(BANK0[2]), 
  1414                           ;!
  1415                           ;!    LCD_STRING@a	PTR unsigned char  size(2) Largest target is 16
  1416                           ;!		 -> valor(BANK0[16]), valor1(BANK1[16]), STR_2(CODE[16]), STR_1(CODE[12]), 
  1417                           ;!
  1418                           
  1419                           
  1420                           ;!
  1421                           ;!Critical Paths under _main in COMMON
  1422                           ;!
  1423                           ;!    None.
  1424                           ;!
  1425                           ;!Critical Paths under _isr in COMMON
  1426                           ;!
  1427                           ;!    _isr->_spiWrite
  1428                           ;!
  1429                           ;!Critical Paths under _main in BANK0
  1430                           ;!
  1431                           ;!    _main->_sprintf
  1432                           ;!    _sprintf->___lwmod
  1433                           ;!    ___lwmod->___lwdiv
  1434                           ;!    _lcd_init->_lcd_cmd
  1435                           ;!    _lcd_cmd->_lcd_ready
  1436                           ;!    _lcd_ready->_delay
  1437                           ;!    _lcd_lat->_delay
  1438                           ;!    _LCD_STRING->_LCD_CHAR
  1439                           ;!    _LCD_CURSOR->_LCD_DATO
  1440                           ;!
  1441                           ;!Critical Paths under _isr in BANK0
  1442                           ;!
  1443                           ;!    None.
  1444                           ;!
  1445                           ;!Critical Paths under _main in BANK1
  1446                           ;!
  1447                           ;!    None.
  1448                           ;!
  1449                           ;!Critical Paths under _isr in BANK1
  1450                           ;!
  1451                           ;!    None.
  1452                           ;!
  1453                           ;!Critical Paths under _main in BANK3
  1454                           ;!
  1455                           ;!    None.
  1456                           ;!
  1457                           ;!Critical Paths under _isr in BANK3
  1458                           ;!
  1459                           ;!    None.
  1460                           ;!
  1461                           ;!Critical Paths under _main in BANK2
  1462                           ;!
  1463                           ;!    None.
  1464                           ;!
  1465                           ;!Critical Paths under _isr in BANK2
  1466                           ;!
  1467                           ;!    None.
  1468                           
  1469 ;;
  1470 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1471 ;;
  1472                           
  1473                           ;!
  1474                           ;!Call Graph Tables:
  1475                           ;!
  1476                           ;! ---------------------------------------------------------------------------------
  1477                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1478                           ;! ---------------------------------------------------------------------------------
  1479                           ;! (0) _main                                                 3     3      0    6103
  1480                           ;!                                             35 BANK0      3     3      0
  1481                           ;!                         _LCD_CURSOR
  1482                           ;!                           _LCD_DATO
  1483                           ;!                         _LCD_STRING
  1484                           ;!                             _config
  1485                           ;!                           _lcd_init
  1486                           ;!                             _mandar
  1487                           ;!                            _spiInit
  1488                           ;!                            _sprintf
  1489                           ;! ---------------------------------------------------------------------------------
  1490                           ;! (1) _sprintf                                             29    18     11    2468
  1491                           ;!                                             14 BANK0     21    10     11
  1492                           ;!                             ___bmul
  1493                           ;!                            ___lwdiv
  1494                           ;!                            ___lwmod
  1495                           ;!                            _isdigit
  1496                           ;! ---------------------------------------------------------------------------------
  1497                           ;! (2) _isdigit                                              2     2      0      99
  1498                           ;!                                              0 BANK0      2     2      0
  1499                           ;! ---------------------------------------------------------------------------------
  1500                           ;! (2) ___lwmod                                              6     2      4     412
  1501                           ;!                                              8 BANK0      6     2      4
  1502                           ;!                            ___lwdiv (ARG)
  1503                           ;! ---------------------------------------------------------------------------------
  1504                           ;! (2) ___lwdiv                                              8     4      4     421
  1505                           ;!                                              0 BANK0      8     4      4
  1506                           ;! ---------------------------------------------------------------------------------
  1507                           ;! (2) ___bmul                                               4     3      1     226
  1508                           ;!                                              0 BANK0      4     3      1
  1509                           ;! ---------------------------------------------------------------------------------
  1510                           ;! (1) _spiInit                                              4     1      3     456
  1511                           ;!                                              0 BANK0      4     1      3
  1512                           ;! ---------------------------------------------------------------------------------
  1513                           ;! (1) _mandar                                               2     0      2     481
  1514                           ;!                                              0 BANK0      2     0      2
  1515                           ;! ---------------------------------------------------------------------------------
  1516                           ;! (1) _lcd_init                                             0     0      0     843
  1517                           ;!                            _lcd_cmd
  1518                           ;! ---------------------------------------------------------------------------------
  1519                           ;! (2) _lcd_cmd                                              1     1      0     843
  1520                           ;!                                              7 BANK0      1     1      0
  1521                           ;!                            _lcd_lat
  1522                           ;!                          _lcd_ready
  1523                           ;! ---------------------------------------------------------------------------------
  1524                           ;! (3) _lcd_ready                                            1     1      0     406
  1525                           ;!                                              6 BANK0      1     1      0
  1526                           ;!                              _delay
  1527                           ;! ---------------------------------------------------------------------------------
  1528                           ;! (3) _lcd_lat                                              0     0      0     406
  1529                           ;!                              _delay
  1530                           ;! ---------------------------------------------------------------------------------
  1531                           ;! (4) _delay                                                6     4      2     406
  1532                           ;!                                              0 BANK0      6     4      2
  1533                           ;! ---------------------------------------------------------------------------------
  1534                           ;! (1) _config                                               0     0      0       0
  1535                           ;! ---------------------------------------------------------------------------------
  1536                           ;! (1) _LCD_STRING                                           7     5      2     521
  1537                           ;!                                              2 BANK0      7     5      2
  1538                           ;!                           _LCD_CHAR
  1539                           ;! ---------------------------------------------------------------------------------
  1540                           ;! (2) _LCD_CHAR                                             2     2      0      31
  1541                           ;!                                              0 BANK0      2     2      0
  1542                           ;! ---------------------------------------------------------------------------------
  1543                           ;! (1) _LCD_CURSOR                                           6     2      4     943
  1544                           ;!                                              4 BANK0      6     2      4
  1545                           ;!                           _LCD_DATO
  1546                           ;! ---------------------------------------------------------------------------------
  1547                           ;! (1) _LCD_DATO                                             4     2      2     391
  1548                           ;!                                              0 BANK0      4     2      2
  1549                           ;! ---------------------------------------------------------------------------------
  1550                           ;! Estimated maximum stack depth 4
  1551                           ;! ---------------------------------------------------------------------------------
  1552                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1553                           ;! ---------------------------------------------------------------------------------
  1554                           ;! (5) _isr                                                  4     4      0     478
  1555                           ;!                                              2 COMMON     4     4      0
  1556                           ;!                            _spiRead
  1557                           ;!                           _spiWrite
  1558                           ;! ---------------------------------------------------------------------------------
  1559                           ;! (6) _spiWrite                                             2     0      2     478
  1560                           ;!                                              0 COMMON     2     0      2
  1561                           ;! ---------------------------------------------------------------------------------
  1562                           ;! (6) _spiRead                                              0     0      0       0
  1563                           ;!                     _spiReceiveWait
  1564                           ;! ---------------------------------------------------------------------------------
  1565                           ;! (7) _spiReceiveWait                                       0     0      0       0
  1566                           ;! ---------------------------------------------------------------------------------
  1567                           ;! Estimated maximum stack depth 7
  1568                           ;! ---------------------------------------------------------------------------------
  1569                           ;!
  1570                           ;! Call Graph Graphs:
  1571                           ;!
  1572                           ;! _main (ROOT)
  1573                           ;!   _LCD_CURSOR
  1574                           ;!     _LCD_DATO
  1575                           ;!   _LCD_DATO
  1576                           ;!   _LCD_STRING
  1577                           ;!     _LCD_CHAR
  1578                           ;!   _config
  1579                           ;!   _lcd_init
  1580                           ;!     _lcd_cmd
  1581                           ;!       _lcd_lat
  1582                           ;!         _delay
  1583                           ;!       _lcd_ready
  1584                           ;!         _delay
  1585                           ;!   _mandar
  1586                           ;!   _spiInit
  1587                           ;!   _sprintf
  1588                           ;!     ___bmul
  1589                           ;!     ___lwdiv
  1590                           ;!     ___lwmod
  1591                           ;!       ___lwdiv (ARG)
  1592                           ;!     _isdigit
  1593                           ;!
  1594                           ;! _isr (ROOT)
  1595                           ;!   _spiRead
  1596                           ;!     _spiReceiveWait
  1597                           ;!   _spiWrite
  1598                           ;!
  1599                           
  1600                           ;! Address spaces:
  1601                           
  1602                           ;!Name               Size   Autos  Total    Cost      Usage
  1603                           ;!BITCOMMON            E      0       0       0        0.0%
  1604                           ;!EEDATA             100      0       0       0        0.0%
  1605                           ;!NULL                 0      0       0       0        0.0%
  1606                           ;!CODE                 0      0       0       0        0.0%
  1607                           ;!COMMON               E      6       C       1       85.7%
  1608                           ;!BITSFR0              0      0       0       1        0.0%
  1609                           ;!SFR0                 0      0       0       1        0.0%
  1610                           ;!BITSFR1              0      0       0       2        0.0%
  1611                           ;!SFR1                 0      0       0       2        0.0%
  1612                           ;!STACK                0      0       0       2        0.0%
  1613                           ;!ABS                  0      0      6C       3        0.0%
  1614                           ;!BITBANK0            50      0       0       4        0.0%
  1615                           ;!BITSFR3              0      0       0       4        0.0%
  1616                           ;!SFR3                 0      0       0       4        0.0%
  1617                           ;!BANK0               50     26      50       5      100.0%
  1618                           ;!BITSFR2              0      0       0       5        0.0%
  1619                           ;!SFR2                 0      0       0       5        0.0%
  1620                           ;!BITBANK1            50      0       0       6        0.0%
  1621                           ;!BANK1               50      0      10       7       20.0%
  1622                           ;!BITBANK3            60      0       0       8        0.0%
  1623                           ;!BANK3               60      0       0       9        0.0%
  1624                           ;!BITBANK2            60      0       0      10        0.0%
  1625                           ;!BANK2               60      0       0      11        0.0%
  1626                           ;!DATA                 0      0      6C      12        0.0%
  1627                           
  1628                           	global	_main
  1629                           
  1630 ;; *************** function _main *****************
  1631 ;; Defined at:
  1632 ;;		line 67 in file "Prin-Raspi.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;		None
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;		None
  1637 ;; Return value:  Size  Location     Type
  1638 ;;                  1    wreg      void 
  1639 ;; Registers used:
  1640 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1641 ;; Tracked objects:
  1642 ;;		On entry : B00/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1646 ;;      Params:         0       0       0       0       0
  1647 ;;      Locals:         0       0       0       0       0
  1648 ;;      Temps:          0       3       0       0       0
  1649 ;;      Totals:         0       3       0       0       0
  1650 ;;Total ram usage:        3 bytes
  1651 ;; Hardware stack levels required when called:    7
  1652 ;; This function calls:
  1653 ;;		_LCD_CURSOR
  1654 ;;		_LCD_DATO
  1655 ;;		_LCD_STRING
  1656 ;;		_config
  1657 ;;		_lcd_init
  1658 ;;		_mandar
  1659 ;;		_spiInit
  1660 ;;		_sprintf
  1661 ;; This function is called by:
  1662 ;;		Startup code after reset
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1666                           	file	"Prin-Raspi.c"
  1667                           	line	67
  1668                           global __pmaintext
  1669                           __pmaintext:	;psect for function _main
  1670  002A                     psect	maintext
  1671                           	file	"Prin-Raspi.c"
  1672                           	line	67
  1673                           	global	__size_of_main
  1674                           	__size_of_main	equ	__end_of_main-_main
  1675  0188                     	
  1676                           _main:	
  1677  002A                     ;incstack = 0
  1678                           	opt	stack 1
  1679                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1680                           	line	68
  1681                           	
  1682                           l1873:	
  1683  002A                     ;Prin-Raspi.c: 68: TRISD = 0x00;
  1684                           	bsf	status, 5	;RP0=1, select bank1
  1685  002A  1683               	bcf	status, 6	;RP1=0, select bank1
  1686  002B  1303               	clrf	(136)^080h	;volatile
  1687  002C  0188               	line	69
  1688                           ;Prin-Raspi.c: 69: TRISB = 0x00;
  1689                           	clrf	(134)^080h	;volatile
  1690  002D  0186               	line	70
  1691                           	
  1692                           l1875:	
  1693  002E                     ;Prin-Raspi.c: 70: TRISCbits.TRISC0 = 1;
  1694                           	bsf	(135)^080h,0	;volatile
  1695  002E  1407               	line	71
  1696                           ;Prin-Raspi.c: 71: ANSEL = 0;
  1697                           	bsf	status, 5	;RP0=1, select bank3
  1698  002F  1683               	bsf	status, 6	;RP1=1, select bank3
  1699  0030  1703               	clrf	(392)^0180h	;volatile
  1700  0031  0188               	line	72
  1701                           ;Prin-Raspi.c: 72: ANSELH = 0;
  1702                           	clrf	(393)^0180h	;volatile
  1703  0032  0189               	line	73
  1704                           ;Prin-Raspi.c: 73: PORTB = 0;
  1705                           	bcf	status, 5	;RP0=0, select bank0
  1706  0033  1283               	bcf	status, 6	;RP1=0, select bank0
  1707  0034  1303               	clrf	(6)	;volatile
  1708  0035  0186               	line	74
  1709                           ;Prin-Raspi.c: 74: PORTA = 0;
  1710                           	clrf	(5)	;volatile
  1711  0036  0185               	line	75
  1712                           ;Prin-Raspi.c: 75: PORTD = 0;
  1713                           	clrf	(8)	;volatile
  1714  0037  0188               	line	76
  1715                           	
  1716                           l1877:	
  1717  0038                     ;Prin-Raspi.c: 76: ANSEL = 0B11111111;
  1718                           	movlw	low(0FFh)
  1719  0038  30FF               	bsf	status, 5	;RP0=1, select bank3
  1720  0039  1683               	bsf	status, 6	;RP1=1, select bank3
  1721  003A  1703               	movwf	(392)^0180h	;volatile
  1722  003B  0088               	line	77
  1723                           	
  1724                           l1879:	
  1725  003C                     ;Prin-Raspi.c: 77: TRISA = 0B11111111;
  1726                           	movlw	low(0FFh)
  1727  003C  30FF               	bsf	status, 5	;RP0=1, select bank1
  1728  003D  1683               	bcf	status, 6	;RP1=0, select bank1
  1729  003E  1303               	movwf	(133)^080h	;volatile
  1730  003F  0085               	line	78
  1731                           	
  1732                           l1881:	
  1733  0040                     ;Prin-Raspi.c: 78: INTCONbits.GIE = 1;
  1734                           	bsf	(11),7	;volatile
  1735  0040  178B               	line	79
  1736                           	
  1737                           l1883:	
  1738  0041                     ;Prin-Raspi.c: 79: INTCONbits.PEIE = 1;
  1739                           	bsf	(11),6	;volatile
  1740  0041  170B               	line	80
  1741                           	
  1742                           l1885:	
  1743  0042                     ;Prin-Raspi.c: 80: PIR1bits.SSPIF = 0;
  1744                           	bcf	status, 5	;RP0=0, select bank0
  1745  0042  1283               	bcf	status, 6	;RP1=0, select bank0
  1746  0043  1303               	bcf	(12),3	;volatile
  1747  0044  118C               	line	81
  1748                           	
  1749                           l1887:	
  1750  0045                     ;Prin-Raspi.c: 81: PIE1bits.SSPIE = 1;
  1751                           	bsf	status, 5	;RP0=1, select bank1
  1752  0045  1683               	bcf	status, 6	;RP1=0, select bank1
  1753  0046  1303               	bsf	(140)^080h,3	;volatile
  1754  0047  158C               	line	82
  1755                           	
  1756                           l1889:	
  1757  0048                     ;Prin-Raspi.c: 82: TRISAbits.TRISA5 = 1;
  1758                           	bsf	(133)^080h,5	;volatile
  1759  0048  1685               	line	83
  1760                           	
  1761                           l1891:	
  1762  0049                     ;Prin-Raspi.c: 83: spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, 
                                 SPI_IDLE_2_ACTIVE);
  1763                           	bcf	status, 5	;RP0=0, select bank0
  1764  0049  1283               	bcf	status, 6	;RP1=0, select bank0
  1765  004A  1303               	clrf	(spiInit@sDataSample)
  1766  004B  01CA               	clrf	(spiInit@sClockIdle)
  1767  004C  01CB               	clrf	(spiInit@sTransmitEdge)
  1768  004D  01CC               	movlw	low(024h)
  1769  004E  3024               	fcall	_spiInit
  1770  004F  120A  118A  2600  120A  118A  	line	84
  1771                           	
  1772                           l1893:	
  1773  0054                     ;Prin-Raspi.c: 84: config();
  1774                           	fcall	_config
  1775  0054  120A  118A  2683  120A  118A  	line	85
  1776                           	
  1777                           l1895:	
  1778  0059                     ;Prin-Raspi.c: 85: lcd_init();
  1779                           	fcall	_lcd_init
  1780  0059  120A  118A  261F  120A  118A  	line	86
  1781                           	
  1782                           l1897:	
  1783  005E                     ;Prin-Raspi.c: 86: LCD_STRING("JOSE JAVIER");
  1784                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  1785  005E  3048               	bcf	status, 5	;RP0=0, select bank0
  1786  005F  1283               	bcf	status, 6	;RP1=0, select bank0
  1787  0060  1303               	movwf	(LCD_STRING@a)
  1788  0061  00CC               	movlw	80h
  1789  0062  3080               	movwf	(LCD_STRING@a+1)
  1790  0063  00CD               	fcall	_LCD_STRING
  1791  0064  120A  118A  24B0  120A  118A  	line	87
  1792                           	
  1793                           l1899:	
  1794  0069                     ;Prin-Raspi.c: 87: LCD_DATO(0xC0);
  1795                           	movlw	0C0h
  1796  0069  30C0               	bcf	status, 5	;RP0=0, select bank0
  1797  006A  1283               	bcf	status, 6	;RP1=0, select bank0
  1798  006B  1303               	movwf	(LCD_DATO@var)
  1799  006C  00CA               	movlw	0
  1800  006D  3000               	movwf	((LCD_DATO@var))+1
  1801  006E  00CB               	fcall	_LCD_DATO
  1802  006F  120A  118A  25D3  120A  118A  	line	88
  1803                           	
  1804                           l1901:	
  1805  0074                     ;Prin-Raspi.c: 88: LCD_STRING("ESTRADA  #17078");
  1806                           	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  1807  0074  3038               	bcf	status, 5	;RP0=0, select bank0
  1808  0075  1283               	bcf	status, 6	;RP1=0, select bank0
  1809  0076  1303               	movwf	(LCD_STRING@a)
  1810  0077  00CC               	movlw	80h
  1811  0078  3080               	movwf	(LCD_STRING@a+1)
  1812  0079  00CD               	fcall	_LCD_STRING
  1813  007A  120A  118A  24B0  120A  118A  	line	89
  1814                           	
  1815                           l1903:	
  1816  007F                     ;Prin-Raspi.c: 89: _delay((unsigned long)((500)*(4000000/4000.0)));
  1817                           	opt asmopt_push
  1818                           opt asmopt_off
  1819                           movlw  3
  1820  007F  3003               	bcf	status, 5	;RP0=0, select bank0
  1821  0080  1283               	bcf	status, 6	;RP1=0, select bank0
  1822  0081  1303               movwf	((??_main+0)+0+2),f
  1823  0082  00EF               movlw	138
  1824  0083  308A               movwf	((??_main+0)+0+1),f
  1825  0084  00EE               	movlw	85
  1826  0085  3055               movwf	((??_main+0)+0),f
  1827  0086  00ED               	u1567:
  1828  0087                     decfsz	((??_main+0)+0),f
  1829  0087  0BED               	goto	u1567
  1830  0088  2887               	decfsz	((??_main+0)+0+1),f
  1831  0089  0BEE               	goto	u1567
  1832  008A  2887               	decfsz	((??_main+0)+0+2),f
  1833  008B  0BEF               	goto	u1567
  1834  008C  2887               opt asmopt_pop
  1835                           
  1836                           	line	90
  1837                           	
  1838                           l1905:	
  1839  008D                     ;Prin-Raspi.c: 90: LCD_DATO(0x01);
  1840                           	movlw	01h
  1841  008D  3001               	bcf	status, 5	;RP0=0, select bank0
  1842  008E  1283               	bcf	status, 6	;RP1=0, select bank0
  1843  008F  1303               	movwf	(LCD_DATO@var)
  1844  0090  00CA               	movlw	0
  1845  0091  3000               	movwf	((LCD_DATO@var))+1
  1846  0092  00CB               	fcall	_LCD_DATO
  1847  0093  120A  118A  25D3  120A  118A  	goto	l1907
  1848  0098  2899               	line	91
  1849                           ;Prin-Raspi.c: 91: while (1){ sprintf(valor1, "F Ll Dis Li  Sec");
  1850                           	
  1851                           l132:	
  1852  0099                     	
  1853                           l1907:	
  1854  0099                     	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  1855  0099  3027               	bcf	status, 5	;RP0=0, select bank0
  1856  009A  1283               	bcf	status, 6	;RP1=0, select bank0
  1857  009B  1303               	movwf	(??_main+0)+0
  1858  009C  00ED               	movf	(??_main+0)+0,w
  1859  009D  086D               	movwf	(sprintf@f)
  1860  009E  00D8               	movlw	(low(_valor1|((0x0)<<8)))&0ffh
  1861  009F  30A0               	fcall	_sprintf
  1862  00A0  120A  118A  21B2  120A  118A  	line	93
  1863                           	
  1864                           l1909:	
  1865  00A5                     ;Prin-Raspi.c: 93: LCD_CURSOR(1,1);
  1866                           	movlw	01h
  1867  00A5  3001               	bcf	status, 5	;RP0=0, select bank0
  1868  00A6  1283               	bcf	status, 6	;RP1=0, select bank0
  1869  00A7  1303               	movwf	(LCD_CURSOR@a)
  1870  00A8  00CE               	movlw	0
  1871  00A9  3000               	movwf	((LCD_CURSOR@a))+1
  1872  00AA  00CF               	movlw	01h
  1873  00AB  3001               	movwf	(LCD_CURSOR@b)
  1874  00AC  00D0               	movlw	0
  1875  00AD  3000               	movwf	((LCD_CURSOR@b))+1
  1876  00AE  00D1               	fcall	_LCD_CURSOR
  1877  00AF  120A  118A  253B  120A  118A  	line	94
  1878                           	
  1879                           l1911:	
  1880  00B4                     ;Prin-Raspi.c: 94: LCD_STRING(valor1);
  1881                           	movlw	(low(_valor1|((0x0)<<8))&0ffh)
  1882  00B4  30A0               	bcf	status, 5	;RP0=0, select bank0
  1883  00B5  1283               	bcf	status, 6	;RP1=0, select bank0
  1884  00B6  1303               	movwf	(LCD_STRING@a)
  1885  00B7  00CC               	movlw	(0x0)
  1886  00B8  3000               	movwf	(LCD_STRING@a+1)
  1887  00B9  00CD               	fcall	_LCD_STRING
  1888  00BA  120A  118A  24B0  120A  118A  	line	95
  1889                           	
  1890                           l1913:	
  1891  00BF                     ;Prin-Raspi.c: 95: sprintf(valor, "%.1d %.1d  %.3d %.1d    %.d", B1, D1, C1, E1, A1);
  1892                           	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  1893  00BF  300B               	bcf	status, 5	;RP0=0, select bank0
  1894  00C0  1283               	bcf	status, 6	;RP1=0, select bank0
  1895  00C1  1303               	movwf	(??_main+0)+0
  1896  00C2  00ED               	movf	(??_main+0)+0,w
  1897  00C3  086D               	movwf	(sprintf@f)
  1898  00C4  00D8               	movf	(_B1+1),w
  1899  00C5  0873               	movwf	1+(?_sprintf)+01h
  1900  00C6  00DA               	movf	(_B1),w
  1901  00C7  0872               	movwf	0+(?_sprintf)+01h
  1902  00C8  00D9               	movf	(_D1+1),w
  1903  00C9  0823               	movwf	1+(?_sprintf)+03h
  1904  00CA  00DC               	movf	(_D1),w
  1905  00CB  0822               	movwf	0+(?_sprintf)+03h
  1906  00CC  00DB               	movf	(_C1+1),w
  1907  00CD  0825               	movwf	1+(?_sprintf)+05h
  1908  00CE  00DE               	movf	(_C1),w
  1909  00CF  0824               	movwf	0+(?_sprintf)+05h
  1910  00D0  00DD               	movf	(_E1+1),w
  1911  00D1  0821               	movwf	1+(?_sprintf)+07h
  1912  00D2  00E0               	movf	(_E1),w
  1913  00D3  0820               	movwf	0+(?_sprintf)+07h
  1914  00D4  00DF               	movf	(_A1+1),w
  1915  00D5  0875               	movwf	1+(?_sprintf)+09h
  1916  00D6  00E2               	movf	(_A1),w
  1917  00D7  0874               	movwf	0+(?_sprintf)+09h
  1918  00D8  00E1               	movlw	(low(_valor|((0x0)<<8)))&0ffh
  1919  00D9  303A               	fcall	_sprintf
  1920  00DA  120A  118A  21B2  120A  118A  	line	96
  1921                           	
  1922                           l1915:	
  1923  00DF                     ;Prin-Raspi.c: 96: LCD_CURSOR(2,1);
  1924                           	movlw	02h
  1925  00DF  3002               	bcf	status, 5	;RP0=0, select bank0
  1926  00E0  1283               	bcf	status, 6	;RP1=0, select bank0
  1927  00E1  1303               	movwf	(LCD_CURSOR@a)
  1928  00E2  00CE               	movlw	0
  1929  00E3  3000               	movwf	((LCD_CURSOR@a))+1
  1930  00E4  00CF               	movlw	01h
  1931  00E5  3001               	movwf	(LCD_CURSOR@b)
  1932  00E6  00D0               	movlw	0
  1933  00E7  3000               	movwf	((LCD_CURSOR@b))+1
  1934  00E8  00D1               	fcall	_LCD_CURSOR
  1935  00E9  120A  118A  253B  120A  118A  	line	97
  1936                           	
  1937                           l1917:	
  1938  00EE                     ;Prin-Raspi.c: 97: LCD_STRING(valor);
  1939                           	movlw	(low(_valor|((0x0)<<8))&0ffh)
  1940  00EE  303A               	bcf	status, 5	;RP0=0, select bank0
  1941  00EF  1283               	bcf	status, 6	;RP1=0, select bank0
  1942  00F0  1303               	movwf	(LCD_STRING@a)
  1943  00F1  00CC               	movlw	(0x0)
  1944  00F2  3000               	movwf	(LCD_STRING@a+1)
  1945  00F3  00CD               	fcall	_LCD_STRING
  1946  00F4  120A  118A  24B0  120A  118A  	line	99
  1947                           	
  1948                           l1919:	
  1949  00F9                     ;Prin-Raspi.c: 99: mandar(1);
  1950                           	movlw	01h
  1951  00F9  3001               	bcf	status, 5	;RP0=0, select bank0
  1952  00FA  1283               	bcf	status, 6	;RP1=0, select bank0
  1953  00FB  1303               	movwf	(mandar@dato)
  1954  00FC  00CA               	movlw	0
  1955  00FD  3000               	movwf	((mandar@dato))+1
  1956  00FE  00CB               	fcall	_mandar
  1957  00FF  120A  118A  26B9  120A  118A  	line	100
  1958                           ;Prin-Raspi.c: 100: while(!RCIF){
  1959                           	goto	l133
  1960  0104  2905               	
  1961                           l134:	
  1962  0105                     	line	101
  1963                           	
  1964                           l133:	
  1965  0105                     	line	100
  1966                           	bcf	status, 5	;RP0=0, select bank0
  1967  0105  1283               	bcf	status, 6	;RP1=0, select bank0
  1968  0106  1303               	btfss	(101/8),(101)&7	;volatile
  1969  0107  1E8C               	goto	u1511
  1970  0108  290A               	goto	u1510
  1971  0109  290B               u1511:
  1972  010A                     	goto	l133
  1973  010A  2905               u1510:
  1974  010B                     	goto	l1921
  1975  010B  290C               	
  1976                           l135:	
  1977  010C                     	line	102
  1978                           	
  1979                           l1921:	
  1980  010C                     ;Prin-Raspi.c: 101: };Prin-Raspi.c: 102: A1 = RCREG;
  1981                           	movf	(26),w	;volatile
  1982  010C  081A               	movwf	(??_main+0)+0
  1983  010D  00ED               	clrf	(??_main+0)+0+1
  1984  010E  01EE               	movf	0+(??_main+0)+0,w
  1985  010F  086D               	movwf	(_A1)
  1986  0110  00F4               	movf	1+(??_main+0)+0,w
  1987  0111  086E               	movwf	(_A1+1)
  1988  0112  00F5               	line	110
  1989                           ;Prin-Raspi.c: 110: _delay((unsigned long)((100)*(4000000/4000.0)));
  1990                           	opt asmopt_push
  1991                           opt asmopt_off
  1992                           movlw	130
  1993  0113  3082               	bcf	status, 5	;RP0=0, select bank0
  1994  0114  1283               	bcf	status, 6	;RP1=0, select bank0
  1995  0115  1303               movwf	((??_main+0)+0+1),f
  1996  0116  00EE               	movlw	221
  1997  0117  30DD               movwf	((??_main+0)+0),f
  1998  0118  00ED               	u1577:
  1999  0119                     decfsz	((??_main+0)+0),f
  2000  0119  0BED               	goto	u1577
  2001  011A  2919               	decfsz	((??_main+0)+0+1),f
  2002  011B  0BEE               	goto	u1577
  2003  011C  2919               opt asmopt_pop
  2004                           
  2005                           	line	113
  2006                           	
  2007                           l1923:	
  2008  011D                     ;Prin-Raspi.c: 113: mandar(2);
  2009                           	movlw	02h
  2010  011D  3002               	bcf	status, 5	;RP0=0, select bank0
  2011  011E  1283               	bcf	status, 6	;RP1=0, select bank0
  2012  011F  1303               	movwf	(mandar@dato)
  2013  0120  00CA               	movlw	0
  2014  0121  3000               	movwf	((mandar@dato))+1
  2015  0122  00CB               	fcall	_mandar
  2016  0123  120A  118A  26B9  120A  118A  	line	114
  2017                           ;Prin-Raspi.c: 114: while(!RCIF){
  2018                           	goto	l136
  2019  0128  2929               	
  2020                           l137:	
  2021  0129                     	line	115
  2022                           	
  2023                           l136:	
  2024  0129                     	line	114
  2025                           	bcf	status, 5	;RP0=0, select bank0
  2026  0129  1283               	bcf	status, 6	;RP1=0, select bank0
  2027  012A  1303               	btfss	(101/8),(101)&7	;volatile
  2028  012B  1E8C               	goto	u1521
  2029  012C  292E               	goto	u1520
  2030  012D  292F               u1521:
  2031  012E                     	goto	l136
  2032  012E  2929               u1520:
  2033  012F                     	goto	l1925
  2034  012F  2930               	
  2035                           l138:	
  2036  0130                     	line	116
  2037                           	
  2038                           l1925:	
  2039  0130                     ;Prin-Raspi.c: 115: };Prin-Raspi.c: 116: B1 = RCREG;
  2040                           	movf	(26),w	;volatile
  2041  0130  081A               	movwf	(??_main+0)+0
  2042  0131  00ED               	clrf	(??_main+0)+0+1
  2043  0132  01EE               	movf	0+(??_main+0)+0,w
  2044  0133  086D               	movwf	(_B1)
  2045  0134  00F2               	movf	1+(??_main+0)+0,w
  2046  0135  086E               	movwf	(_B1+1)
  2047  0136  00F3               	line	124
  2048                           ;Prin-Raspi.c: 124: _delay((unsigned long)((100)*(4000000/4000.0)));
  2049                           	opt asmopt_push
  2050                           opt asmopt_off
  2051                           movlw	130
  2052  0137  3082               	bcf	status, 5	;RP0=0, select bank0
  2053  0138  1283               	bcf	status, 6	;RP1=0, select bank0
  2054  0139  1303               movwf	((??_main+0)+0+1),f
  2055  013A  00EE               	movlw	221
  2056  013B  30DD               movwf	((??_main+0)+0),f
  2057  013C  00ED               	u1587:
  2058  013D                     decfsz	((??_main+0)+0),f
  2059  013D  0BED               	goto	u1587
  2060  013E  293D               	decfsz	((??_main+0)+0+1),f
  2061  013F  0BEE               	goto	u1587
  2062  0140  293D               opt asmopt_pop
  2063                           
  2064                           	line	127
  2065                           	
  2066                           l1927:	
  2067  0141                     ;Prin-Raspi.c: 127: mandar(3);
  2068                           	movlw	03h
  2069  0141  3003               	bcf	status, 5	;RP0=0, select bank0
  2070  0142  1283               	bcf	status, 6	;RP1=0, select bank0
  2071  0143  1303               	movwf	(mandar@dato)
  2072  0144  00CA               	movlw	0
  2073  0145  3000               	movwf	((mandar@dato))+1
  2074  0146  00CB               	fcall	_mandar
  2075  0147  120A  118A  26B9  120A  118A  	line	128
  2076                           ;Prin-Raspi.c: 128: while(!RCIF){
  2077                           	goto	l139
  2078  014C  294D               	
  2079                           l140:	
  2080  014D                     	line	129
  2081                           	
  2082                           l139:	
  2083  014D                     	line	128
  2084                           	bcf	status, 5	;RP0=0, select bank0
  2085  014D  1283               	bcf	status, 6	;RP1=0, select bank0
  2086  014E  1303               	btfss	(101/8),(101)&7	;volatile
  2087  014F  1E8C               	goto	u1531
  2088  0150  2952               	goto	u1530
  2089  0151  2953               u1531:
  2090  0152                     	goto	l139
  2091  0152  294D               u1530:
  2092  0153                     	goto	l1929
  2093  0153  2954               	
  2094                           l141:	
  2095  0154                     	line	130
  2096                           	
  2097                           l1929:	
  2098  0154                     ;Prin-Raspi.c: 129: };Prin-Raspi.c: 130: C1 = RCREG;
  2099                           	movf	(26),w	;volatile
  2100  0154  081A               	movwf	(??_main+0)+0
  2101  0155  00ED               	clrf	(??_main+0)+0+1
  2102  0156  01EE               	movf	0+(??_main+0)+0,w
  2103  0157  086D               	movwf	(_C1)
  2104  0158  00A4               	movf	1+(??_main+0)+0,w
  2105  0159  086E               	movwf	(_C1+1)
  2106  015A  00A5               	line	138
  2107                           ;Prin-Raspi.c: 138: _delay((unsigned long)((100)*(4000000/4000.0)));
  2108                           	opt asmopt_push
  2109                           opt asmopt_off
  2110                           movlw	130
  2111  015B  3082               	bcf	status, 5	;RP0=0, select bank0
  2112  015C  1283               	bcf	status, 6	;RP1=0, select bank0
  2113  015D  1303               movwf	((??_main+0)+0+1),f
  2114  015E  00EE               	movlw	221
  2115  015F  30DD               movwf	((??_main+0)+0),f
  2116  0160  00ED               	u1597:
  2117  0161                     decfsz	((??_main+0)+0),f
  2118  0161  0BED               	goto	u1597
  2119  0162  2961               	decfsz	((??_main+0)+0+1),f
  2120  0163  0BEE               	goto	u1597
  2121  0164  2961               opt asmopt_pop
  2122                           
  2123                           	line	141
  2124                           	
  2125                           l1931:	
  2126  0165                     ;Prin-Raspi.c: 141: mandar(4);
  2127                           	movlw	04h
  2128  0165  3004               	bcf	status, 5	;RP0=0, select bank0
  2129  0166  1283               	bcf	status, 6	;RP1=0, select bank0
  2130  0167  1303               	movwf	(mandar@dato)
  2131  0168  00CA               	movlw	0
  2132  0169  3000               	movwf	((mandar@dato))+1
  2133  016A  00CB               	fcall	_mandar
  2134  016B  120A  118A  26B9  120A  118A  	line	142
  2135                           ;Prin-Raspi.c: 142: while(!RCIF){
  2136                           	goto	l142
  2137  0170  2971               	
  2138                           l143:	
  2139  0171                     	line	143
  2140                           	
  2141                           l142:	
  2142  0171                     	line	142
  2143                           	bcf	status, 5	;RP0=0, select bank0
  2144  0171  1283               	bcf	status, 6	;RP1=0, select bank0
  2145  0172  1303               	btfss	(101/8),(101)&7	;volatile
  2146  0173  1E8C               	goto	u1541
  2147  0174  2976               	goto	u1540
  2148  0175  2977               u1541:
  2149  0176                     	goto	l142
  2150  0176  2971               u1540:
  2151  0177                     	goto	l1933
  2152  0177  2978               	
  2153                           l144:	
  2154  0178                     	line	144
  2155                           	
  2156                           l1933:	
  2157  0178                     ;Prin-Raspi.c: 143: };Prin-Raspi.c: 144: D1 = RCREG;
  2158                           	movf	(26),w	;volatile
  2159  0178  081A               	movwf	(??_main+0)+0
  2160  0179  00ED               	clrf	(??_main+0)+0+1
  2161  017A  01EE               	movf	0+(??_main+0)+0,w
  2162  017B  086D               	movwf	(_D1)
  2163  017C  00A2               	movf	1+(??_main+0)+0,w
  2164  017D  086E               	movwf	(_D1+1)
  2165  017E  00A3               	line	152
  2166                           ;Prin-Raspi.c: 152: _delay((unsigned long)((100)*(4000000/4000.0)));
  2167                           	opt asmopt_push
  2168                           opt asmopt_off
  2169                           movlw	130
  2170  017F  3082               	bcf	status, 5	;RP0=0, select bank0
  2171  0180  1283               	bcf	status, 6	;RP1=0, select bank0
  2172  0181  1303               movwf	((??_main+0)+0+1),f
  2173  0182  00EE               	movlw	221
  2174  0183  30DD               movwf	((??_main+0)+0),f
  2175  0184  00ED               	u1607:
  2176  0185                     decfsz	((??_main+0)+0),f
  2177  0185  0BED               	goto	u1607
  2178  0186  2985               	decfsz	((??_main+0)+0+1),f
  2179  0187  0BEE               	goto	u1607
  2180  0188  2985               opt asmopt_pop
  2181                           
  2182                           	line	155
  2183                           	
  2184                           l1935:	
  2185  0189                     ;Prin-Raspi.c: 155: mandar(5);
  2186                           	movlw	05h
  2187  0189  3005               	bcf	status, 5	;RP0=0, select bank0
  2188  018A  1283               	bcf	status, 6	;RP1=0, select bank0
  2189  018B  1303               	movwf	(mandar@dato)
  2190  018C  00CA               	movlw	0
  2191  018D  3000               	movwf	((mandar@dato))+1
  2192  018E  00CB               	fcall	_mandar
  2193  018F  120A  118A  26B9  120A  118A  	line	156
  2194                           ;Prin-Raspi.c: 156: while(!RCIF){
  2195                           	goto	l145
  2196  0194  2995               	
  2197                           l146:	
  2198  0195                     	line	157
  2199                           	
  2200                           l145:	
  2201  0195                     	line	156
  2202                           	bcf	status, 5	;RP0=0, select bank0
  2203  0195  1283               	bcf	status, 6	;RP1=0, select bank0
  2204  0196  1303               	btfss	(101/8),(101)&7	;volatile
  2205  0197  1E8C               	goto	u1551
  2206  0198  299A               	goto	u1550
  2207  0199  299B               u1551:
  2208  019A                     	goto	l145
  2209  019A  2995               u1550:
  2210  019B                     	goto	l1937
  2211  019B  299C               	
  2212                           l147:	
  2213  019C                     	line	158
  2214                           	
  2215                           l1937:	
  2216  019C                     ;Prin-Raspi.c: 157: };Prin-Raspi.c: 158: E1 = RCREG;
  2217                           	movf	(26),w	;volatile
  2218  019C  081A               	movwf	(??_main+0)+0
  2219  019D  00ED               	clrf	(??_main+0)+0+1
  2220  019E  01EE               	movf	0+(??_main+0)+0,w
  2221  019F  086D               	movwf	(_E1)
  2222  01A0  00A0               	movf	1+(??_main+0)+0,w
  2223  01A1  086E               	movwf	(_E1+1)
  2224  01A2  00A1               	line	166
  2225                           ;Prin-Raspi.c: 166: _delay((unsigned long)((100)*(4000000/4000.0)));
  2226                           	opt asmopt_push
  2227                           opt asmopt_off
  2228                           movlw	130
  2229  01A3  3082               	bcf	status, 5	;RP0=0, select bank0
  2230  01A4  1283               	bcf	status, 6	;RP1=0, select bank0
  2231  01A5  1303               movwf	((??_main+0)+0+1),f
  2232  01A6  00EE               	movlw	221
  2233  01A7  30DD               movwf	((??_main+0)+0),f
  2234  01A8  00ED               	u1617:
  2235  01A9                     decfsz	((??_main+0)+0),f
  2236  01A9  0BED               	goto	u1617
  2237  01AA  29A9               	decfsz	((??_main+0)+0+1),f
  2238  01AB  0BEE               	goto	u1617
  2239  01AC  29A9               opt asmopt_pop
  2240                           
  2241                           	goto	l1907
  2242  01AD  2899               	line	167
  2243                           	
  2244                           l148:	
  2245  01AE                     	line	91
  2246                           	goto	l1907
  2247  01AE  2899               	
  2248                           l149:	
  2249  01AF                     	line	168
  2250                           	
  2251                           l150:	
  2252  01AF                     	global	start
  2253                           	ljmp	start
  2254  01AF  120A  118A  280C   	opt stack 0
  2255                           GLOBAL	__end_of_main
  2256                           	__end_of_main:
  2257  01B2                     	signat	_main,89
  2258                           	global	_sprintf
  2259                           
  2260 ;; *************** function _sprintf *****************
  2261 ;; Defined at:
  2262 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;  sp              1    wreg     PTR unsigned char 
  2265 ;;		 -> valor(16), valor1(16), 
  2266 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  2267 ;;		 -> STR_4(28), STR_3(17), 
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;  sp              1   32[BANK0 ] PTR unsigned char 
  2270 ;;		 -> valor(16), valor1(16), 
  2271 ;;  tmpval          4    0        struct .
  2272 ;;  val             2   30[BANK0 ] unsigned int 
  2273 ;;  cp              2    0        PTR const unsigned char 
  2274 ;;  len             2    0        unsigned int 
  2275 ;;  c               1   34[BANK0 ] unsigned char 
  2276 ;;  prec            1   33[BANK0 ] char 
  2277 ;;  flag            1   29[BANK0 ] unsigned char 
  2278 ;;  ap              1   28[BANK0 ] PTR void [1]
  2279 ;;		 -> ?_sprintf(2), 
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  2   14[BANK0 ] int 
  2282 ;; Registers used:
  2283 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2289 ;;      Params:         0      11       0       0       0
  2290 ;;      Locals:         0       7       0       0       0
  2291 ;;      Temps:          0       3       0       0       0
  2292 ;;      Totals:         0      21       0       0       0
  2293 ;;Total ram usage:       21 bytes
  2294 ;; Hardware stack levels used:    1
  2295 ;; Hardware stack levels required when called:    4
  2296 ;; This function calls:
  2297 ;;		___bmul
  2298 ;;		___lwdiv
  2299 ;;		___lwmod
  2300 ;;		_isdigit
  2301 ;; This function is called by:
  2302 ;;		_main
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2306                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2307                           	line	500
  2308                           global __ptext1
  2309                           __ptext1:	;psect for function _sprintf
  2310  01B2                     psect	text1
  2311                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2312                           	line	500
  2313                           	global	__size_of_sprintf
  2314                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  2315  0185                     	
  2316                           _sprintf:	
  2317  01B2                     ;incstack = 0
  2318                           	opt	stack 3
  2319                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2320                           ;sprintf@sp stored from wreg
  2321                           	bcf	status, 5	;RP0=0, select bank0
  2322  01B2  1283               	bcf	status, 6	;RP1=0, select bank0
  2323  01B3  1303               	movwf	(sprintf@sp)
  2324  01B4  00EA               	line	545
  2325                           	
  2326                           l1779:	
  2327  01B5                     ;doprnt.c: 502: va_list ap;;doprnt.c: 507: char c;;doprnt.c: 516: signed char prec;;dopr
                                 nt.c: 520: unsigned char flag;;doprnt.c: 535: union {;doprnt.c: 536: unsigned long vd;;d
                                 oprnt.c: 537: double integ;;doprnt.c: 538: } tmpval;;doprnt.c: 540: unsigned int val;;do
                                 prnt.c: 541: unsigned len;;doprnt.c: 542: const char * cp;;doprnt.c: 545: *ap = __va_sta
                                 rt();
  2328                           	movlw	(low(?_sprintf|((0x0)<<8)+01h))&0ffh
  2329  01B5  3059               	movwf	(??_sprintf+0)+0
  2330  01B6  00E3               	movf	(??_sprintf+0)+0,w
  2331  01B7  0863               	movwf	(sprintf@ap)
  2332  01B8  00E6               	line	548
  2333                           ;doprnt.c: 548: while((c = *f++)) {
  2334                           	goto	l1855
  2335  01B9  2B1D               	
  2336                           l326:	
  2337  01BA                     	line	550
  2338                           	
  2339                           l1781:	
  2340  01BA                     ;doprnt.c: 550: if(c != '%')
  2341                           		movlw	37
  2342  01BA  3025               	xorwf	((sprintf@c)),w
  2343  01BB  066C               	btfsc	status,2
  2344  01BC  1903               	goto	u1351
  2345  01BD  29BF               	goto	u1350
  2346  01BE  29C0               u1351:
  2347  01BF                     	goto	l1787
  2348  01BF  29CC               u1350:
  2349  01C0                     	line	553
  2350                           	
  2351                           l1783:	
  2352  01C0                     ;doprnt.c: 552: {;doprnt.c: 553: ((*sp++ = (c)));
  2353                           	movf	(sprintf@c),w
  2354  01C0  086C               	movwf	(??_sprintf+0)+0
  2355  01C1  00E3               	movf	(sprintf@sp),w
  2356  01C2  086A               	movwf	fsr0
  2357  01C3  0084               	movf	(??_sprintf+0)+0,w
  2358  01C4  0863               	bcf	status, 7	;select IRP bank0
  2359  01C5  1383               	movwf	indf
  2360  01C6  0080               	
  2361                           l1785:	
  2362  01C7                     	movlw	low(01h)
  2363  01C7  3001               	movwf	(??_sprintf+0)+0
  2364  01C8  00E3               	movf	(??_sprintf+0)+0,w
  2365  01C9  0863               	addwf	(sprintf@sp),f
  2366  01CA  07EA               	line	554
  2367                           ;doprnt.c: 554: continue;
  2368                           	goto	l1855
  2369  01CB  2B1D               	line	555
  2370                           	
  2371                           l327:	
  2372  01CC                     	line	560
  2373                           	
  2374                           l1787:	
  2375  01CC                     ;doprnt.c: 555: };doprnt.c: 560: flag = 0;
  2376                           	clrf	(sprintf@flag)
  2377  01CC  01E7               	line	623
  2378                           	
  2379                           l1789:	
  2380  01CD                     ;doprnt.c: 623: if(*f == '.') {
  2381                           	movf	(sprintf@f),w
  2382  01CD  0858               	movwf	fsr0
  2383  01CE  0084               	fcall	stringdir
  2384  01CF  120A  118A  240A  120A  118A  	xorlw	02Eh
  2385  01D4  3A2E               	skipz
  2386  01D5  1D03               	goto	u1361
  2387  01D6  29D8               	goto	u1360
  2388  01D7  29D9               u1361:
  2389  01D8                     	goto	l1801
  2390  01D8  2A11               u1360:
  2391  01D9                     	line	625
  2392                           	
  2393                           l1791:	
  2394  01D9                     ;doprnt.c: 625: f++;
  2395                           	movlw	low(01h)
  2396  01D9  3001               	movwf	(??_sprintf+0)+0
  2397  01DA  00E3               	movf	(??_sprintf+0)+0,w
  2398  01DB  0863               	addwf	(sprintf@f),f
  2399  01DC  07D8               	line	640
  2400                           	
  2401                           l1793:	
  2402  01DD                     ;doprnt.c: 639: {;doprnt.c: 640: prec = 0;
  2403                           	clrf	(sprintf@prec)
  2404  01DD  01EB               	line	641
  2405                           ;doprnt.c: 641: while(isdigit((unsigned)*f))
  2406                           	goto	l1799
  2407  01DE  29FF               	
  2408                           l330:	
  2409  01DF                     	line	642
  2410                           	
  2411                           l1795:	
  2412  01DF                     ;doprnt.c: 642: prec = prec*10 + *f++ - '0';
  2413                           	bcf	status, 5	;RP0=0, select bank0
  2414  01DF  1283               	bcf	status, 6	;RP1=0, select bank0
  2415  01E0  1303               	movf	(sprintf@f),w
  2416  01E1  0858               	movwf	fsr0
  2417  01E2  0084               	fcall	stringdir
  2418  01E3  120A  118A  240A  120A  118A  	movwf	(??_sprintf+0)+0
  2419  01E8  00E3               	movlw	low(0Ah)
  2420  01E9  300A               	movwf	(??_sprintf+1)+0
  2421  01EA  00E4               	movf	(??_sprintf+1)+0,w
  2422  01EB  0864               	movwf	(___bmul@multiplicand)
  2423  01EC  00CA               	movf	(sprintf@prec),w
  2424  01ED  086B               	fcall	___bmul
  2425  01EE  120A  118A  263E  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2426  01F3  1283               	bcf	status, 6	;RP1=0, select bank0
  2427  01F4  1303               	addwf	(??_sprintf+0)+0,w
  2428  01F5  0763               	addlw	-48
  2429  01F6  3ED0               	movwf	(??_sprintf+2)+0
  2430  01F7  00E5               	movf	(??_sprintf+2)+0,w
  2431  01F8  0865               	movwf	(sprintf@prec)
  2432  01F9  00EB               	
  2433                           l1797:	
  2434  01FA                     	movlw	low(01h)
  2435  01FA  3001               	movwf	(??_sprintf+0)+0
  2436  01FB  00E3               	movf	(??_sprintf+0)+0,w
  2437  01FC  0863               	addwf	(sprintf@f),f
  2438  01FD  07D8               	goto	l1799
  2439  01FE  29FF               	
  2440                           l329:	
  2441  01FF                     	line	641
  2442                           	
  2443                           l1799:	
  2444  01FF                     	movf	(sprintf@f),w
  2445  01FF  0858               	movwf	fsr0
  2446  0200  0084               	fcall	stringdir
  2447  0201  120A  118A  240A  120A  118A  	fcall	_isdigit
  2448  0206  120A  118A  2659  120A  118A  	btfsc	status,0
  2449  020B  1803               	goto	u1371
  2450  020C  2A0E               	goto	u1370
  2451  020D  2A0F               u1371:
  2452  020E                     	goto	l1795
  2453  020E  29DF               u1370:
  2454  020F                     	goto	l1805
  2455  020F  2A1B               	
  2456                           l331:	
  2457  0210                     	line	644
  2458                           ;doprnt.c: 643: };doprnt.c: 644: } else {
  2459                           	goto	l1805
  2460  0210  2A1B               	
  2461                           l328:	
  2462  0211                     	line	645
  2463                           	
  2464                           l1801:	
  2465  0211                     ;doprnt.c: 645: prec = 0;
  2466                           	bcf	status, 5	;RP0=0, select bank0
  2467  0211  1283               	bcf	status, 6	;RP1=0, select bank0
  2468  0212  1303               	clrf	(sprintf@prec)
  2469  0213  01EB               	goto	l1805
  2470  0214  2A1B               	line	649
  2471                           	
  2472                           l332:	
  2473  0215                     	line	654
  2474                           ;doprnt.c: 649: };doprnt.c: 654: switch(c = *f++) {
  2475                           	goto	l1805
  2476  0215  2A1B               	line	656
  2477                           ;doprnt.c: 656: case 0:
  2478                           	
  2479                           l334:	
  2480  0216                     	line	657
  2481                           ;doprnt.c: 657: goto alldone;
  2482                           	goto	l1857
  2483  0216  2B31               	line	716
  2484                           ;doprnt.c: 716: case 'd':
  2485                           	
  2486                           l336:	
  2487  0217                     	goto	l1807
  2488  0217  2A32               	line	717
  2489                           	
  2490                           l337:	
  2491  0218                     	line	718
  2492                           ;doprnt.c: 717: case 'i':;doprnt.c: 718: break;
  2493                           	goto	l1807
  2494  0218  2A32               	line	821
  2495                           ;doprnt.c: 821: default:
  2496                           	
  2497                           l339:	
  2498  0219                     	line	832
  2499                           ;doprnt.c: 832: continue;
  2500                           	goto	l1855
  2501  0219  2B1D               	line	841
  2502                           	
  2503                           l1803:	
  2504  021A                     ;doprnt.c: 841: }
  2505                           	goto	l1807
  2506  021A  2A32               	line	654
  2507                           	
  2508                           l333:	
  2509  021B                     	
  2510                           l1805:	
  2511  021B                     	movlw	01h
  2512  021B  3001               	bcf	status, 5	;RP0=0, select bank0
  2513  021C  1283               	bcf	status, 6	;RP1=0, select bank0
  2514  021D  1303               	addwf	(sprintf@f),f
  2515  021E  07D8               	movlw	-01h
  2516  021F  30FF               	addwf	(sprintf@f),w
  2517  0220  0758               	movwf	fsr0
  2518  0221  0084               	fcall	stringdir
  2519  0222  120A  118A  240A  120A  118A  	movwf	(sprintf@c)
  2520  0227  00EC               	; Switch size 1, requested type "space"
  2521                           ; Number of cases is 3, Range of values is 0 to 105
  2522                           ; switch strategies available:
  2523                           ; Name         Instructions Cycles
  2524                           ; simple_byte           10     6 (average)
  2525                           ; jumptable            260     6 (fixed)
  2526                           ;	Chosen strategy is simple_byte
  2527                           
  2528                           	opt asmopt_push
  2529                           	opt asmopt_off
  2530                           	xorlw	0^0	; case 0
  2531  0228  3A00               	skipnz
  2532  0229  1903               	goto	l1857
  2533  022A  2B31               	xorlw	100^0	; case 100
  2534  022B  3A64               	skipnz
  2535  022C  1903               	goto	l1807
  2536  022D  2A32               	xorlw	105^100	; case 105
  2537  022E  3A0D               	skipnz
  2538  022F  1903               	goto	l1807
  2539  0230  2A32               	goto	l1855
  2540  0231  2B1D               	opt asmopt_pop
  2541                           
  2542                           	line	841
  2543                           	
  2544                           l338:	
  2545  0232                     	line	1278
  2546                           	
  2547                           l1807:	
  2548  0232                     ;doprnt.c: 1272: {;doprnt.c: 1278: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
                                 
  2549                           	movf	(sprintf@ap),w
  2550  0232  0866               	movwf	fsr0
  2551  0233  0084               	bcf	status, 7	;select IRP bank0
  2552  0234  1383               	movf	indf,w
  2553  0235  0800               	movwf	(sprintf@val)
  2554  0236  00E8               	incf	fsr0,f
  2555  0237  0A84               	movf	indf,w
  2556  0238  0800               	movwf	(sprintf@val+1)
  2557  0239  00E9               	
  2558                           l1809:	
  2559  023A                     	movlw	low(02h)
  2560  023A  3002               	movwf	(??_sprintf+0)+0
  2561  023B  00E3               	movf	(??_sprintf+0)+0,w
  2562  023C  0863               	addwf	(sprintf@ap),f
  2563  023D  07E6               	line	1280
  2564                           	
  2565                           l1811:	
  2566  023E                     ;doprnt.c: 1280: if((int)val < 0) {
  2567                           	btfss	(sprintf@val+1),7
  2568  023E  1FE9               	goto	u1381
  2569  023F  2A41               	goto	u1380
  2570  0240  2A42               u1381:
  2571  0241                     	goto	l1817
  2572  0241  2A4C               u1380:
  2573  0242                     	line	1281
  2574                           	
  2575                           l1813:	
  2576  0242                     ;doprnt.c: 1281: flag |= 0x03;
  2577                           	movlw	low(03h)
  2578  0242  3003               	movwf	(??_sprintf+0)+0
  2579  0243  00E3               	movf	(??_sprintf+0)+0,w
  2580  0244  0863               	iorwf	(sprintf@flag),f
  2581  0245  04E7               	line	1282
  2582                           	
  2583                           l1815:	
  2584  0246                     ;doprnt.c: 1282: val = -val;
  2585                           	comf	(sprintf@val),f
  2586  0246  09E8               	comf	(sprintf@val+1),f
  2587  0247  09E9               	incf	(sprintf@val),f
  2588  0248  0AE8               	skipnz
  2589  0249  1903               	incf	(sprintf@val+1),f
  2590  024A  0AE9               	goto	l1817
  2591  024B  2A4C               	line	1283
  2592                           	
  2593                           l340:	
  2594  024C                     	line	1309
  2595                           	
  2596                           l1817:	
  2597  024C                     ;doprnt.c: 1283: };doprnt.c: 1285: };doprnt.c: 1309: if(prec == 0 && val == 0)
  2598                           	movf	((sprintf@prec)),w
  2599  024C  086B               	btfss	status,2
  2600  024D  1D03               	goto	u1391
  2601  024E  2A50               	goto	u1390
  2602  024F  2A51               u1391:
  2603  0250                     	goto	l1823
  2604  0250  2A5C               u1390:
  2605  0251                     	
  2606                           l1819:	
  2607  0251                     	movf	((sprintf@val)),w
  2608  0251  0868               iorwf	((sprintf@val+1)),w
  2609  0252  0469               	btfss	status,2
  2610  0253  1D03               	goto	u1401
  2611  0254  2A56               	goto	u1400
  2612  0255  2A57               u1401:
  2613  0256                     	goto	l1823
  2614  0256  2A5C               u1400:
  2615  0257                     	line	1310
  2616                           	
  2617                           l1821:	
  2618  0257                     ;doprnt.c: 1310: prec++;
  2619                           	movlw	low(01h)
  2620  0257  3001               	movwf	(??_sprintf+0)+0
  2621  0258  00E3               	movf	(??_sprintf+0)+0,w
  2622  0259  0863               	addwf	(sprintf@prec),f
  2623  025A  07EB               	goto	l1823
  2624  025B  2A5C               	
  2625                           l341:	
  2626  025C                     	line	1324
  2627                           	
  2628                           l1823:	
  2629  025C                     ;doprnt.c: 1324: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2630                           	clrf	(sprintf@c)
  2631  025C  01EC               	incf	(sprintf@c),f
  2632  025D  0AEC               		movlw	5
  2633  025E  3005               	xorwf	((sprintf@c)),w
  2634  025F  066C               	btfss	status,2
  2635  0260  1D03               	goto	u1411
  2636  0261  2A63               	goto	u1410
  2637  0262  2A64               u1411:
  2638  0263                     	goto	l1827
  2639  0263  2A66               u1410:
  2640  0264                     	goto	l1833
  2641  0264  2A8E               	
  2642                           l1825:	
  2643  0265                     	goto	l1833
  2644  0265  2A8E               	line	1325
  2645                           	
  2646                           l342:	
  2647  0266                     	
  2648                           l1827:	
  2649  0266                     ;doprnt.c: 1325: if(val < dpowers[c])
  2650                           	movf	(sprintf@c),w
  2651  0266  086C               	movwf	(??_sprintf+0)+0
  2652  0267  00E3               	addwf	(??_sprintf+0)+0,w
  2653  0268  0763               	addlw	low((((_dpowers)-__stringbase)|8000h))
  2654  0269  3E01               	movwf	fsr0
  2655  026A  0084               	fcall	stringdir
  2656  026B  120A  118A  240A  120A  118A  	movwf	(??_sprintf+1)+0
  2657  0270  00E4               	fcall	stringdir
  2658  0271  120A  118A  240A  120A  118A  	movwf	(??_sprintf+1)+0+1
  2659  0276  00E5               	movf	1+(??_sprintf+1)+0,w
  2660  0277  0865               	subwf	(sprintf@val+1),w
  2661  0278  0269               	skipz
  2662  0279  1D03               	goto	u1425
  2663  027A  2A7D               	movf	0+(??_sprintf+1)+0,w
  2664  027B  0864               	subwf	(sprintf@val),w
  2665  027C  0268               u1425:
  2666  027D                     	skipnc
  2667  027D  1803               	goto	u1421
  2668  027E  2A80               	goto	u1420
  2669  027F  2A81               u1421:
  2670  0280                     	goto	l1831
  2671  0280  2A83               u1420:
  2672  0281                     	goto	l1833
  2673  0281  2A8E               	line	1326
  2674                           	
  2675                           l1829:	
  2676  0282                     ;doprnt.c: 1326: break;
  2677                           	goto	l1833
  2678  0282  2A8E               	
  2679                           l344:	
  2680  0283                     	line	1324
  2681                           	
  2682                           l1831:	
  2683  0283                     	movlw	low(01h)
  2684  0283  3001               	movwf	(??_sprintf+0)+0
  2685  0284  00E3               	movf	(??_sprintf+0)+0,w
  2686  0285  0863               	addwf	(sprintf@c),f
  2687  0286  07EC               		movlw	5
  2688  0287  3005               	xorwf	((sprintf@c)),w
  2689  0288  066C               	btfss	status,2
  2690  0289  1D03               	goto	u1431
  2691  028A  2A8C               	goto	u1430
  2692  028B  2A8D               u1431:
  2693  028C                     	goto	l1827
  2694  028C  2A66               u1430:
  2695  028D                     	goto	l1833
  2696  028D  2A8E               	
  2697                           l343:	
  2698  028E                     	line	1358
  2699                           	
  2700                           l1833:	
  2701  028E                     ;doprnt.c: 1358: if(c < prec)
  2702                           	movf	(sprintf@prec),w
  2703  028E  086B               	movwf	(??_sprintf+0)+0
  2704  028F  00E3               	clrf	(??_sprintf+0)+0+1
  2705  0290  01E4               	btfsc	(??_sprintf+0)+0,7
  2706  0291  1BE3               	decf	(??_sprintf+0)+0+1,f
  2707  0292  03E4               	movf	1+(??_sprintf+0)+0,w
  2708  0293  0864               	xorlw	80h
  2709  0294  3A80               	sublw	080h
  2710  0295  3C80               	skipz
  2711  0296  1D03               	goto	u1445
  2712  0297  2A9A               	movf	0+(??_sprintf+0)+0,w
  2713  0298  0863               	subwf	(sprintf@c),w
  2714  0299  026C               u1445:
  2715  029A                     
  2716                           	skipnc
  2717  029A  1803               	goto	u1441
  2718  029B  2A9D               	goto	u1440
  2719  029C  2A9E               u1441:
  2720  029D                     	goto	l1837
  2721  029D  2AA5               u1440:
  2722  029E                     	line	1359
  2723                           	
  2724                           l1835:	
  2725  029E                     ;doprnt.c: 1359: c = prec;
  2726                           	bcf	status, 5	;RP0=0, select bank0
  2727  029E  1283               	bcf	status, 6	;RP1=0, select bank0
  2728  029F  1303               	movf	(sprintf@prec),w
  2729  02A0  086B               	movwf	(??_sprintf+0)+0
  2730  02A1  00E3               	movf	(??_sprintf+0)+0,w
  2731  02A2  0863               	movwf	(sprintf@c)
  2732  02A3  00EC               	goto	l1841
  2733  02A4  2AC1               	line	1360
  2734                           	
  2735                           l345:	
  2736  02A5                     	
  2737                           l1837:	
  2738  02A5                     ;doprnt.c: 1360: else if(prec < c)
  2739                           	bcf	status, 5	;RP0=0, select bank0
  2740  02A5  1283               	bcf	status, 6	;RP1=0, select bank0
  2741  02A6  1303               	movf	(sprintf@prec),w
  2742  02A7  086B               	movwf	(??_sprintf+0)+0
  2743  02A8  00E3               	clrf	(??_sprintf+0)+0+1
  2744  02A9  01E4               	btfsc	(??_sprintf+0)+0,7
  2745  02AA  1BE3               	decf	(??_sprintf+0)+0+1,f
  2746  02AB  03E4               	movf	1+(??_sprintf+0)+0,w
  2747  02AC  0864               	xorlw	80h
  2748  02AD  3A80               	movwf	(??_sprintf+2)+0
  2749  02AE  00E5               	movlw	80h
  2750  02AF  3080               	subwf	(??_sprintf+2)+0,w
  2751  02B0  0265               	skipz
  2752  02B1  1D03               	goto	u1455
  2753  02B2  2AB5               	movf	(sprintf@c),w
  2754  02B3  086C               	subwf	0+(??_sprintf+0)+0,w
  2755  02B4  0263               u1455:
  2756  02B5                     
  2757                           	skipnc
  2758  02B5  1803               	goto	u1451
  2759  02B6  2AB8               	goto	u1450
  2760  02B7  2AB9               u1451:
  2761  02B8                     	goto	l1841
  2762  02B8  2AC1               u1450:
  2763  02B9                     	line	1361
  2764                           	
  2765                           l1839:	
  2766  02B9                     ;doprnt.c: 1361: prec = c;
  2767                           	bcf	status, 5	;RP0=0, select bank0
  2768  02B9  1283               	bcf	status, 6	;RP1=0, select bank0
  2769  02BA  1303               	movf	(sprintf@c),w
  2770  02BB  086C               	movwf	(??_sprintf+0)+0
  2771  02BC  00E3               	movf	(??_sprintf+0)+0,w
  2772  02BD  0863               	movwf	(sprintf@prec)
  2773  02BE  00EB               	goto	l1841
  2774  02BF  2AC1               	
  2775                           l347:	
  2776  02C0                     	goto	l1841
  2777  02C0  2AC1               	line	1441
  2778                           	
  2779                           l346:	
  2780  02C1                     	line	1457
  2781                           	
  2782                           l1841:	
  2783  02C1                     ;doprnt.c: 1441: {;doprnt.c: 1457: if(flag & 0x03)
  2784                           	bcf	status, 5	;RP0=0, select bank0
  2785  02C1  1283               	bcf	status, 6	;RP1=0, select bank0
  2786  02C2  1303               	movf	(sprintf@flag),w
  2787  02C3  0867               	andlw	03h
  2788  02C4  3903               	btfsc	status,2
  2789  02C5  1903               	goto	u1461
  2790  02C6  2AC8               	goto	u1460
  2791  02C7  2AC9               u1461:
  2792  02C8                     	goto	l1853
  2793  02C8  2B12               u1460:
  2794  02C9                     	line	1458
  2795                           	
  2796                           l1843:	
  2797  02C9                     ;doprnt.c: 1458: ((*sp++ = ('-')));
  2798                           	movlw	low(02Dh)
  2799  02C9  302D               	movwf	(??_sprintf+0)+0
  2800  02CA  00E3               	movf	(sprintf@sp),w
  2801  02CB  086A               	movwf	fsr0
  2802  02CC  0084               	movf	(??_sprintf+0)+0,w
  2803  02CD  0863               	bcf	status, 7	;select IRP bank0
  2804  02CE  1383               	movwf	indf
  2805  02CF  0080               	
  2806                           l1845:	
  2807  02D0                     	movlw	low(01h)
  2808  02D0  3001               	movwf	(??_sprintf+0)+0
  2809  02D1  00E3               	movf	(??_sprintf+0)+0,w
  2810  02D2  0863               	addwf	(sprintf@sp),f
  2811  02D3  07EA               	goto	l1853
  2812  02D4  2B12               	
  2813                           l348:	
  2814  02D5                     	line	1493
  2815                           ;doprnt.c: 1488: };doprnt.c: 1493: while(prec--) {
  2816                           	goto	l1853
  2817  02D5  2B12               	
  2818                           l350:	
  2819  02D6                     	line	1508
  2820                           	
  2821                           l1847:	
  2822  02D6                     ;doprnt.c: 1497: {;doprnt.c: 1508: c = (val / dpowers[prec]) % 10 + '0';
  2823                           	movlw	0Ah
  2824  02D6  300A               	movwf	(___lwmod@divisor)
  2825  02D7  00D2               	movlw	0
  2826  02D8  3000               	movwf	((___lwmod@divisor))+1
  2827  02D9  00D3               	movf	(sprintf@prec),w
  2828  02DA  086B               	movwf	(??_sprintf+0)+0
  2829  02DB  00E3               	addwf	(??_sprintf+0)+0,w
  2830  02DC  0763               	addlw	low((((_dpowers)-__stringbase)|8000h))
  2831  02DD  3E01               	movwf	fsr0
  2832  02DE  0084               	fcall	stringdir
  2833  02DF  120A  118A  240A  120A  118A  	movwf	(___lwdiv@divisor)
  2834  02E4  00CA               	fcall	stringdir
  2835  02E5  120A  118A  240A  120A  118A  	movwf	(___lwdiv@divisor+1)
  2836  02EA  00CB               	movf	(sprintf@val+1),w
  2837  02EB  0869               	movwf	(___lwdiv@dividend+1)
  2838  02EC  00CD               	movf	(sprintf@val),w
  2839  02ED  0868               	movwf	(___lwdiv@dividend)
  2840  02EE  00CC               	fcall	___lwdiv
  2841  02EF  120A  118A  2463  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2842  02F4  1283               	bcf	status, 6	;RP1=0, select bank0
  2843  02F5  1303               	movf	(1+(?___lwdiv)),w
  2844  02F6  084B               	movwf	(___lwmod@dividend+1)
  2845  02F7  00D5               	movf	(0+(?___lwdiv)),w
  2846  02F8  084A               	movwf	(___lwmod@dividend)
  2847  02F9  00D4               	fcall	___lwmod
  2848  02FA  120A  118A  24F8  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2849  02FF  1283               	bcf	status, 6	;RP1=0, select bank0
  2850  0300  1303               	movf	(0+(?___lwmod)),w
  2851  0301  0852               	addlw	030h
  2852  0302  3E30               	movwf	(??_sprintf+1)+0
  2853  0303  00E4               	movf	(??_sprintf+1)+0,w
  2854  0304  0864               	movwf	(sprintf@c)
  2855  0305  00EC               	line	1543
  2856                           	
  2857                           l1849:	
  2858  0306                     ;doprnt.c: 1542: };doprnt.c: 1543: ((*sp++ = (c)));
  2859                           	movf	(sprintf@c),w
  2860  0306  086C               	movwf	(??_sprintf+0)+0
  2861  0307  00E3               	movf	(sprintf@sp),w
  2862  0308  086A               	movwf	fsr0
  2863  0309  0084               	movf	(??_sprintf+0)+0,w
  2864  030A  0863               	bcf	status, 7	;select IRP bank0
  2865  030B  1383               	movwf	indf
  2866  030C  0080               	
  2867                           l1851:	
  2868  030D                     	movlw	low(01h)
  2869  030D  3001               	movwf	(??_sprintf+0)+0
  2870  030E  00E3               	movf	(??_sprintf+0)+0,w
  2871  030F  0863               	addwf	(sprintf@sp),f
  2872  0310  07EA               	goto	l1853
  2873  0311  2B12               	line	1544
  2874                           	
  2875                           l349:	
  2876  0312                     	line	1493
  2877                           	
  2878                           l1853:	
  2879  0312                     	movlw	low(-1)
  2880  0312  30FF               	movwf	(??_sprintf+0)+0
  2881  0313  00E3               	movf	(??_sprintf+0)+0,w
  2882  0314  0863               	addwf	(sprintf@prec),f
  2883  0315  07EB               		incf	(((sprintf@prec))),w
  2884  0316  0A6B               	btfss	status,2
  2885  0317  1D03               	goto	u1471
  2886  0318  2B1A               	goto	u1470
  2887  0319  2B1B               u1471:
  2888  031A                     	goto	l1847
  2889  031A  2AD6               u1470:
  2890  031B                     	goto	l1855
  2891  031B  2B1D               	
  2892                           l351:	
  2893  031C                     	goto	l1855
  2894  031C  2B1D               	line	1552
  2895                           	
  2896                           l325:	
  2897  031D                     	line	548
  2898                           	
  2899                           l1855:	
  2900  031D                     	movlw	01h
  2901  031D  3001               	addwf	(sprintf@f),f
  2902  031E  07D8               	movlw	-01h
  2903  031F  30FF               	addwf	(sprintf@f),w
  2904  0320  0758               	movwf	fsr0
  2905  0321  0084               	fcall	stringdir
  2906  0322  120A  118A  240A  120A  118A  	movwf	(??_sprintf+0)+0
  2907  0327  00E3               	movf	(??_sprintf+0)+0,w
  2908  0328  0863               	movwf	(sprintf@c)
  2909  0329  00EC               	movf	(((sprintf@c))),w
  2910  032A  086C               	btfss	status,2
  2911  032B  1D03               	goto	u1481
  2912  032C  2B2E               	goto	u1480
  2913  032D  2B2F               u1481:
  2914  032E                     	goto	l1781
  2915  032E  29BA               u1480:
  2916  032F                     	goto	l1857
  2917  032F  2B31               	
  2918                           l352:	
  2919  0330                     	goto	l1857
  2920  0330  2B31               	line	1554
  2921                           ;doprnt.c: 1544: };doprnt.c: 1552: };doprnt.c: 1554: alldone:
  2922                           	
  2923                           l335:	
  2924  0331                     	line	1557
  2925                           	
  2926                           l1857:	
  2927  0331                     ;doprnt.c: 1557: *sp = 0;
  2928                           	movf	(sprintf@sp),w
  2929  0331  086A               	movwf	fsr0
  2930  0332  0084               	bcf	status, 7	;select IRP bank0
  2931  0333  1383               	clrf	indf
  2932  0334  0180               	goto	l353
  2933  0335  2B36               	line	1559
  2934                           	
  2935                           l1859:	
  2936  0336                     	line	1560
  2937                           ;doprnt.c: 1559: return 0;;	Return value of _sprintf is never used
  2938                           	
  2939                           l353:	
  2940  0336                     	return
  2941  0336  0008               	opt stack 0
  2942                           GLOBAL	__end_of_sprintf
  2943                           	__end_of_sprintf:
  2944  0337                     	signat	_sprintf,4698
  2945                           	global	_isdigit
  2946                           
  2947 ;; *************** function _isdigit *****************
  2948 ;; Defined at:
  2949 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\isdigit.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;  c               1    wreg     unsigned char 
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;  c               1    1[BANK0 ] unsigned char 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;		None               void
  2956 ;; Registers used:
  2957 ;;		wreg, status,2, status,0
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2963 ;;      Params:         0       0       0       0       0
  2964 ;;      Locals:         0       2       0       0       0
  2965 ;;      Temps:          0       0       0       0       0
  2966 ;;      Totals:         0       2       0       0       0
  2967 ;;Total ram usage:        2 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:    3
  2970 ;; This function calls:
  2971 ;;		Nothing
  2972 ;; This function is called by:
  2973 ;;		_sprintf
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           psect	text2,local,class=CODE,delta=2,merge=1,group=2
  2977                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\isdigit.c"
  2978                           	line	8
  2979                           global __ptext2
  2980                           __ptext2:	;psect for function _isdigit
  2981  0659                     psect	text2
  2982                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\isdigit.c"
  2983                           	line	8
  2984                           	global	__size_of_isdigit
  2985                           	__size_of_isdigit	equ	__end_of_isdigit-_isdigit
  2986  0016                     	
  2987                           _isdigit:	
  2988  0659                     ;incstack = 0
  2989                           	opt	stack 3
  2990                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2991                           ;isdigit@c stored from wreg
  2992                           	bcf	status, 5	;RP0=0, select bank0
  2993  0659  1283               	bcf	status, 6	;RP1=0, select bank0
  2994  065A  1303               	movwf	(isdigit@c)
  2995  065B  00CB               	line	14
  2996                           	
  2997                           l1669:	
  2998  065C                     	clrf	(_isdigit$1048)
  2999  065C  01CA               	
  3000                           l1671:	
  3001  065D                     	movlw	low(03Ah)
  3002  065D  303A               	subwf	(isdigit@c),w
  3003  065E  024B               	skipnc
  3004  065F  1803               	goto	u1131
  3005  0660  2E62               	goto	u1130
  3006  0661  2E63               u1131:
  3007  0662                     	goto	l1677
  3008  0662  2E6C               u1130:
  3009  0663                     	
  3010                           l1673:	
  3011  0663                     	movlw	low(030h)
  3012  0663  3030               	subwf	(isdigit@c),w
  3013  0664  024B               	skipc
  3014  0665  1C03               	goto	u1141
  3015  0666  2E68               	goto	u1140
  3016  0667  2E69               u1141:
  3017  0668                     	goto	l1677
  3018  0668  2E6C               u1140:
  3019  0669                     	
  3020                           l1675:	
  3021  0669                     	clrf	(_isdigit$1048)
  3022  0669  01CA               	incf	(_isdigit$1048),f
  3023  066A  0ACA               	goto	l1677
  3024  066B  2E6C               	
  3025                           l784:	
  3026  066C                     	
  3027                           l1677:	
  3028  066C                     	rrf	(_isdigit$1048),w
  3029  066C  0C4A               	
  3030                           	goto	l785
  3031  066D  2E6E               	
  3032                           l1679:	
  3033  066E                     	line	15
  3034                           	
  3035                           l785:	
  3036  066E                     	return
  3037  066E  0008               	opt stack 0
  3038                           GLOBAL	__end_of_isdigit
  3039                           	__end_of_isdigit:
  3040  066F                     	signat	_isdigit,4216
  3041                           	global	___lwmod
  3042                           
  3043 ;; *************** function ___lwmod *****************
  3044 ;; Defined at:
  3045 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;  divisor         2    8[BANK0 ] unsigned int 
  3048 ;;  dividend        2   10[BANK0 ] unsigned int 
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;  counter         1   13[BANK0 ] unsigned char 
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  2    8[BANK0 ] unsigned int 
  3053 ;; Registers used:
  3054 ;;		wreg, status,2, status,0
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3060 ;;      Params:         0       4       0       0       0
  3061 ;;      Locals:         0       1       0       0       0
  3062 ;;      Temps:          0       1       0       0       0
  3063 ;;      Totals:         0       6       0       0       0
  3064 ;;Total ram usage:        6 bytes
  3065 ;; Hardware stack levels used:    1
  3066 ;; Hardware stack levels required when called:    3
  3067 ;; This function calls:
  3068 ;;		Nothing
  3069 ;; This function is called by:
  3070 ;;		_sprintf
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           psect	text3,local,class=CODE,delta=2,merge=1,group=1
  3074                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3075                           	line	5
  3076                           global __ptext3
  3077                           __ptext3:	;psect for function ___lwmod
  3078  04F8                     psect	text3
  3079                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3080                           	line	5
  3081                           	global	__size_of___lwmod
  3082                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  3083  0043                     	
  3084                           ___lwmod:	
  3085  04F8                     ;incstack = 0
  3086                           	opt	stack 3
  3087                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3088                           	line	12
  3089                           	
  3090                           l1721:	
  3091  04F8                     	bcf	status, 5	;RP0=0, select bank0
  3092  04F8  1283               	bcf	status, 6	;RP1=0, select bank0
  3093  04F9  1303               	movf	((___lwmod@divisor)),w
  3094  04FA  0852               iorwf	((___lwmod@divisor+1)),w
  3095  04FB  0453               	btfsc	status,2
  3096  04FC  1903               	goto	u1241
  3097  04FD  2CFF               	goto	u1240
  3098  04FE  2D00               u1241:
  3099  04FF                     	goto	l1739
  3100  04FF  2D35               u1240:
  3101  0500                     	line	13
  3102                           	
  3103                           l1723:	
  3104  0500                     	clrf	(___lwmod@counter)
  3105  0500  01D7               	incf	(___lwmod@counter),f
  3106  0501  0AD7               	line	14
  3107                           	goto	l1729
  3108  0502  2D0F               	
  3109                           l634:	
  3110  0503                     	line	15
  3111                           	
  3112                           l1725:	
  3113  0503                     	movlw	01h
  3114  0503  3001               	
  3115                           u1255:
  3116  0504                     	clrc
  3117  0504  1003               	rlf	(___lwmod@divisor),f
  3118  0505  0DD2               	rlf	(___lwmod@divisor+1),f
  3119  0506  0DD3               	addlw	-1
  3120  0507  3EFF               	skipz
  3121  0508  1D03               	goto	u1255
  3122  0509  2D04               	line	16
  3123                           	
  3124                           l1727:	
  3125  050A                     	movlw	low(01h)
  3126  050A  3001               	movwf	(??___lwmod+0)+0
  3127  050B  00D6               	movf	(??___lwmod+0)+0,w
  3128  050C  0856               	addwf	(___lwmod@counter),f
  3129  050D  07D7               	goto	l1729
  3130  050E  2D0F               	line	17
  3131                           	
  3132                           l633:	
  3133  050F                     	line	14
  3134                           	
  3135                           l1729:	
  3136  050F                     	btfss	(___lwmod@divisor+1),(15)&7
  3137  050F  1FD3               	goto	u1261
  3138  0510  2D12               	goto	u1260
  3139  0511  2D13               u1261:
  3140  0512                     	goto	l1725
  3141  0512  2D03               u1260:
  3142  0513                     	goto	l1731
  3143  0513  2D15               	
  3144                           l635:	
  3145  0514                     	goto	l1731
  3146  0514  2D15               	line	18
  3147                           	
  3148                           l636:	
  3149  0515                     	line	19
  3150                           	
  3151                           l1731:	
  3152  0515                     	movf	(___lwmod@divisor+1),w
  3153  0515  0853               	subwf	(___lwmod@dividend+1),w
  3154  0516  0255               	skipz
  3155  0517  1D03               	goto	u1275
  3156  0518  2D1B               	movf	(___lwmod@divisor),w
  3157  0519  0852               	subwf	(___lwmod@dividend),w
  3158  051A  0254               u1275:
  3159  051B                     	skipc
  3160  051B  1C03               	goto	u1271
  3161  051C  2D1E               	goto	u1270
  3162  051D  2D1F               u1271:
  3163  051E                     	goto	l1735
  3164  051E  2D26               u1270:
  3165  051F                     	line	20
  3166                           	
  3167                           l1733:	
  3168  051F                     	movf	(___lwmod@divisor),w
  3169  051F  0852               	subwf	(___lwmod@dividend),f
  3170  0520  02D4               	movf	(___lwmod@divisor+1),w
  3171  0521  0853               	skipc
  3172  0522  1C03               	decf	(___lwmod@dividend+1),f
  3173  0523  03D5               	subwf	(___lwmod@dividend+1),f
  3174  0524  02D5               	goto	l1735
  3175  0525  2D26               	
  3176                           l637:	
  3177  0526                     	line	21
  3178                           	
  3179                           l1735:	
  3180  0526                     	movlw	01h
  3181  0526  3001               	
  3182                           u1285:
  3183  0527                     	clrc
  3184  0527  1003               	rrf	(___lwmod@divisor+1),f
  3185  0528  0CD3               	rrf	(___lwmod@divisor),f
  3186  0529  0CD2               	addlw	-1
  3187  052A  3EFF               	skipz
  3188  052B  1D03               	goto	u1285
  3189  052C  2D27               	line	22
  3190                           	
  3191                           l1737:	
  3192  052D                     	movlw	01h
  3193  052D  3001               	subwf	(___lwmod@counter),f
  3194  052E  02D7               	btfss	status,2
  3195  052F  1D03               	goto	u1291
  3196  0530  2D32               	goto	u1290
  3197  0531  2D33               u1291:
  3198  0532                     	goto	l1731
  3199  0532  2D15               u1290:
  3200  0533                     	goto	l1739
  3201  0533  2D35               	
  3202                           l638:	
  3203  0534                     	goto	l1739
  3204  0534  2D35               	line	23
  3205                           	
  3206                           l632:	
  3207  0535                     	line	24
  3208                           	
  3209                           l1739:	
  3210  0535                     	movf	(___lwmod@dividend+1),w
  3211  0535  0855               	movwf	(?___lwmod+1)
  3212  0536  00D3               	movf	(___lwmod@dividend),w
  3213  0537  0854               	movwf	(?___lwmod)
  3214  0538  00D2               	goto	l639
  3215  0539  2D3A               	
  3216                           l1741:	
  3217  053A                     	line	25
  3218                           	
  3219                           l639:	
  3220  053A                     	return
  3221  053A  0008               	opt stack 0
  3222                           GLOBAL	__end_of___lwmod
  3223                           	__end_of___lwmod:
  3224  053B                     	signat	___lwmod,8314
  3225                           	global	___lwdiv
  3226                           
  3227 ;; *************** function ___lwdiv *****************
  3228 ;; Defined at:
  3229 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;  divisor         2    0[BANK0 ] unsigned int 
  3232 ;;  dividend        2    2[BANK0 ] unsigned int 
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;  quotient        2    6[BANK0 ] unsigned int 
  3235 ;;  counter         1    5[BANK0 ] unsigned char 
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  2    0[BANK0 ] unsigned int 
  3238 ;; Registers used:
  3239 ;;		wreg, status,2, status,0
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3245 ;;      Params:         0       4       0       0       0
  3246 ;;      Locals:         0       3       0       0       0
  3247 ;;      Temps:          0       1       0       0       0
  3248 ;;      Totals:         0       8       0       0       0
  3249 ;;Total ram usage:        8 bytes
  3250 ;; Hardware stack levels used:    1
  3251 ;; Hardware stack levels required when called:    3
  3252 ;; This function calls:
  3253 ;;		Nothing
  3254 ;; This function is called by:
  3255 ;;		_sprintf
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           psect	text4,local,class=CODE,delta=2,merge=1,group=1
  3259                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3260                           	line	5
  3261                           global __ptext4
  3262                           __ptext4:	;psect for function ___lwdiv
  3263  0463                     psect	text4
  3264                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3265                           	line	5
  3266                           	global	__size_of___lwdiv
  3267                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  3268  004D                     	
  3269                           ___lwdiv:	
  3270  0463                     ;incstack = 0
  3271                           	opt	stack 3
  3272                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3273                           	line	13
  3274                           	
  3275                           l1695:	
  3276  0463                     	bcf	status, 5	;RP0=0, select bank0
  3277  0463  1283               	bcf	status, 6	;RP1=0, select bank0
  3278  0464  1303               	clrf	(___lwdiv@quotient)
  3279  0465  01D0               	clrf	(___lwdiv@quotient+1)
  3280  0466  01D1               	line	14
  3281                           	
  3282                           l1697:	
  3283  0467                     	movf	((___lwdiv@divisor)),w
  3284  0467  084A               iorwf	((___lwdiv@divisor+1)),w
  3285  0468  044B               	btfsc	status,2
  3286  0469  1903               	goto	u1171
  3287  046A  2C6C               	goto	u1170
  3288  046B  2C6D               u1171:
  3289  046C                     	goto	l1717
  3290  046C  2CAA               u1170:
  3291  046D                     	line	15
  3292                           	
  3293                           l1699:	
  3294  046D                     	clrf	(___lwdiv@counter)
  3295  046D  01CF               	incf	(___lwdiv@counter),f
  3296  046E  0ACF               	line	16
  3297                           	goto	l1705
  3298  046F  2C7C               	
  3299                           l624:	
  3300  0470                     	line	17
  3301                           	
  3302                           l1701:	
  3303  0470                     	movlw	01h
  3304  0470  3001               	
  3305                           u1185:
  3306  0471                     	clrc
  3307  0471  1003               	rlf	(___lwdiv@divisor),f
  3308  0472  0DCA               	rlf	(___lwdiv@divisor+1),f
  3309  0473  0DCB               	addlw	-1
  3310  0474  3EFF               	skipz
  3311  0475  1D03               	goto	u1185
  3312  0476  2C71               	line	18
  3313                           	
  3314                           l1703:	
  3315  0477                     	movlw	low(01h)
  3316  0477  3001               	movwf	(??___lwdiv+0)+0
  3317  0478  00CE               	movf	(??___lwdiv+0)+0,w
  3318  0479  084E               	addwf	(___lwdiv@counter),f
  3319  047A  07CF               	goto	l1705
  3320  047B  2C7C               	line	19
  3321                           	
  3322                           l623:	
  3323  047C                     	line	16
  3324                           	
  3325                           l1705:	
  3326  047C                     	btfss	(___lwdiv@divisor+1),(15)&7
  3327  047C  1FCB               	goto	u1191
  3328  047D  2C7F               	goto	u1190
  3329  047E  2C80               u1191:
  3330  047F                     	goto	l1701
  3331  047F  2C70               u1190:
  3332  0480                     	goto	l1707
  3333  0480  2C82               	
  3334                           l625:	
  3335  0481                     	goto	l1707
  3336  0481  2C82               	line	20
  3337                           	
  3338                           l626:	
  3339  0482                     	line	21
  3340                           	
  3341                           l1707:	
  3342  0482                     	movlw	01h
  3343  0482  3001               	
  3344                           u1205:
  3345  0483                     	clrc
  3346  0483  1003               	rlf	(___lwdiv@quotient),f
  3347  0484  0DD0               	rlf	(___lwdiv@quotient+1),f
  3348  0485  0DD1               	addlw	-1
  3349  0486  3EFF               	skipz
  3350  0487  1D03               	goto	u1205
  3351  0488  2C83               	line	22
  3352                           	movf	(___lwdiv@divisor+1),w
  3353  0489  084B               	subwf	(___lwdiv@dividend+1),w
  3354  048A  024D               	skipz
  3355  048B  1D03               	goto	u1215
  3356  048C  2C8F               	movf	(___lwdiv@divisor),w
  3357  048D  084A               	subwf	(___lwdiv@dividend),w
  3358  048E  024C               u1215:
  3359  048F                     	skipc
  3360  048F  1C03               	goto	u1211
  3361  0490  2C92               	goto	u1210
  3362  0491  2C93               u1211:
  3363  0492                     	goto	l1713
  3364  0492  2C9B               u1210:
  3365  0493                     	line	23
  3366                           	
  3367                           l1709:	
  3368  0493                     	movf	(___lwdiv@divisor),w
  3369  0493  084A               	subwf	(___lwdiv@dividend),f
  3370  0494  02CC               	movf	(___lwdiv@divisor+1),w
  3371  0495  084B               	skipc
  3372  0496  1C03               	decf	(___lwdiv@dividend+1),f
  3373  0497  03CD               	subwf	(___lwdiv@dividend+1),f
  3374  0498  02CD               	line	24
  3375                           	
  3376                           l1711:	
  3377  0499                     	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  3378  0499  1450               	goto	l1713
  3379  049A  2C9B               	line	25
  3380                           	
  3381                           l627:	
  3382  049B                     	line	26
  3383                           	
  3384                           l1713:	
  3385  049B                     	movlw	01h
  3386  049B  3001               	
  3387                           u1225:
  3388  049C                     	clrc
  3389  049C  1003               	rrf	(___lwdiv@divisor+1),f
  3390  049D  0CCB               	rrf	(___lwdiv@divisor),f
  3391  049E  0CCA               	addlw	-1
  3392  049F  3EFF               	skipz
  3393  04A0  1D03               	goto	u1225
  3394  04A1  2C9C               	line	27
  3395                           	
  3396                           l1715:	
  3397  04A2                     	movlw	01h
  3398  04A2  3001               	subwf	(___lwdiv@counter),f
  3399  04A3  02CF               	btfss	status,2
  3400  04A4  1D03               	goto	u1231
  3401  04A5  2CA7               	goto	u1230
  3402  04A6  2CA8               u1231:
  3403  04A7                     	goto	l1707
  3404  04A7  2C82               u1230:
  3405  04A8                     	goto	l1717
  3406  04A8  2CAA               	
  3407                           l628:	
  3408  04A9                     	goto	l1717
  3409  04A9  2CAA               	line	28
  3410                           	
  3411                           l622:	
  3412  04AA                     	line	29
  3413                           	
  3414                           l1717:	
  3415  04AA                     	movf	(___lwdiv@quotient+1),w
  3416  04AA  0851               	movwf	(?___lwdiv+1)
  3417  04AB  00CB               	movf	(___lwdiv@quotient),w
  3418  04AC  0850               	movwf	(?___lwdiv)
  3419  04AD  00CA               	goto	l629
  3420  04AE  2CAF               	
  3421                           l1719:	
  3422  04AF                     	line	30
  3423                           	
  3424                           l629:	
  3425  04AF                     	return
  3426  04AF  0008               	opt stack 0
  3427                           GLOBAL	__end_of___lwdiv
  3428                           	__end_of___lwdiv:
  3429  04B0                     	signat	___lwdiv,8314
  3430                           	global	___bmul
  3431                           
  3432 ;; *************** function ___bmul *****************
  3433 ;; Defined at:
  3434 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;  multiplier      1    wreg     unsigned char 
  3437 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3438 ;; Auto vars:     Size  Location     Type
  3439 ;;  multiplier      1    3[BANK0 ] unsigned char 
  3440 ;;  product         1    2[BANK0 ] unsigned char 
  3441 ;; Return value:  Size  Location     Type
  3442 ;;                  1    wreg      unsigned char 
  3443 ;; Registers used:
  3444 ;;		wreg, status,2, status,0
  3445 ;; Tracked objects:
  3446 ;;		On entry : 0/0
  3447 ;;		On exit  : 0/0
  3448 ;;		Unchanged: 0/0
  3449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3450 ;;      Params:         0       1       0       0       0
  3451 ;;      Locals:         0       2       0       0       0
  3452 ;;      Temps:          0       1       0       0       0
  3453 ;;      Totals:         0       4       0       0       0
  3454 ;;Total ram usage:        4 bytes
  3455 ;; Hardware stack levels used:    1
  3456 ;; Hardware stack levels required when called:    3
  3457 ;; This function calls:
  3458 ;;		Nothing
  3459 ;; This function is called by:
  3460 ;;		_sprintf
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  3464                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8.c"
  3465                           	line	4
  3466                           global __ptext5
  3467                           __ptext5:	;psect for function ___bmul
  3468  063E                     psect	text5
  3469                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8.c"
  3470                           	line	4
  3471                           	global	__size_of___bmul
  3472                           	__size_of___bmul	equ	__end_of___bmul-___bmul
  3473  001B                     	
  3474                           ___bmul:	
  3475  063E                     ;incstack = 0
  3476                           	opt	stack 3
  3477                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3478                           ;___bmul@multiplier stored from wreg
  3479                           	bcf	status, 5	;RP0=0, select bank0
  3480  063E  1283               	bcf	status, 6	;RP1=0, select bank0
  3481  063F  1303               	movwf	(___bmul@multiplier)
  3482  0640  00CD               	line	6
  3483                           	
  3484                           l1681:	
  3485  0641                     	clrf	(___bmul@product)
  3486  0641  01CC               	goto	l1683
  3487  0642  2E43               	line	42
  3488                           	
  3489                           l380:	
  3490  0643                     	line	43
  3491                           	
  3492                           l1683:	
  3493  0643                     	btfss	(___bmul@multiplier),(0)&7
  3494  0643  1C4D               	goto	u1151
  3495  0644  2E46               	goto	u1150
  3496  0645  2E47               u1151:
  3497  0646                     	goto	l1687
  3498  0646  2E4C               u1150:
  3499  0647                     	line	44
  3500                           	
  3501                           l1685:	
  3502  0647                     	movf	(___bmul@multiplicand),w
  3503  0647  084A               	movwf	(??___bmul+0)+0
  3504  0648  00CB               	movf	(??___bmul+0)+0,w
  3505  0649  084B               	addwf	(___bmul@product),f
  3506  064A  07CC               	goto	l1687
  3507  064B  2E4C               	
  3508                           l381:	
  3509  064C                     	line	45
  3510                           	
  3511                           l1687:	
  3512  064C                     	clrc
  3513  064C  1003               	rlf	(___bmul@multiplicand),f
  3514  064D  0DCA               
  3515                           	line	46
  3516                           	
  3517                           l1689:	
  3518  064E                     	clrc
  3519  064E  1003               	rrf	(___bmul@multiplier),f
  3520  064F  0CCD               
  3521                           	line	47
  3522                           	movf	((___bmul@multiplier)),w
  3523  0650  084D               	btfss	status,2
  3524  0651  1D03               	goto	u1161
  3525  0652  2E54               	goto	u1160
  3526  0653  2E55               u1161:
  3527  0654                     	goto	l1683
  3528  0654  2E43               u1160:
  3529  0655                     	goto	l1691
  3530  0655  2E56               	
  3531                           l382:	
  3532  0656                     	line	50
  3533                           	
  3534                           l1691:	
  3535  0656                     	movf	(___bmul@product),w
  3536  0656  084C               	goto	l383
  3537  0657  2E58               	
  3538                           l1693:	
  3539  0658                     	line	51
  3540                           	
  3541                           l383:	
  3542  0658                     	return
  3543  0658  0008               	opt stack 0
  3544                           GLOBAL	__end_of___bmul
  3545                           	__end_of___bmul:
  3546  0659                     	signat	___bmul,8313
  3547                           	global	_spiInit
  3548                           
  3549 ;; *************** function _spiInit *****************
  3550 ;; Defined at:
  3551 ;;		line 12 in file "SPI.c"
  3552 ;; Parameters:    Size  Location     Type
  3553 ;;  sType           1    wreg     enum E1265
  3554 ;;  sDataSample     1    0[BANK0 ] enum E1273
  3555 ;;  sClockIdle      1    1[BANK0 ] enum E1277
  3556 ;;  sTransmitEdg    1    2[BANK0 ] enum E1281
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;  sType           1    3[BANK0 ] enum E1265
  3559 ;; Return value:  Size  Location     Type
  3560 ;;                  1    wreg      void 
  3561 ;; Registers used:
  3562 ;;		wreg, status,2, status,0
  3563 ;; Tracked objects:
  3564 ;;		On entry : 0/0
  3565 ;;		On exit  : 0/0
  3566 ;;		Unchanged: 0/0
  3567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3568 ;;      Params:         0       3       0       0       0
  3569 ;;      Locals:         0       1       0       0       0
  3570 ;;      Temps:          0       0       0       0       0
  3571 ;;      Totals:         0       4       0       0       0
  3572 ;;Total ram usage:        4 bytes
  3573 ;; Hardware stack levels used:    1
  3574 ;; Hardware stack levels required when called:    3
  3575 ;; This function calls:
  3576 ;;		Nothing
  3577 ;; This function is called by:
  3578 ;;		_main
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3582                           	file	"SPI.c"
  3583                           	line	12
  3584                           global __ptext6
  3585                           __ptext6:	;psect for function _spiInit
  3586  0600                     psect	text6
  3587                           	file	"SPI.c"
  3588                           	line	12
  3589                           	global	__size_of_spiInit
  3590                           	__size_of_spiInit	equ	__end_of_spiInit-_spiInit
  3591  001F                     	
  3592                           _spiInit:	
  3593  0600                     ;incstack = 0
  3594                           	opt	stack 4
  3595                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  3596                           ;spiInit@sType stored from wreg
  3597                           	bcf	status, 5	;RP0=0, select bank0
  3598  0600  1283               	bcf	status, 6	;RP1=0, select bank0
  3599  0601  1303               	movwf	(spiInit@sType)
  3600  0602  00CD               	line	14
  3601                           	
  3602                           l1759:	
  3603  0603                     ;SPI.c: 14: TRISC5 = 0;
  3604                           	bsf	status, 5	;RP0=1, select bank1
  3605  0603  1683               	bcf	status, 6	;RP1=0, select bank1
  3606  0604  1303               	bcf	(1085/8)^080h,(1085)&7	;volatile
  3607  0605  1287               	line	15
  3608                           ;SPI.c: 15: if(sType & 0b00000100)
  3609                           	bcf	status, 5	;RP0=0, select bank0
  3610  0606  1283               	bcf	status, 6	;RP1=0, select bank0
  3611  0607  1303               	btfss	(spiInit@sType),(2)&7
  3612  0608  1D4D               	goto	u1311
  3613  0609  2E0B               	goto	u1310
  3614  060A  2E0C               u1311:
  3615  060B                     	goto	l1765
  3616  060B  2E12               u1310:
  3617  060C                     	line	17
  3618                           	
  3619                           l1761:	
  3620  060C                     ;SPI.c: 16: {;SPI.c: 17: SSPSTAT = sTransmitEdge;
  3621                           	movf	(spiInit@sTransmitEdge),w
  3622  060C  084C               	bsf	status, 5	;RP0=1, select bank1
  3623  060D  1683               	bcf	status, 6	;RP1=0, select bank1
  3624  060E  1303               	movwf	(148)^080h	;volatile
  3625  060F  0094               	line	18
  3626                           	
  3627                           l1763:	
  3628  0610                     ;SPI.c: 18: TRISC3 = 1;
  3629                           	bsf	(1083/8)^080h,(1083)&7	;volatile
  3630  0610  1587               	line	19
  3631                           ;SPI.c: 19: }
  3632                           	goto	l166
  3633  0611  2E19               	line	20
  3634                           	
  3635                           l165:	
  3636  0612                     	line	22
  3637                           	
  3638                           l1765:	
  3639  0612                     ;SPI.c: 20: else;SPI.c: 21: {;SPI.c: 22: SSPSTAT = sDataSample | sTransmitEdge;
  3640                           	bcf	status, 5	;RP0=0, select bank0
  3641  0612  1283               	movf	(spiInit@sDataSample),w
  3642  0613  084A               	iorwf	(spiInit@sTransmitEdge),w
  3643  0614  044C               	bsf	status, 5	;RP0=1, select bank1
  3644  0615  1683               	bcf	status, 6	;RP1=0, select bank1
  3645  0616  1303               	movwf	(148)^080h	;volatile
  3646  0617  0094               	line	23
  3647                           	
  3648                           l1767:	
  3649  0618                     ;SPI.c: 23: TRISC3 = 0;
  3650                           	bcf	(1083/8)^080h,(1083)&7	;volatile
  3651  0618  1187               	line	24
  3652                           	
  3653                           l166:	
  3654  0619                     	line	26
  3655                           ;SPI.c: 24: };SPI.c: 26: SSPCON = sType | sClockIdle;
  3656                           	bcf	status, 5	;RP0=0, select bank0
  3657  0619  1283               	bcf	status, 6	;RP1=0, select bank0
  3658  061A  1303               	movf	(spiInit@sType),w
  3659  061B  084D               	iorwf	(spiInit@sClockIdle),w
  3660  061C  044B               	movwf	(20)	;volatile
  3661  061D  0094               	line	27
  3662                           	
  3663                           l167:	
  3664  061E                     	return
  3665  061E  0008               	opt stack 0
  3666                           GLOBAL	__end_of_spiInit
  3667                           	__end_of_spiInit:
  3668  061F                     	signat	_spiInit,16505
  3669                           	global	_mandar
  3670                           
  3671 ;; *************** function _mandar *****************
  3672 ;; Defined at:
  3673 ;;		line 24 in file "USART1.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;  dato            2    0[BANK0 ] int 
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;		None
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1    wreg      void 
  3680 ;; Registers used:
  3681 ;;		wreg
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3687 ;;      Params:         0       2       0       0       0
  3688 ;;      Locals:         0       0       0       0       0
  3689 ;;      Temps:          0       0       0       0       0
  3690 ;;      Totals:         0       2       0       0       0
  3691 ;;Total ram usage:        2 bytes
  3692 ;; Hardware stack levels used:    1
  3693 ;; Hardware stack levels required when called:    3
  3694 ;; This function calls:
  3695 ;;		Nothing
  3696 ;; This function is called by:
  3697 ;;		_main
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3701                           	file	"USART1.c"
  3702                           	line	24
  3703                           global __ptext7
  3704                           __ptext7:	;psect for function _mandar
  3705  06B9                     psect	text7
  3706                           	file	"USART1.c"
  3707                           	line	24
  3708                           	global	__size_of_mandar
  3709                           	__size_of_mandar	equ	__end_of_mandar-_mandar
  3710  000D                     	
  3711                           _mandar:	
  3712  06B9                     ;incstack = 0
  3713                           	opt	stack 4
  3714                           ; Regs used in _mandar: [wreg]
  3715                           	line	25
  3716                           	
  3717                           l1755:	
  3718  06B9                     ;USART1.c: 25: while (TXSTAbits.TRMT == 0){}
  3719                           	goto	l18
  3720  06B9  2EBA               	
  3721                           l19:	
  3722  06BA                     	
  3723                           l18:	
  3724  06BA                     	bsf	status, 5	;RP0=1, select bank1
  3725  06BA  1683               	bcf	status, 6	;RP1=0, select bank1
  3726  06BB  1303               	btfss	(152)^080h,1	;volatile
  3727  06BC  1C98               	goto	u1301
  3728  06BD  2EBF               	goto	u1300
  3729  06BE  2EC0               u1301:
  3730  06BF                     	goto	l18
  3731  06BF  2EBA               u1300:
  3732  06C0                     	goto	l1757
  3733  06C0  2EC1               	
  3734                           l20:	
  3735  06C1                     	line	26
  3736                           	
  3737                           l1757:	
  3738  06C1                     ;USART1.c: 26: TXREG = dato;
  3739                           	bcf	status, 5	;RP0=0, select bank0
  3740  06C1  1283               	bcf	status, 6	;RP1=0, select bank0
  3741  06C2  1303               	movf	(mandar@dato),w
  3742  06C3  084A               	movwf	(25)	;volatile
  3743  06C4  0099               	line	27
  3744                           	
  3745                           l21:	
  3746  06C5                     	return
  3747  06C5  0008               	opt stack 0
  3748                           GLOBAL	__end_of_mandar
  3749                           	__end_of_mandar:
  3750  06C6                     	signat	_mandar,4217
  3751                           	global	_lcd_init
  3752                           
  3753 ;; *************** function _lcd_init *****************
  3754 ;; Defined at:
  3755 ;;		line 45 in file "LCD.c"
  3756 ;; Parameters:    Size  Location     Type
  3757 ;;		None
  3758 ;; Auto vars:     Size  Location     Type
  3759 ;;		None
  3760 ;; Return value:  Size  Location     Type
  3761 ;;                  1    wreg      void 
  3762 ;; Registers used:
  3763 ;;		wreg, status,2, status,0, pclath, cstack
  3764 ;; Tracked objects:
  3765 ;;		On entry : 0/0
  3766 ;;		On exit  : 0/0
  3767 ;;		Unchanged: 0/0
  3768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3769 ;;      Params:         0       0       0       0       0
  3770 ;;      Locals:         0       0       0       0       0
  3771 ;;      Temps:          0       0       0       0       0
  3772 ;;      Totals:         0       0       0       0       0
  3773 ;;Total ram usage:        0 bytes
  3774 ;; Hardware stack levels used:    1
  3775 ;; Hardware stack levels required when called:    6
  3776 ;; This function calls:
  3777 ;;		_lcd_cmd
  3778 ;; This function is called by:
  3779 ;;		_main
  3780 ;; This function uses a non-reentrant model
  3781 ;;
  3782                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3783                           	file	"LCD.c"
  3784                           	line	45
  3785                           global __ptext8
  3786                           __ptext8:	;psect for function _lcd_init
  3787  061F                     psect	text8
  3788                           	file	"LCD.c"
  3789                           	line	45
  3790                           	global	__size_of_lcd_init
  3791                           	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  3792  001F                     	
  3793                           _lcd_init:	
  3794  061F                     ;incstack = 0
  3795                           	opt	stack 1
  3796                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  3797                           	line	47
  3798                           	
  3799                           l1769:	
  3800  061F                     ;LCD.c: 47: lcd_cmd(0x38);
  3801                           	movlw	low(038h)
  3802  061F  3038               	fcall	_lcd_cmd
  3803  0620  120A  118A  266F  120A  118A  	line	48
  3804                           ;LCD.c: 48: lcd_cmd(0x0E);
  3805                           	movlw	low(0Eh)
  3806  0625  300E               	fcall	_lcd_cmd
  3807  0626  120A  118A  266F  120A  118A  	line	49
  3808                           ;LCD.c: 49: lcd_cmd(0x01);
  3809                           	movlw	low(01h)
  3810  062B  3001               	fcall	_lcd_cmd
  3811  062C  120A  118A  266F  120A  118A  	line	50
  3812                           ;LCD.c: 50: lcd_cmd(0x06);
  3813                           	movlw	low(06h)
  3814  0631  3006               	fcall	_lcd_cmd
  3815  0632  120A  118A  266F  120A  118A  	line	51
  3816                           ;LCD.c: 51: lcd_cmd(0x80);
  3817                           	movlw	low(080h)
  3818  0637  3080               	fcall	_lcd_cmd
  3819  0638  120A  118A  266F  120A  118A  	line	52
  3820                           	
  3821                           l206:	
  3822  063D                     	return
  3823  063D  0008               	opt stack 0
  3824                           GLOBAL	__end_of_lcd_init
  3825                           	__end_of_lcd_init:
  3826  063E                     	signat	_lcd_init,89
  3827                           	global	_lcd_cmd
  3828                           
  3829 ;; *************** function _lcd_cmd *****************
  3830 ;; Defined at:
  3831 ;;		line 36 in file "LCD.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;  x               1    wreg     unsigned char 
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;  x               1    7[BANK0 ] unsigned char 
  3836 ;; Return value:  Size  Location     Type
  3837 ;;                  1    wreg      void 
  3838 ;; Registers used:
  3839 ;;		wreg, status,2, status,0, pclath, cstack
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3845 ;;      Params:         0       0       0       0       0
  3846 ;;      Locals:         0       1       0       0       0
  3847 ;;      Temps:          0       0       0       0       0
  3848 ;;      Totals:         0       1       0       0       0
  3849 ;;Total ram usage:        1 bytes
  3850 ;; Hardware stack levels used:    1
  3851 ;; Hardware stack levels required when called:    5
  3852 ;; This function calls:
  3853 ;;		_lcd_lat
  3854 ;;		_lcd_ready
  3855 ;; This function is called by:
  3856 ;;		_lcd_init
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3860                           	line	36
  3861                           global __ptext9
  3862                           __ptext9:	;psect for function _lcd_cmd
  3863  066F                     psect	text9
  3864                           	file	"LCD.c"
  3865                           	line	36
  3866                           	global	__size_of_lcd_cmd
  3867                           	__size_of_lcd_cmd	equ	__end_of_lcd_cmd-_lcd_cmd
  3868  0014                     	
  3869                           _lcd_cmd:	
  3870  066F                     ;incstack = 0
  3871                           	opt	stack 1
  3872                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  3873                           ;lcd_cmd@x stored from wreg
  3874                           	bcf	status, 5	;RP0=0, select bank0
  3875  066F  1283               	bcf	status, 6	;RP1=0, select bank0
  3876  0670  1303               	movwf	(lcd_cmd@x)
  3877  0671  00D1               	line	38
  3878                           	
  3879                           l1651:	
  3880  0672                     ;LCD.c: 38: lcd_ready();
  3881                           	fcall	_lcd_ready
  3882  0672  120A  118A  25A6  120A  118A  	line	39
  3883                           	
  3884                           l1653:	
  3885  0677                     ;LCD.c: 39: PORTB = x;
  3886                           	bcf	status, 5	;RP0=0, select bank0
  3887  0677  1283               	bcf	status, 6	;RP1=0, select bank0
  3888  0678  1303               	movf	(lcd_cmd@x),w
  3889  0679  0851               	movwf	(6)	;volatile
  3890  067A  0086               	line	40
  3891                           	
  3892                           l1655:	
  3893  067B                     ;LCD.c: 40: PORTDbits.RD5 = 0;
  3894                           	bcf	(8),5	;volatile
  3895  067B  1288               	line	41
  3896                           	
  3897                           l1657:	
  3898  067C                     ;LCD.c: 41: PORTDbits.RD6 = 0;
  3899                           	bcf	(8),6	;volatile
  3900  067C  1308               	line	42
  3901                           	
  3902                           l1659:	
  3903  067D                     ;LCD.c: 42: lcd_lat();
  3904                           	fcall	_lcd_lat
  3905  067D  120A  118A  26A9  120A  118A  	line	43
  3906                           	
  3907                           l203:	
  3908  0682                     	return
  3909  0682  0008               	opt stack 0
  3910                           GLOBAL	__end_of_lcd_cmd
  3911                           	__end_of_lcd_cmd:
  3912  0683                     	signat	_lcd_cmd,4217
  3913                           	global	_lcd_ready
  3914                           
  3915 ;; *************** function _lcd_ready *****************
  3916 ;; Defined at:
  3917 ;;		line 19 in file "LCD.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;		None
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;		None
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  1    wreg      void 
  3924 ;; Registers used:
  3925 ;;		wreg, status,2, status,0, pclath, cstack
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3931 ;;      Params:         0       0       0       0       0
  3932 ;;      Locals:         0       0       0       0       0
  3933 ;;      Temps:          0       1       0       0       0
  3934 ;;      Totals:         0       1       0       0       0
  3935 ;;Total ram usage:        1 bytes
  3936 ;; Hardware stack levels used:    1
  3937 ;; Hardware stack levels required when called:    4
  3938 ;; This function calls:
  3939 ;;		_delay
  3940 ;; This function is called by:
  3941 ;;		_lcd_cmd
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3945                           	line	19
  3946                           global __ptext10
  3947                           __ptext10:	;psect for function _lcd_ready
  3948  05A6                     psect	text10
  3949                           	file	"LCD.c"
  3950                           	line	19
  3951                           	global	__size_of_lcd_ready
  3952                           	__size_of_lcd_ready	equ	__end_of_lcd_ready-_lcd_ready
  3953  002D                     	
  3954                           _lcd_ready:	
  3955  05A6                     ;incstack = 0
  3956                           	opt	stack 1
  3957                           ; Regs used in _lcd_ready: [wreg+status,2+status,0+pclath+cstack]
  3958                           	line	21
  3959                           	
  3960                           l1621:	
  3961  05A6                     ;LCD.c: 21: PORTB = 0xFF;
  3962                           	movlw	low(0FFh)
  3963  05A6  30FF               	bcf	status, 5	;RP0=0, select bank0
  3964  05A7  1283               	bcf	status, 6	;RP1=0, select bank0
  3965  05A8  1303               	movwf	(6)	;volatile
  3966  05A9  0086               	line	22
  3967                           	
  3968                           l1623:	
  3969  05AA                     ;LCD.c: 22: PORTB &= 0x80;
  3970                           	movlw	low(080h)
  3971  05AA  3080               	movwf	(??_lcd_ready+0)+0
  3972  05AB  00D0               	movf	(??_lcd_ready+0)+0,w
  3973  05AC  0850               	andwf	(6),f	;volatile
  3974  05AD  0586               	line	23
  3975                           	
  3976                           l1625:	
  3977  05AE                     ;LCD.c: 23: PORTDbits.RD5 = 0;
  3978                           	bcf	(8),5	;volatile
  3979  05AE  1288               	line	24
  3980                           	
  3981                           l1627:	
  3982  05AF                     ;LCD.c: 24: PORTDbits.RD6 = 1;
  3983                           	bsf	(8),6	;volatile
  3984  05AF  1708               	line	25
  3985                           	
  3986                           l1629:	
  3987  05B0                     ;LCD.c: 25: PORTDbits.RD7 = 0; delay(1); PORTDbits.RD7 = 1;
  3988                           	bcf	(8),7	;volatile
  3989  05B0  1388               	
  3990                           l1631:	
  3991  05B1                     	movlw	01h
  3992  05B1  3001               	movwf	(delay@ms)
  3993  05B2  00CA               	movlw	0
  3994  05B3  3000               	movwf	((delay@ms))+1
  3995  05B4  00CB               	fcall	_delay
  3996  05B5  120A  118A  2572  120A  118A  	
  3997                           l1633:	
  3998  05BA                     	bcf	status, 5	;RP0=0, select bank0
  3999  05BA  1283               	bcf	status, 6	;RP1=0, select bank0
  4000  05BB  1303               	bsf	(8),7	;volatile
  4001  05BC  1788               	line	26
  4002                           	
  4003                           l1635:	
  4004  05BD                     ;LCD.c: 26: if(PORTB == 0x80)
  4005                           		movlw	128
  4006  05BD  3080               	xorwf	((6)),w	;volatile
  4007  05BE  0606               	btfss	status,2
  4008  05BF  1D03               	goto	u1121
  4009  05C0  2DC2               	goto	u1120
  4010  05C1  2DC3               u1121:
  4011  05C2                     	goto	l200
  4012  05C2  2DD2               u1120:
  4013  05C3                     	line	28
  4014                           	
  4015                           l1637:	
  4016  05C3                     ;LCD.c: 27: {;LCD.c: 28: PORTDbits.RD7 = 0; delay(1); PORTDbits.RD7 = 1;
  4017                           	bcf	(8),7	;volatile
  4018  05C3  1388               	
  4019                           l1639:	
  4020  05C4                     	movlw	01h
  4021  05C4  3001               	movwf	(delay@ms)
  4022  05C5  00CA               	movlw	0
  4023  05C6  3000               	movwf	((delay@ms))+1
  4024  05C7  00CB               	fcall	_delay
  4025  05C8  120A  118A  2572  120A  118A  	
  4026                           l1641:	
  4027  05CD                     	bcf	status, 5	;RP0=0, select bank0
  4028  05CD  1283               	bcf	status, 6	;RP1=0, select bank0
  4029  05CE  1303               	bsf	(8),7	;volatile
  4030  05CF  1788               	line	29
  4031                           ;LCD.c: 29: }
  4032                           	goto	l200
  4033  05D0  2DD2               	line	30
  4034                           	
  4035                           l198:	
  4036  05D1                     	goto	l200
  4037  05D1  2DD2               	line	33
  4038                           ;LCD.c: 30: else;LCD.c: 31: {
  4039                           	
  4040                           l199:	
  4041  05D2                     	line	34
  4042                           	
  4043                           l200:	
  4044  05D2                     	return
  4045  05D2  0008               	opt stack 0
  4046                           GLOBAL	__end_of_lcd_ready
  4047                           	__end_of_lcd_ready:
  4048  05D3                     	signat	_lcd_ready,89
  4049                           	global	_lcd_lat
  4050                           
  4051 ;; *************** function _lcd_lat *****************
  4052 ;; Defined at:
  4053 ;;		line 12 in file "LCD.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;		None
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;		None
  4058 ;; Return value:  Size  Location     Type
  4059 ;;                  1    wreg      void 
  4060 ;; Registers used:
  4061 ;;		wreg, status,2, status,0, pclath, cstack
  4062 ;; Tracked objects:
  4063 ;;		On entry : 0/0
  4064 ;;		On exit  : 0/0
  4065 ;;		Unchanged: 0/0
  4066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4067 ;;      Params:         0       0       0       0       0
  4068 ;;      Locals:         0       0       0       0       0
  4069 ;;      Temps:          0       0       0       0       0
  4070 ;;      Totals:         0       0       0       0       0
  4071 ;;Total ram usage:        0 bytes
  4072 ;; Hardware stack levels used:    1
  4073 ;; Hardware stack levels required when called:    4
  4074 ;; This function calls:
  4075 ;;		_delay
  4076 ;; This function is called by:
  4077 ;;		_lcd_cmd
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  4081                           	line	12
  4082                           global __ptext11
  4083                           __ptext11:	;psect for function _lcd_lat
  4084  06A9                     psect	text11
  4085                           	file	"LCD.c"
  4086                           	line	12
  4087                           	global	__size_of_lcd_lat
  4088                           	__size_of_lcd_lat	equ	__end_of_lcd_lat-_lcd_lat
  4089  0010                     	
  4090                           _lcd_lat:	
  4091  06A9                     ;incstack = 0
  4092                           	opt	stack 1
  4093                           ; Regs used in _lcd_lat: [wreg+status,2+status,0+pclath+cstack]
  4094                           	line	14
  4095                           	
  4096                           l1615:	
  4097  06A9                     ;LCD.c: 14: PORTDbits.RD7 = 1;
  4098                           	bcf	status, 5	;RP0=0, select bank0
  4099  06A9  1283               	bcf	status, 6	;RP1=0, select bank0
  4100  06AA  1303               	bsf	(8),7	;volatile
  4101  06AB  1788               	line	15
  4102                           	
  4103                           l1617:	
  4104  06AC                     ;LCD.c: 15: delay(1);
  4105                           	movlw	01h
  4106  06AC  3001               	movwf	(delay@ms)
  4107  06AD  00CA               	movlw	0
  4108  06AE  3000               	movwf	((delay@ms))+1
  4109  06AF  00CB               	fcall	_delay
  4110  06B0  120A  118A  2572  120A  118A  	line	16
  4111                           	
  4112                           l1619:	
  4113  06B5                     ;LCD.c: 16: PORTDbits.RD7 = 0;
  4114                           	bcf	status, 5	;RP0=0, select bank0
  4115  06B5  1283               	bcf	status, 6	;RP1=0, select bank0
  4116  06B6  1303               	bcf	(8),7	;volatile
  4117  06B7  1388               	line	17
  4118                           	
  4119                           l195:	
  4120  06B8                     	return
  4121  06B8  0008               	opt stack 0
  4122                           GLOBAL	__end_of_lcd_lat
  4123                           	__end_of_lcd_lat:
  4124  06B9                     	signat	_lcd_lat,89
  4125                           	global	_delay
  4126                           
  4127 ;; *************** function _delay *****************
  4128 ;; Defined at:
  4129 ;;		line 54 in file "LCD.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;  ms              2    0[BANK0 ] unsigned int 
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;  i               2    4[BANK0 ] unsigned int 
  4134 ;;  j               2    2[BANK0 ] unsigned int 
  4135 ;; Return value:  Size  Location     Type
  4136 ;;                  1    wreg      void 
  4137 ;; Registers used:
  4138 ;;		wreg, status,2
  4139 ;; Tracked objects:
  4140 ;;		On entry : 0/0
  4141 ;;		On exit  : 0/0
  4142 ;;		Unchanged: 0/0
  4143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4144 ;;      Params:         0       2       0       0       0
  4145 ;;      Locals:         0       4       0       0       0
  4146 ;;      Temps:          0       0       0       0       0
  4147 ;;      Totals:         0       6       0       0       0
  4148 ;;Total ram usage:        6 bytes
  4149 ;; Hardware stack levels used:    1
  4150 ;; Hardware stack levels required when called:    3
  4151 ;; This function calls:
  4152 ;;		Nothing
  4153 ;; This function is called by:
  4154 ;;		_lcd_lat
  4155 ;;		_lcd_ready
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  4159                           	line	54
  4160                           global __ptext12
  4161                           __ptext12:	;psect for function _delay
  4162  0572                     psect	text12
  4163                           	file	"LCD.c"
  4164                           	line	54
  4165                           	global	__size_of_delay
  4166                           	__size_of_delay	equ	__end_of_delay-_delay
  4167  0034                     	
  4168                           _delay:	
  4169  0572                     ;incstack = 0
  4170                           	opt	stack 1
  4171                           ; Regs used in _delay: [wreg+status,2]
  4172                           	line	57
  4173                           	
  4174                           l1603:	
  4175  0572                     ;LCD.c: 56: unsigned int i,j;;LCD.c: 57: for(i=0;i<=120;i++)
  4176                           	bcf	status, 5	;RP0=0, select bank0
  4177  0572  1283               	bcf	status, 6	;RP1=0, select bank0
  4178  0573  1303               	clrf	(delay@i)
  4179  0574  01CE               	clrf	(delay@i+1)
  4180  0575  01CF               	
  4181                           l1605:	
  4182  0576                     	movlw	0
  4183  0576  3000               	subwf	(delay@i+1),w
  4184  0577  024F               	movlw	079h
  4185  0578  3079               	skipnz
  4186  0579  1903               	subwf	(delay@i),w
  4187  057A  024E               	skipc
  4188  057B  1C03               	goto	u1091
  4189  057C  2D7E               	goto	u1090
  4190  057D  2D7F               u1091:
  4191  057E                     	goto	l1609
  4192  057E  2D81               u1090:
  4193  057F                     	goto	l214
  4194  057F  2DA5               	
  4195                           l1607:	
  4196  0580                     	goto	l214
  4197  0580  2DA5               	line	58
  4198                           	
  4199                           l209:	
  4200  0581                     	
  4201                           l1609:	
  4202  0581                     ;LCD.c: 58: for(j=0;j<=ms;j++);
  4203                           	clrf	(delay@j)
  4204  0581  01CC               	clrf	(delay@j+1)
  4205  0582  01CD               	goto	l211
  4206  0583  2D8A               	
  4207                           l212:	
  4208  0584                     	
  4209                           l1611:	
  4210  0584                     	movlw	01h
  4211  0584  3001               	addwf	(delay@j),f
  4212  0585  07CC               	skipnc
  4213  0586  1803               	incf	(delay@j+1),f
  4214  0587  0ACD               	movlw	0
  4215  0588  3000               	addwf	(delay@j+1),f
  4216  0589  07CD               	
  4217                           l211:	
  4218  058A                     	movf	(delay@j+1),w
  4219  058A  084D               	subwf	(delay@ms+1),w
  4220  058B  024B               	skipz
  4221  058C  1D03               	goto	u1105
  4222  058D  2D90               	movf	(delay@j),w
  4223  058E  084C               	subwf	(delay@ms),w
  4224  058F  024A               u1105:
  4225  0590                     	skipnc
  4226  0590  1803               	goto	u1101
  4227  0591  2D93               	goto	u1100
  4228  0592  2D94               u1101:
  4229  0593                     	goto	l1611
  4230  0593  2D84               u1100:
  4231  0594                     	goto	l1613
  4232  0594  2D95               	
  4233                           l213:	
  4234  0595                     	line	57
  4235                           	
  4236                           l1613:	
  4237  0595                     	movlw	01h
  4238  0595  3001               	addwf	(delay@i),f
  4239  0596  07CE               	skipnc
  4240  0597  1803               	incf	(delay@i+1),f
  4241  0598  0ACF               	movlw	0
  4242  0599  3000               	addwf	(delay@i+1),f
  4243  059A  07CF               	movlw	0
  4244  059B  3000               	subwf	(delay@i+1),w
  4245  059C  024F               	movlw	079h
  4246  059D  3079               	skipnz
  4247  059E  1903               	subwf	(delay@i),w
  4248  059F  024E               	skipc
  4249  05A0  1C03               	goto	u1111
  4250  05A1  2DA3               	goto	u1110
  4251  05A2  2DA4               u1111:
  4252  05A3                     	goto	l1609
  4253  05A3  2D81               u1110:
  4254  05A4                     	goto	l214
  4255  05A4  2DA5               	
  4256                           l210:	
  4257  05A5                     	line	59
  4258                           	
  4259                           l214:	
  4260  05A5                     	return
  4261  05A5  0008               	opt stack 0
  4262                           GLOBAL	__end_of_delay
  4263                           	__end_of_delay:
  4264  05A6                     	signat	_delay,4217
  4265                           	global	_config
  4266                           
  4267 ;; *************** function _config *****************
  4268 ;; Defined at:
  4269 ;;		line 12 in file "USART1.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;		None
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;		None
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  1    wreg      void 
  4276 ;; Registers used:
  4277 ;;		wreg, status,2
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4283 ;;      Params:         0       0       0       0       0
  4284 ;;      Locals:         0       0       0       0       0
  4285 ;;      Temps:          0       0       0       0       0
  4286 ;;      Totals:         0       0       0       0       0
  4287 ;;Total ram usage:        0 bytes
  4288 ;; Hardware stack levels used:    1
  4289 ;; Hardware stack levels required when called:    3
  4290 ;; This function calls:
  4291 ;;		Nothing
  4292 ;; This function is called by:
  4293 ;;		_main
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  4297                           	file	"USART1.c"
  4298                           	line	12
  4299                           global __ptext13
  4300                           __ptext13:	;psect for function _config
  4301  0683                     psect	text13
  4302                           	file	"USART1.c"
  4303                           	line	12
  4304                           	global	__size_of_config
  4305                           	__size_of_config	equ	__end_of_config-_config
  4306  0014                     	
  4307                           _config:	
  4308  0683                     ;incstack = 0
  4309                           	opt	stack 4
  4310                           ; Regs used in _config: [wreg+status,2]
  4311                           	line	13
  4312                           	
  4313                           l1743:	
  4314  0683                     ;USART1.c: 13: TXSTAbits.SYNC = 0;
  4315                           	bsf	status, 5	;RP0=1, select bank1
  4316  0683  1683               	bcf	status, 6	;RP1=0, select bank1
  4317  0684  1303               	bcf	(152)^080h,4	;volatile
  4318  0685  1218               	line	14
  4319                           ;USART1.c: 14: TXSTAbits.BRGH = 0;
  4320                           	bcf	(152)^080h,2	;volatile
  4321  0686  1118               	line	15
  4322                           ;USART1.c: 15: BAUDCTLbits.BRG16 = 1;
  4323                           	bsf	status, 5	;RP0=1, select bank3
  4324  0687  1683               	bsf	status, 6	;RP1=1, select bank3
  4325  0688  1703               	bsf	(391)^0180h,3	;volatile
  4326  0689  1587               	line	16
  4327                           	
  4328                           l1745:	
  4329  068A                     ;USART1.c: 16: SPBRG = 25;
  4330                           	movlw	low(019h)
  4331  068A  3019               	bsf	status, 5	;RP0=1, select bank1
  4332  068B  1683               	bcf	status, 6	;RP1=0, select bank1
  4333  068C  1303               	movwf	(153)^080h	;volatile
  4334  068D  0099               	line	17
  4335                           	
  4336                           l1747:	
  4337  068E                     ;USART1.c: 17: SPBRGH = 0;
  4338                           	clrf	(154)^080h	;volatile
  4339  068E  019A               	line	18
  4340                           	
  4341                           l1749:	
  4342  068F                     ;USART1.c: 18: RCSTAbits.SPEN = 1;
  4343                           	bcf	status, 5	;RP0=0, select bank0
  4344  068F  1283               	bcf	status, 6	;RP1=0, select bank0
  4345  0690  1303               	bsf	(24),7	;volatile
  4346  0691  1798               	line	19
  4347                           	
  4348                           l1751:	
  4349  0692                     ;USART1.c: 19: RCSTAbits.CREN = 1;
  4350                           	bsf	(24),4	;volatile
  4351  0692  1618               	line	20
  4352                           	
  4353                           l1753:	
  4354  0693                     ;USART1.c: 20: TXSTAbits.TXEN = 1;
  4355                           	bsf	status, 5	;RP0=1, select bank1
  4356  0693  1683               	bcf	status, 6	;RP1=0, select bank1
  4357  0694  1303               	bsf	(152)^080h,5	;volatile
  4358  0695  1698               	line	21
  4359                           	
  4360                           l15:	
  4361  0696                     	return
  4362  0696  0008               	opt stack 0
  4363                           GLOBAL	__end_of_config
  4364                           	__end_of_config:
  4365  0697                     	signat	_config,89
  4366                           	global	_LCD_STRING
  4367                           
  4368 ;; *************** function _LCD_STRING *****************
  4369 ;; Defined at:
  4370 ;;		line 98 in file "LCD.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;  a               2    2[BANK0 ] PTR unsigned char 
  4373 ;;		 -> valor(16), valor1(16), STR_2(16), STR_1(12), 
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;  n               2    7[BANK0 ] int 
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  1    wreg      void 
  4378 ;; Registers used:
  4379 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4385 ;;      Params:         0       2       0       0       0
  4386 ;;      Locals:         0       2       0       0       0
  4387 ;;      Temps:          0       3       0       0       0
  4388 ;;      Totals:         0       7       0       0       0
  4389 ;;Total ram usage:        7 bytes
  4390 ;; Hardware stack levels used:    1
  4391 ;; Hardware stack levels required when called:    4
  4392 ;; This function calls:
  4393 ;;		_LCD_CHAR
  4394 ;; This function is called by:
  4395 ;;		_main
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  4399                           	file	"LCD.c"
  4400                           	line	98
  4401                           global __ptext14
  4402                           __ptext14:	;psect for function _LCD_STRING
  4403  04B0                     psect	text14
  4404                           	file	"LCD.c"
  4405                           	line	98
  4406                           	global	__size_of_LCD_STRING
  4407                           	__size_of_LCD_STRING	equ	__end_of_LCD_STRING-_LCD_STRING
  4408  0048                     	
  4409                           _LCD_STRING:	
  4410  04B0                     ;incstack = 0
  4411                           	opt	stack 3
  4412                           ; Regs used in _LCD_STRING: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4413                           	line	101
  4414                           	
  4415                           l1771:	
  4416  04B0                     ;LCD.c: 100: int n;;LCD.c: 101: for(n = 0; a[n] != '\0'; n++){
  4417                           	bcf	status, 5	;RP0=0, select bank0
  4418  04B0  1283               	bcf	status, 6	;RP1=0, select bank0
  4419  04B1  1303               	clrf	(LCD_STRING@n)
  4420  04B2  01D1               	clrf	(LCD_STRING@n+1)
  4421  04B3  01D2               	goto	l1777
  4422  04B4  2CDA               	
  4423                           l230:	
  4424  04B5                     	line	102
  4425                           	
  4426                           l1773:	
  4427  04B5                     ;LCD.c: 102: LCD_CHAR(a[n]);
  4428                           	movf	(LCD_STRING@n),w
  4429  04B5  0851               	addwf	(LCD_STRING@a),w
  4430  04B6  074C               	movwf	(??_LCD_STRING+1)+0
  4431  04B7  00CF               	movf	(LCD_STRING@a+1),w
  4432  04B8  084D               	movwf	(??_LCD_STRING+0)+0
  4433  04B9  00CE               	skipnc
  4434  04BA  1803               	incf	(??_LCD_STRING+0)+0,f
  4435  04BB  0ACE               	btfss	(LCD_STRING@n),7
  4436  04BC  1FD1               	goto	u1320
  4437  04BD  2CBF               	decf	(??_LCD_STRING+0)+0,f
  4438  04BE  03CE               u1320:
  4439  04BF                     	bcf	status, 5	;RP0=0, select bank0
  4440  04BF  1283               	bcf	status, 6	;RP1=0, select bank0
  4441  04C0  1303               	movf	(??_LCD_STRING+0)+0,w
  4442  04C1  084E               	movwf	0+((??_LCD_STRING+1)+0)+1
  4443  04C2  00D0               	movf	1+(??_LCD_STRING+1)+0,w
  4444  04C3  0850               	movwf	btemp+1
  4445  04C4  00FF               	movf	0+(??_LCD_STRING+1)+0,w
  4446  04C5  084F               	movwf	fsr0
  4447  04C6  0084               	fcall	stringtab
  4448  04C7  120A  118A  2400  120A  118A  	fcall	_LCD_CHAR
  4449  04CC  120A  118A  2697  120A  118A  	line	101
  4450                           	
  4451                           l1775:	
  4452  04D1                     	movlw	01h
  4453  04D1  3001               	bcf	status, 5	;RP0=0, select bank0
  4454  04D2  1283               	bcf	status, 6	;RP1=0, select bank0
  4455  04D3  1303               	addwf	(LCD_STRING@n),f
  4456  04D4  07D1               	skipnc
  4457  04D5  1803               	incf	(LCD_STRING@n+1),f
  4458  04D6  0AD2               	movlw	0
  4459  04D7  3000               	addwf	(LCD_STRING@n+1),f
  4460  04D8  07D2               	goto	l1777
  4461  04D9  2CDA               	
  4462                           l229:	
  4463  04DA                     	
  4464                           l1777:	
  4465  04DA                     	movf	(LCD_STRING@n),w
  4466  04DA  0851               	addwf	(LCD_STRING@a),w
  4467  04DB  074C               	movwf	(??_LCD_STRING+1)+0
  4468  04DC  00CF               	movf	(LCD_STRING@a+1),w
  4469  04DD  084D               	movwf	(??_LCD_STRING+0)+0
  4470  04DE  00CE               	skipnc
  4471  04DF  1803               	incf	(??_LCD_STRING+0)+0,f
  4472  04E0  0ACE               	btfss	(LCD_STRING@n),7
  4473  04E1  1FD1               	goto	u1330
  4474  04E2  2CE4               	decf	(??_LCD_STRING+0)+0,f
  4475  04E3  03CE               u1330:
  4476  04E4                     	bcf	status, 5	;RP0=0, select bank0
  4477  04E4  1283               	bcf	status, 6	;RP1=0, select bank0
  4478  04E5  1303               	movf	(??_LCD_STRING+0)+0,w
  4479  04E6  084E               	movwf	0+((??_LCD_STRING+1)+0)+1
  4480  04E7  00D0               	movf	1+(??_LCD_STRING+1)+0,w
  4481  04E8  0850               	movwf	btemp+1
  4482  04E9  00FF               	movf	0+(??_LCD_STRING+1)+0,w
  4483  04EA  084F               	movwf	fsr0
  4484  04EB  0084               	fcall	stringtab
  4485  04EC  120A  118A  2400  120A  118A  	xorlw	0
  4486  04F1  3A00               	skipz
  4487  04F2  1D03               	goto	u1341
  4488  04F3  2CF5               	goto	u1340
  4489  04F4  2CF6               u1341:
  4490  04F5                     	goto	l1773
  4491  04F5  2CB5               u1340:
  4492  04F6                     	goto	l232
  4493  04F6  2CF7               	
  4494                           l231:	
  4495  04F7                     	line	104
  4496                           	
  4497                           l232:	
  4498  04F7                     	return
  4499  04F7  0008               	opt stack 0
  4500                           GLOBAL	__end_of_LCD_STRING
  4501                           	__end_of_LCD_STRING:
  4502  04F8                     	signat	_LCD_STRING,4217
  4503                           	global	_LCD_CHAR
  4504                           
  4505 ;; *************** function _LCD_CHAR *****************
  4506 ;; Defined at:
  4507 ;;		line 88 in file "LCD.c"
  4508 ;; Parameters:    Size  Location     Type
  4509 ;;  a               1    wreg     unsigned char 
  4510 ;; Auto vars:     Size  Location     Type
  4511 ;;  a               1    1[BANK0 ] unsigned char 
  4512 ;; Return value:  Size  Location     Type
  4513 ;;                  1    wreg      void 
  4514 ;; Registers used:
  4515 ;;		wreg
  4516 ;; Tracked objects:
  4517 ;;		On entry : 0/0
  4518 ;;		On exit  : 0/0
  4519 ;;		Unchanged: 0/0
  4520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4521 ;;      Params:         0       0       0       0       0
  4522 ;;      Locals:         0       1       0       0       0
  4523 ;;      Temps:          0       1       0       0       0
  4524 ;;      Totals:         0       2       0       0       0
  4525 ;;Total ram usage:        2 bytes
  4526 ;; Hardware stack levels used:    1
  4527 ;; Hardware stack levels required when called:    3
  4528 ;; This function calls:
  4529 ;;		Nothing
  4530 ;; This function is called by:
  4531 ;;		_LCD_STRING
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  4535                           	line	88
  4536                           global __ptext15
  4537                           __ptext15:	;psect for function _LCD_CHAR
  4538  0697                     psect	text15
  4539                           	file	"LCD.c"
  4540                           	line	88
  4541                           	global	__size_of_LCD_CHAR
  4542                           	__size_of_LCD_CHAR	equ	__end_of_LCD_CHAR-_LCD_CHAR
  4543  0012                     	
  4544                           _LCD_CHAR:	
  4545  0697                     ;incstack = 0
  4546                           	opt	stack 3
  4547                           ; Regs used in _LCD_CHAR: [wreg]
  4548                           ;LCD_CHAR@a stored from wreg
  4549                           	bcf	status, 5	;RP0=0, select bank0
  4550  0697  1283               	bcf	status, 6	;RP1=0, select bank0
  4551  0698  1303               	movwf	(LCD_CHAR@a)
  4552  0699  00CB               	line	90
  4553                           	
  4554                           l1661:	
  4555  069A                     ;LCD.c: 90: PORTDbits.RD5 = 1;
  4556                           	bsf	(8),5	;volatile
  4557  069A  1688               	line	92
  4558                           	
  4559                           l1663:	
  4560  069B                     ;LCD.c: 92: PORTB = a;
  4561                           	movf	(LCD_CHAR@a),w
  4562  069B  084B               	movwf	(6)	;volatile
  4563  069C  0086               	line	93
  4564                           	
  4565                           l1665:	
  4566  069D                     ;LCD.c: 93: PORTDbits.RD7 = 1;
  4567                           	bsf	(8),7	;volatile
  4568  069D  1788               	line	94
  4569                           ;LCD.c: 94: _delay((unsigned long)((40)*(4000000/4000000.0)));
  4570                           	opt asmopt_push
  4571                           opt asmopt_off
  4572                           	movlw	12
  4573  069E  300C               	bcf	status, 5	;RP0=0, select bank0
  4574  069F  1283               	bcf	status, 6	;RP1=0, select bank0
  4575  06A0  1303               movwf	((??_LCD_CHAR+0)+0),f
  4576  06A1  00CA               	u1627:
  4577  06A2                     decfsz	(??_LCD_CHAR+0)+0,f
  4578  06A2  0BCA               	goto	u1627
  4579  06A3  2EA2               	nop
  4580  06A4  0000               opt asmopt_pop
  4581                           
  4582                           	line	95
  4583                           	
  4584                           l1667:	
  4585  06A5                     ;LCD.c: 95: PORTDbits.RD7 = 0;
  4586                           	bcf	status, 5	;RP0=0, select bank0
  4587  06A5  1283               	bcf	status, 6	;RP1=0, select bank0
  4588  06A6  1303               	bcf	(8),7	;volatile
  4589  06A7  1388               	line	96
  4590                           	
  4591                           l226:	
  4592  06A8                     	return
  4593  06A8  0008               	opt stack 0
  4594                           GLOBAL	__end_of_LCD_CHAR
  4595                           	__end_of_LCD_CHAR:
  4596  06A9                     	signat	_LCD_CHAR,4217
  4597                           	global	_LCD_CURSOR
  4598                           
  4599 ;; *************** function _LCD_CURSOR *****************
  4600 ;; Defined at:
  4601 ;;		line 71 in file "LCD.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;  a               2    4[BANK0 ] int 
  4604 ;;  b               2    6[BANK0 ] int 
  4605 ;; Auto vars:     Size  Location     Type
  4606 ;;  d               2    8[BANK0 ] int 
  4607 ;; Return value:  Size  Location     Type
  4608 ;;                  1    wreg      void 
  4609 ;; Registers used:
  4610 ;;		wreg, status,2, status,0, pclath, cstack
  4611 ;; Tracked objects:
  4612 ;;		On entry : 0/0
  4613 ;;		On exit  : 0/0
  4614 ;;		Unchanged: 0/0
  4615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4616 ;;      Params:         0       4       0       0       0
  4617 ;;      Locals:         0       2       0       0       0
  4618 ;;      Temps:          0       0       0       0       0
  4619 ;;      Totals:         0       6       0       0       0
  4620 ;;Total ram usage:        6 bytes
  4621 ;; Hardware stack levels used:    1
  4622 ;; Hardware stack levels required when called:    4
  4623 ;; This function calls:
  4624 ;;		_LCD_DATO
  4625 ;; This function is called by:
  4626 ;;		_main
  4627 ;; This function uses a non-reentrant model
  4628 ;;
  4629                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  4630                           	line	71
  4631                           global __ptext16
  4632                           __ptext16:	;psect for function _LCD_CURSOR
  4633  053B                     psect	text16
  4634                           	file	"LCD.c"
  4635                           	line	71
  4636                           	global	__size_of_LCD_CURSOR
  4637                           	__size_of_LCD_CURSOR	equ	__end_of_LCD_CURSOR-_LCD_CURSOR
  4638  0037                     	
  4639                           _LCD_CURSOR:	
  4640  053B                     ;incstack = 0
  4641                           	opt	stack 3
  4642                           ; Regs used in _LCD_CURSOR: [wreg+status,2+status,0+pclath+cstack]
  4643                           	line	74
  4644                           	
  4645                           l1861:	
  4646  053B                     ;LCD.c: 73: int d;;LCD.c: 74: if(a == 1)
  4647                           	bcf	status, 5	;RP0=0, select bank0
  4648  053B  1283               	bcf	status, 6	;RP1=0, select bank0
  4649  053C  1303               		decf	((LCD_CURSOR@a)),w
  4650  053D  034E               iorwf	((LCD_CURSOR@a+1)),w
  4651  053E  044F               	btfss	status,2
  4652  053F  1D03               	goto	u1491
  4653  0540  2D42               	goto	u1490
  4654  0541  2D43               u1491:
  4655  0542                     	goto	l1867
  4656  0542  2D55               u1490:
  4657  0543                     	line	76
  4658                           	
  4659                           l1863:	
  4660  0543                     ;LCD.c: 75: {;LCD.c: 76: d = 0x80 + b - 1;
  4661                           	movf	(LCD_CURSOR@b),w
  4662  0543  0850               	addlw	low(07Fh)
  4663  0544  3E7F               	movwf	(LCD_CURSOR@d)
  4664  0545  00D2               	movf	(LCD_CURSOR@b+1),w
  4665  0546  0851               	skipnc
  4666  0547  1803               	addlw	1
  4667  0548  3E01               	addlw	high(07Fh)
  4668  0549  3E00               	movwf	1+(LCD_CURSOR@d)
  4669  054A  00D3               	line	77
  4670                           	
  4671                           l1865:	
  4672  054B                     ;LCD.c: 77: LCD_DATO(d);
  4673                           	movf	(LCD_CURSOR@d+1),w
  4674  054B  0853               	movwf	(LCD_DATO@var+1)
  4675  054C  00CB               	movf	(LCD_CURSOR@d),w
  4676  054D  0852               	movwf	(LCD_DATO@var)
  4677  054E  00CA               	fcall	_LCD_DATO
  4678  054F  120A  118A  25D3  120A  118A  	line	78
  4679                           ;LCD.c: 78: }
  4680                           	goto	l223
  4681  0554  2D71               	line	79
  4682                           	
  4683                           l220:	
  4684  0555                     	
  4685                           l1867:	
  4686  0555                     ;LCD.c: 79: else if(a == 2)
  4687                           		movlw	2
  4688  0555  3002               	bcf	status, 5	;RP0=0, select bank0
  4689  0556  1283               	bcf	status, 6	;RP1=0, select bank0
  4690  0557  1303               	xorwf	((LCD_CURSOR@a)),w
  4691  0558  064E               iorwf	((LCD_CURSOR@a+1)),w
  4692  0559  044F               	btfss	status,2
  4693  055A  1D03               	goto	u1501
  4694  055B  2D5D               	goto	u1500
  4695  055C  2D5E               u1501:
  4696  055D                     	goto	l223
  4697  055D  2D71               u1500:
  4698  055E                     	line	81
  4699                           	
  4700                           l1869:	
  4701  055E                     ;LCD.c: 80: {;LCD.c: 81: d = 0xC0 + b - 1;
  4702                           	movf	(LCD_CURSOR@b),w
  4703  055E  0850               	addlw	low(0BFh)
  4704  055F  3EBF               	movwf	(LCD_CURSOR@d)
  4705  0560  00D2               	movf	(LCD_CURSOR@b+1),w
  4706  0561  0851               	skipnc
  4707  0562  1803               	addlw	1
  4708  0563  3E01               	addlw	high(0BFh)
  4709  0564  3E00               	movwf	1+(LCD_CURSOR@d)
  4710  0565  00D3               	line	82
  4711                           	
  4712                           l1871:	
  4713  0566                     ;LCD.c: 82: LCD_DATO(d);
  4714                           	movf	(LCD_CURSOR@d+1),w
  4715  0566  0853               	movwf	(LCD_DATO@var+1)
  4716  0567  00CB               	movf	(LCD_CURSOR@d),w
  4717  0568  0852               	movwf	(LCD_DATO@var)
  4718  0569  00CA               	fcall	_LCD_DATO
  4719  056A  120A  118A  25D3  120A  118A  	goto	l223
  4720  056F  2D71               	line	83
  4721                           	
  4722                           l222:	
  4723  0570                     	goto	l223
  4724  0570  2D71               	line	84
  4725                           	
  4726                           l221:	
  4727  0571                     	
  4728                           l223:	
  4729  0571                     	return
  4730  0571  0008               	opt stack 0
  4731                           GLOBAL	__end_of_LCD_CURSOR
  4732                           	__end_of_LCD_CURSOR:
  4733  0572                     	signat	_LCD_CURSOR,8313
  4734                           	global	_LCD_DATO
  4735                           
  4736 ;; *************** function _LCD_DATO *****************
  4737 ;; Defined at:
  4738 ;;		line 61 in file "LCD.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;  var             2    0[BANK0 ] int 
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;		None
  4743 ;; Return value:  Size  Location     Type
  4744 ;;                  1    wreg      void 
  4745 ;; Registers used:
  4746 ;;		wreg
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4752 ;;      Params:         0       2       0       0       0
  4753 ;;      Locals:         0       0       0       0       0
  4754 ;;      Temps:          0       2       0       0       0
  4755 ;;      Totals:         0       4       0       0       0
  4756 ;;Total ram usage:        4 bytes
  4757 ;; Hardware stack levels used:    1
  4758 ;; Hardware stack levels required when called:    3
  4759 ;; This function calls:
  4760 ;;		Nothing
  4761 ;; This function is called by:
  4762 ;;		_main
  4763 ;;		_LCD_CURSOR
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  4767                           	line	61
  4768                           global __ptext17
  4769                           __ptext17:	;psect for function _LCD_DATO
  4770  05D3                     psect	text17
  4771                           	file	"LCD.c"
  4772                           	line	61
  4773                           	global	__size_of_LCD_DATO
  4774                           	__size_of_LCD_DATO	equ	__end_of_LCD_DATO-_LCD_DATO
  4775  002D                     	
  4776                           _LCD_DATO:	
  4777  05D3                     ;incstack = 0
  4778                           	opt	stack 4
  4779                           ; Regs used in _LCD_DATO: [wreg]
  4780                           	line	62
  4781                           	
  4782                           l1643:	
  4783  05D3                     ;LCD.c: 62: PORTDbits.RD5 = 0;
  4784                           	bcf	status, 5	;RP0=0, select bank0
  4785  05D3  1283               	bcf	status, 6	;RP1=0, select bank0
  4786  05D4  1303               	bcf	(8),5	;volatile
  4787  05D5  1288               	line	63
  4788                           	
  4789                           l1645:	
  4790  05D6                     ;LCD.c: 63: _delay((unsigned long)((5)*(4000000/4000.0)));
  4791                           	opt asmopt_push
  4792                           opt asmopt_off
  4793                           movlw	7
  4794  05D6  3007               	bcf	status, 5	;RP0=0, select bank0
  4795  05D7  1283               	bcf	status, 6	;RP1=0, select bank0
  4796  05D8  1303               movwf	((??_LCD_DATO+0)+0+1),f
  4797  05D9  00CD               	movlw	124
  4798  05DA  307C               movwf	((??_LCD_DATO+0)+0),f
  4799  05DB  00CC               	u1637:
  4800  05DC                     decfsz	((??_LCD_DATO+0)+0),f
  4801  05DC  0BCC               	goto	u1637
  4802  05DD  2DDC               	decfsz	((??_LCD_DATO+0)+0+1),f
  4803  05DE  0BCD               	goto	u1637
  4804  05DF  2DDC               	nop
  4805  05E0  0000               opt asmopt_pop
  4806                           
  4807                           	line	64
  4808                           	
  4809                           l1647:	
  4810  05E1                     ;LCD.c: 64: PORTDbits.RD7 = 1;
  4811                           	bcf	status, 5	;RP0=0, select bank0
  4812  05E1  1283               	bcf	status, 6	;RP1=0, select bank0
  4813  05E2  1303               	bsf	(8),7	;volatile
  4814  05E3  1788               	line	65
  4815                           ;LCD.c: 65: PORTB = var;
  4816                           	movf	(LCD_DATO@var),w
  4817  05E4  084A               	movwf	(6)	;volatile
  4818  05E5  0086               	line	66
  4819                           ;LCD.c: 66: _delay((unsigned long)((5)*(4000000/4000.0)));
  4820                           	opt asmopt_push
  4821                           opt asmopt_off
  4822                           movlw	7
  4823  05E6  3007               	bcf	status, 5	;RP0=0, select bank0
  4824  05E7  1283               	bcf	status, 6	;RP1=0, select bank0
  4825  05E8  1303               movwf	((??_LCD_DATO+0)+0+1),f
  4826  05E9  00CD               	movlw	124
  4827  05EA  307C               movwf	((??_LCD_DATO+0)+0),f
  4828  05EB  00CC               	u1647:
  4829  05EC                     decfsz	((??_LCD_DATO+0)+0),f
  4830  05EC  0BCC               	goto	u1647
  4831  05ED  2DEC               	decfsz	((??_LCD_DATO+0)+0+1),f
  4832  05EE  0BCD               	goto	u1647
  4833  05EF  2DEC               	nop
  4834  05F0  0000               opt asmopt_pop
  4835                           
  4836                           	line	67
  4837                           	
  4838                           l1649:	
  4839  05F1                     ;LCD.c: 67: PORTDbits.RD7 = 0;
  4840                           	bcf	status, 5	;RP0=0, select bank0
  4841  05F1  1283               	bcf	status, 6	;RP1=0, select bank0
  4842  05F2  1303               	bcf	(8),7	;volatile
  4843  05F3  1388               	line	68
  4844                           ;LCD.c: 68: _delay((unsigned long)((5)*(4000000/4000.0)));
  4845                           	opt asmopt_push
  4846                           opt asmopt_off
  4847                           movlw	7
  4848  05F4  3007               	bcf	status, 5	;RP0=0, select bank0
  4849  05F5  1283               	bcf	status, 6	;RP1=0, select bank0
  4850  05F6  1303               movwf	((??_LCD_DATO+0)+0+1),f
  4851  05F7  00CD               	movlw	124
  4852  05F8  307C               movwf	((??_LCD_DATO+0)+0),f
  4853  05F9  00CC               	u1657:
  4854  05FA                     decfsz	((??_LCD_DATO+0)+0),f
  4855  05FA  0BCC               	goto	u1657
  4856  05FB  2DFA               	decfsz	((??_LCD_DATO+0)+0+1),f
  4857  05FC  0BCD               	goto	u1657
  4858  05FD  2DFA               	nop
  4859  05FE  0000               opt asmopt_pop
  4860                           
  4861                           	line	69
  4862                           	
  4863                           l217:	
  4864  05FF                     	return
  4865  05FF  0008               	opt stack 0
  4866                           GLOBAL	__end_of_LCD_DATO
  4867                           	__end_of_LCD_DATO:
  4868  0600                     	signat	_LCD_DATO,4217
  4869                           	global	_isr
  4870                           
  4871 ;; *************** function _isr *****************
  4872 ;; Defined at:
  4873 ;;		line 37 in file "Prin-Raspi.c"
  4874 ;; Parameters:    Size  Location     Type
  4875 ;;		None
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;		None
  4878 ;; Return value:  Size  Location     Type
  4879 ;;                  1    wreg      void 
  4880 ;; Registers used:
  4881 ;;		wreg, status,2, status,0, pclath, cstack
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4887 ;;      Params:         0       0       0       0       0
  4888 ;;      Locals:         0       0       0       0       0
  4889 ;;      Temps:          4       0       0       0       0
  4890 ;;      Totals:         4       0       0       0       0
  4891 ;;Total ram usage:        4 bytes
  4892 ;; Hardware stack levels used:    1
  4893 ;; Hardware stack levels required when called:    2
  4894 ;; This function calls:
  4895 ;;		_spiRead
  4896 ;;		_spiWrite
  4897 ;; This function is called by:
  4898 ;;		Interrupt level 1
  4899 ;; This function uses a non-reentrant model
  4900 ;;
  4901                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  4902                           	file	"Prin-Raspi.c"
  4903                           	line	37
  4904                           global __ptext18
  4905                           __ptext18:	;psect for function _isr
  4906  0337                     psect	text18
  4907                           	file	"Prin-Raspi.c"
  4908                           	line	37
  4909                           	global	__size_of_isr
  4910                           	__size_of_isr	equ	__end_of_isr-_isr
  4911  0084                     	
  4912                           _isr:	
  4913  0337                     ;incstack = 0
  4914                           	opt	stack 1
  4915                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  4916                           psect	intentry,class=CODE,delta=2
  4917                           global __pintentry
  4918                           __pintentry:
  4919  0004                     global interrupt_function
  4920                           interrupt_function:
  4921  0004                     	global saved_w
  4922                           	saved_w	set	btemp+0
  4923  007E                     	movwf	saved_w
  4924  0004  00FE               	swapf	status,w
  4925  0005  0E03               	movwf	(??_isr+2)
  4926  0006  00FA               	movf	pclath,w
  4927  0007  080A               	movwf	(??_isr+3)
  4928  0008  00FB               	ljmp	_isr
  4929  0009  120A  118A  2B37   psect	text18
  4930                           	line	38
  4931                           	
  4932                           i1l1509:	
  4933  0337                     ;Prin-Raspi.c: 38: if(SSPIF == 1){
  4934                           	bcf	status, 5	;RP0=0, select bank0
  4935  0337  1283               	bcf	status, 6	;RP1=0, select bank0
  4936  0338  1303               	btfss	(99/8),(99)&7	;volatile
  4937  0339  1D8C               	goto	u98_21
  4938  033A  2B3C               	goto	u98_20
  4939  033B  2B3D               u98_21:
  4940  033C                     	goto	i1l127
  4941  033C  2BB4               u98_20:
  4942  033D                     	line	39
  4943                           	
  4944                           i1l1511:	
  4945  033D                     ;Prin-Raspi.c: 39: lectura = spiRead();
  4946                           	fcall	_spiRead
  4947  033D  120A  118A  26C6  120A  118A  	movwf	(??_isr+0)+0
  4948  0342  00F8               	clrf	(??_isr+0)+0+1
  4949  0343  01F9               	movf	0+(??_isr+0)+0,w
  4950  0344  0878               	movwf	(_lectura)
  4951  0345  00F0               	movf	1+(??_isr+0)+0,w
  4952  0346  0879               	movwf	(_lectura+1)
  4953  0347  00F1               	line	40
  4954                           	
  4955                           i1l1513:	
  4956  0348                     ;Prin-Raspi.c: 40: if (lectura == 1){
  4957                           		decf	((_lectura)),w
  4958  0348  0370               iorwf	((_lectura+1)),w
  4959  0349  0471               	btfss	status,2
  4960  034A  1D03               	goto	u99_21
  4961  034B  2B4D               	goto	u99_20
  4962  034C  2B4E               u99_21:
  4963  034D                     	goto	i1l1517
  4964  034D  2B58               u99_20:
  4965  034E                     	line	41
  4966                           	
  4967                           i1l1515:	
  4968  034E                     ;Prin-Raspi.c: 41: spiWrite(A1);
  4969                           	movf	(_A1+1),w
  4970  034E  0875               	movwf	(spiWrite@dat+1)
  4971  034F  00F7               	movf	(_A1),w
  4972  0350  0874               	movwf	(spiWrite@dat)
  4973  0351  00F6               	fcall	_spiWrite
  4974  0352  120A  118A  26E1  120A  118A  	line	42
  4975                           ;Prin-Raspi.c: 42: }else if(lectura == 2){
  4976                           	goto	i1l1535
  4977  0357  2BB0               	
  4978                           i1l117:	
  4979  0358                     	
  4980                           i1l1517:	
  4981  0358                     		movlw	2
  4982  0358  3002               	xorwf	((_lectura)),w
  4983  0359  0670               iorwf	((_lectura+1)),w
  4984  035A  0471               	btfss	status,2
  4985  035B  1D03               	goto	u100_21
  4986  035C  2B5E               	goto	u100_20
  4987  035D  2B5F               u100_21:
  4988  035E                     	goto	i1l1521
  4989  035E  2B69               u100_20:
  4990  035F                     	line	43
  4991                           	
  4992                           i1l1519:	
  4993  035F                     ;Prin-Raspi.c: 43: spiWrite(B1);
  4994                           	movf	(_B1+1),w
  4995  035F  0873               	movwf	(spiWrite@dat+1)
  4996  0360  00F7               	movf	(_B1),w
  4997  0361  0872               	movwf	(spiWrite@dat)
  4998  0362  00F6               	fcall	_spiWrite
  4999  0363  120A  118A  26E1  120A  118A  	line	44
  5000                           ;Prin-Raspi.c: 44: }else if(lectura == 3){
  5001                           	goto	i1l1535
  5002  0368  2BB0               	
  5003                           i1l119:	
  5004  0369                     	
  5005                           i1l1521:	
  5006  0369                     		movlw	3
  5007  0369  3003               	xorwf	((_lectura)),w
  5008  036A  0670               iorwf	((_lectura+1)),w
  5009  036B  0471               	btfss	status,2
  5010  036C  1D03               	goto	u101_21
  5011  036D  2B6F               	goto	u101_20
  5012  036E  2B70               u101_21:
  5013  036F                     	goto	i1l1525
  5014  036F  2B7C               u101_20:
  5015  0370                     	line	45
  5016                           	
  5017                           i1l1523:	
  5018  0370                     ;Prin-Raspi.c: 45: spiWrite(C1);
  5019                           	bcf	status, 5	;RP0=0, select bank0
  5020  0370  1283               	bcf	status, 6	;RP1=0, select bank0
  5021  0371  1303               	movf	(_C1+1),w
  5022  0372  0825               	movwf	(spiWrite@dat+1)
  5023  0373  00F7               	movf	(_C1),w
  5024  0374  0824               	movwf	(spiWrite@dat)
  5025  0375  00F6               	fcall	_spiWrite
  5026  0376  120A  118A  26E1  120A  118A  	line	46
  5027                           ;Prin-Raspi.c: 46: }else if(lectura == 4){
  5028                           	goto	i1l1535
  5029  037B  2BB0               	
  5030                           i1l121:	
  5031  037C                     	
  5032                           i1l1525:	
  5033  037C                     		movlw	4
  5034  037C  3004               	xorwf	((_lectura)),w
  5035  037D  0670               iorwf	((_lectura+1)),w
  5036  037E  0471               	btfss	status,2
  5037  037F  1D03               	goto	u102_21
  5038  0380  2B82               	goto	u102_20
  5039  0381  2B83               u102_21:
  5040  0382                     	goto	i1l1529
  5041  0382  2B8F               u102_20:
  5042  0383                     	line	47
  5043                           	
  5044                           i1l1527:	
  5045  0383                     ;Prin-Raspi.c: 47: spiWrite(D1);
  5046                           	bcf	status, 5	;RP0=0, select bank0
  5047  0383  1283               	bcf	status, 6	;RP1=0, select bank0
  5048  0384  1303               	movf	(_D1+1),w
  5049  0385  0823               	movwf	(spiWrite@dat+1)
  5050  0386  00F7               	movf	(_D1),w
  5051  0387  0822               	movwf	(spiWrite@dat)
  5052  0388  00F6               	fcall	_spiWrite
  5053  0389  120A  118A  26E1  120A  118A  	line	48
  5054                           ;Prin-Raspi.c: 48: }else if (lectura== 5){
  5055                           	goto	i1l1535
  5056  038E  2BB0               	
  5057                           i1l123:	
  5058  038F                     	
  5059                           i1l1529:	
  5060  038F                     		movlw	5
  5061  038F  3005               	xorwf	((_lectura)),w
  5062  0390  0670               iorwf	((_lectura+1)),w
  5063  0391  0471               	btfss	status,2
  5064  0392  1D03               	goto	u103_21
  5065  0393  2B95               	goto	u103_20
  5066  0394  2B96               u103_21:
  5067  0395                     	goto	i1l1533
  5068  0395  2BA2               u103_20:
  5069  0396                     	line	49
  5070                           	
  5071                           i1l1531:	
  5072  0396                     ;Prin-Raspi.c: 49: spiWrite(E1);
  5073                           	bcf	status, 5	;RP0=0, select bank0
  5074  0396  1283               	bcf	status, 6	;RP1=0, select bank0
  5075  0397  1303               	movf	(_E1+1),w
  5076  0398  0821               	movwf	(spiWrite@dat+1)
  5077  0399  00F7               	movf	(_E1),w
  5078  039A  0820               	movwf	(spiWrite@dat)
  5079  039B  00F6               	fcall	_spiWrite
  5080  039C  120A  118A  26E1  120A  118A  	line	60
  5081                           ;Prin-Raspi.c: 60: }else{
  5082                           	goto	i1l1535
  5083  03A1  2BB0               	
  5084                           i1l125:	
  5085  03A2                     	line	61
  5086                           	
  5087                           i1l1533:	
  5088  03A2                     ;Prin-Raspi.c: 61: spiWrite(255);
  5089                           	movlw	0FFh
  5090  03A2  30FF               	movwf	(spiWrite@dat)
  5091  03A3  00F6               	movlw	0
  5092  03A4  3000               	movwf	((spiWrite@dat))+1
  5093  03A5  00F7               	fcall	_spiWrite
  5094  03A6  120A  118A  26E1  120A  118A  	goto	i1l1535
  5095  03AB  2BB0               	line	62
  5096                           	
  5097                           i1l126:	
  5098  03AC                     	goto	i1l1535
  5099  03AC  2BB0               	
  5100                           i1l124:	
  5101  03AD                     	goto	i1l1535
  5102  03AD  2BB0               	
  5103                           i1l122:	
  5104  03AE                     	goto	i1l1535
  5105  03AE  2BB0               	
  5106                           i1l120:	
  5107  03AF                     	goto	i1l1535
  5108  03AF  2BB0               	
  5109                           i1l118:	
  5110  03B0                     	line	63
  5111                           	
  5112                           i1l1535:	
  5113  03B0                     ;Prin-Raspi.c: 62: };Prin-Raspi.c: 63: SSPIF = 0;
  5114                           	bcf	status, 5	;RP0=0, select bank0
  5115  03B0  1283               	bcf	status, 6	;RP1=0, select bank0
  5116  03B1  1303               	bcf	(99/8),(99)&7	;volatile
  5117  03B2  118C               	goto	i1l127
  5118  03B3  2BB4               	line	64
  5119                           	
  5120                           i1l116:	
  5121  03B4                     	line	65
  5122                           	
  5123                           i1l127:	
  5124  03B4                     	movf	(??_isr+3),w
  5125  03B4  087B               	movwf	pclath
  5126  03B5  008A               	swapf	(??_isr+2)^0FFFFFF80h,w
  5127  03B6  0E7A               	movwf	status
  5128  03B7  0083               	swapf	saved_w,f
  5129  03B8  0EFE               	swapf	saved_w,w
  5130  03B9  0E7E               	retfie
  5131  03BA  0009               	opt stack 0
  5132                           GLOBAL	__end_of_isr
  5133                           	__end_of_isr:
  5134  03BB                     	signat	_isr,89
  5135                           	global	_spiWrite
  5136                           
  5137 ;; *************** function _spiWrite *****************
  5138 ;; Defined at:
  5139 ;;		line 34 in file "SPI.c"
  5140 ;; Parameters:    Size  Location     Type
  5141 ;;  dat             2    0[COMMON] int 
  5142 ;; Auto vars:     Size  Location     Type
  5143 ;;		None
  5144 ;; Return value:  Size  Location     Type
  5145 ;;                  1    wreg      void 
  5146 ;; Registers used:
  5147 ;;		wreg
  5148 ;; Tracked objects:
  5149 ;;		On entry : 0/0
  5150 ;;		On exit  : 0/0
  5151 ;;		Unchanged: 0/0
  5152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5153 ;;      Params:         2       0       0       0       0
  5154 ;;      Locals:         0       0       0       0       0
  5155 ;;      Temps:          0       0       0       0       0
  5156 ;;      Totals:         2       0       0       0       0
  5157 ;;Total ram usage:        2 bytes
  5158 ;; Hardware stack levels used:    1
  5159 ;; This function calls:
  5160 ;;		Nothing
  5161 ;; This function is called by:
  5162 ;;		_isr
  5163 ;; This function uses a non-reentrant model
  5164 ;;
  5165                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  5166                           	file	"SPI.c"
  5167                           	line	34
  5168                           global __ptext19
  5169                           __ptext19:	;psect for function _spiWrite
  5170  06E1                     psect	text19
  5171                           	file	"SPI.c"
  5172                           	line	34
  5173                           	global	__size_of_spiWrite
  5174                           	__size_of_spiWrite	equ	__end_of_spiWrite-_spiWrite
  5175  0005                     	
  5176                           _spiWrite:	
  5177  06E1                     ;incstack = 0
  5178                           	opt	stack 2
  5179                           ; Regs used in _spiWrite: [wreg]
  5180                           	line	36
  5181                           	
  5182                           i1l1393:	
  5183  06E1                     ;SPI.c: 36: SSPBUF = dat;
  5184                           	movf	(spiWrite@dat),w
  5185  06E1  0876               	bcf	status, 5	;RP0=0, select bank0
  5186  06E2  1283               	bcf	status, 6	;RP1=0, select bank0
  5187  06E3  1303               	movwf	(19)	;volatile
  5188  06E4  0093               	line	37
  5189                           	
  5190                           i1l176:	
  5191  06E5                     	return
  5192  06E5  0008               	opt stack 0
  5193                           GLOBAL	__end_of_spiWrite
  5194                           	__end_of_spiWrite:
  5195  06E6                     	signat	_spiWrite,4217
  5196                           	global	_spiRead
  5197                           
  5198 ;; *************** function _spiRead *****************
  5199 ;; Defined at:
  5200 ;;		line 47 in file "SPI.c"
  5201 ;; Parameters:    Size  Location     Type
  5202 ;;		None
  5203 ;; Auto vars:     Size  Location     Type
  5204 ;;		None
  5205 ;; Return value:  Size  Location     Type
  5206 ;;                  1    wreg      unsigned char 
  5207 ;; Registers used:
  5208 ;;		wreg, status,2, status,0, pclath, cstack
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/0
  5211 ;;		On exit  : 0/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5214 ;;      Params:         0       0       0       0       0
  5215 ;;      Locals:         0       0       0       0       0
  5216 ;;      Temps:          0       0       0       0       0
  5217 ;;      Totals:         0       0       0       0       0
  5218 ;;Total ram usage:        0 bytes
  5219 ;; Hardware stack levels used:    1
  5220 ;; Hardware stack levels required when called:    1
  5221 ;; This function calls:
  5222 ;;		_spiReceiveWait
  5223 ;; This function is called by:
  5224 ;;		_isr
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  5228                           	line	47
  5229                           global __ptext20
  5230                           __ptext20:	;psect for function _spiRead
  5231  06C6                     psect	text20
  5232                           	file	"SPI.c"
  5233                           	line	47
  5234                           	global	__size_of_spiRead
  5235                           	__size_of_spiRead	equ	__end_of_spiRead-_spiRead
  5236  000A                     	
  5237                           _spiRead:	
  5238  06C6                     ;incstack = 0
  5239                           	opt	stack 1
  5240                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  5241                           	line	49
  5242                           	
  5243                           i1l1387:	
  5244  06C6                     ;SPI.c: 49: spiReceiveWait();
  5245                           	fcall	_spiReceiveWait
  5246  06C6  120A  118A  26D0  120A  118A  	line	50
  5247                           	
  5248                           i1l1389:	
  5249  06CB                     ;SPI.c: 50: return(SSPBUF);
  5250                           	bcf	status, 5	;RP0=0, select bank0
  5251  06CB  1283               	bcf	status, 6	;RP1=0, select bank0
  5252  06CC  1303               	movf	(19),w	;volatile
  5253  06CD  0813               	goto	i1l184
  5254  06CE  2ECF               	
  5255                           i1l1391:	
  5256  06CF                     	line	51
  5257                           	
  5258                           i1l184:	
  5259  06CF                     	return
  5260  06CF  0008               	opt stack 0
  5261                           GLOBAL	__end_of_spiRead
  5262                           	__end_of_spiRead:
  5263  06D0                     	signat	_spiRead,89
  5264                           	global	_spiReceiveWait
  5265                           
  5266 ;; *************** function _spiReceiveWait *****************
  5267 ;; Defined at:
  5268 ;;		line 29 in file "SPI.c"
  5269 ;; Parameters:    Size  Location     Type
  5270 ;;		None
  5271 ;; Auto vars:     Size  Location     Type
  5272 ;;		None
  5273 ;; Return value:  Size  Location     Type
  5274 ;;                  1    wreg      void 
  5275 ;; Registers used:
  5276 ;;		None
  5277 ;; Tracked objects:
  5278 ;;		On entry : 0/0
  5279 ;;		On exit  : 0/0
  5280 ;;		Unchanged: 0/0
  5281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5282 ;;      Params:         0       0       0       0       0
  5283 ;;      Locals:         0       0       0       0       0
  5284 ;;      Temps:          0       0       0       0       0
  5285 ;;      Totals:         0       0       0       0       0
  5286 ;;Total ram usage:        0 bytes
  5287 ;; Hardware stack levels used:    1
  5288 ;; This function calls:
  5289 ;;		Nothing
  5290 ;; This function is called by:
  5291 ;;		_spiRead
  5292 ;; This function uses a non-reentrant model
  5293 ;;
  5294                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  5295                           	line	29
  5296                           global __ptext21
  5297                           __ptext21:	;psect for function _spiReceiveWait
  5298  06D0                     psect	text21
  5299                           	file	"SPI.c"
  5300                           	line	29
  5301                           	global	__size_of_spiReceiveWait
  5302                           	__size_of_spiReceiveWait	equ	__end_of_spiReceiveWait-_spiReceiveWait
  5303  0009                     	
  5304                           _spiReceiveWait:	
  5305  06D0                     ;incstack = 0
  5306                           	opt	stack 1
  5307                           ; Regs used in _spiReceiveWait: []
  5308                           	line	31
  5309                           	
  5310                           i1l1277:	
  5311  06D0                     ;SPI.c: 31: while ( !SSPSTATbits.BF );
  5312                           	goto	i1l170
  5313  06D0  2ED1               	
  5314                           i1l171:	
  5315  06D1                     	
  5316                           i1l170:	
  5317  06D1                     	bsf	status, 5	;RP0=1, select bank1
  5318  06D1  1683               	bcf	status, 6	;RP1=0, select bank1
  5319  06D2  1303               	btfss	(148)^080h,0	;volatile
  5320  06D3  1C14               	goto	u59_21
  5321  06D4  2ED6               	goto	u59_20
  5322  06D5  2ED7               u59_21:
  5323  06D6                     	goto	i1l170
  5324  06D6  2ED1               u59_20:
  5325  06D7                     	goto	i1l173
  5326  06D7  2ED8               	
  5327                           i1l172:	
  5328  06D8                     	line	32
  5329                           	
  5330                           i1l173:	
  5331  06D8                     	return
  5332  06D8  0008               	opt stack 0
  5333                           GLOBAL	__end_of_spiReceiveWait
  5334                           	__end_of_spiReceiveWait:
  5335  06D9                     	signat	_spiReceiveWait,89
  5336                           global	___latbits
  5337                           ___latbits	equ	2
  5338  0002                     	global	btemp
  5339                           	btemp set 07Eh
  5340  007E                     
  5341                           	DABS	1,126,2	;btemp
  5342                           	global	wtemp0
  5343                           	wtemp0 set btemp+0
  5344  007E                     	end


Data Sizes:
    Strings     73
    Constant    10
    Data        0
    BSS         64
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     38      80
    BANK1            80      0      16
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 28
		 -> STR_4(CODE[28]), STR_3(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> valor(BANK0[16]), valor1(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_STRING@a	PTR unsigned char  size(2) Largest target is 16
		 -> valor(BANK0[16]), valor1(BANK1[16]), STR_2(CODE[16]), STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_ready
    _lcd_ready->_delay
    _lcd_lat->_delay
    _LCD_STRING->_LCD_CHAR
    _LCD_CURSOR->_LCD_DATO

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6103
                                             35 BANK0      3     3      0
                         _LCD_CURSOR
                           _LCD_DATO
                         _LCD_STRING
                             _config
                           _lcd_init
                             _mandar
                            _spiInit
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             29    18     11    2468
                                             14 BANK0     21    10     11
                             ___bmul
                            ___lwdiv
                            ___lwmod
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     226
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _mandar                                               2     0      2     481
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     843
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0     843
                                              7 BANK0      1     1      0
                            _lcd_lat
                          _lcd_ready
 ---------------------------------------------------------------------------------
 (3) _lcd_ready                                            1     1      0     406
                                              6 BANK0      1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _lcd_lat                                              0     0      0     406
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                6     4      2     406
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_STRING                                           7     5      2     521
                                              2 BANK0      7     5      2
                           _LCD_CHAR
 ---------------------------------------------------------------------------------
 (2) _LCD_CHAR                                             2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_CURSOR                                           6     2      4     943
                                              4 BANK0      6     2      4
                           _LCD_DATO
 ---------------------------------------------------------------------------------
 (1) _LCD_DATO                                             4     2      2     391
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  4     4      0     478
                                              2 COMMON     4     4      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (6) _spiWrite                                             2     0      2     478
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (7) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_CURSOR
     _LCD_DATO
   _LCD_DATO
   _LCD_STRING
     _LCD_CHAR
   _config
   _lcd_init
     _lcd_cmd
       _lcd_lat
         _delay
       _lcd_ready
         _delay
   _mandar
   _spiInit
   _sprintf
     ___bmul
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _isdigit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      6C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     26      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      10       7       20.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      6C      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun May 10 17:03:26 2020

             LCD_CURSOR@a 004E               LCD_CURSOR@b 0050               LCD_CURSOR@d 0052  
                       _A 002E                         _B 002C                         _C 002A  
                       _D 0028                         _E 0026                         _a 0038  
                       _b 0036                         _c 0034                         _d 0032  
                       _e 0030                         pc 0002            ___bmul@product 004C  
             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        _A1 0074  
                      _B1 0072                        _C1 0024                        _D1 0022  
                      _E1 0020                        l20 06C1                        l21 06C5  
                      l15 0696                        l18 06BA                        l19 06BA  
                      fsr 0004                       l200 05D2                       l210 05A5  
                     l211 058A                       l203 0682                       l220 0555  
                     l212 0584                       l140 014D                       l132 0099  
                     l221 0571                       l213 0595                       l141 0154  
                     l133 0105                       l222 0570                       l230 04B5  
                     l214 05A5                       l206 063D                       l150 01AF  
                     l142 0171                       l134 0105                       l223 0571  
                     l231 04F7                       l143 0171                       l135 010C  
                     l232 04F7                       l144 0178                       l136 0129  
                     l217 05FF                       l209 0581                       l145 0195  
                     l137 0129                       l226 06A8                       l330 01DF  
                     l146 0195                       l138 0130                       l331 0210  
                     l147 019C                       l139 014D                       l340 024C  
                     l332 0215                       l148 01AE                       l229 04DA  
                     l165 0612                       l325 031D                       l341 025C  
                     l333 021B                       l149 01AF                       l166 0619  
                     l350 02D6                       l342 0266                       l334 0216  
                     l326 01BA                       l167 061E                       l335 0331  
                     l351 031C                       l343 028E                       l327 01CC  
                     l352 0330                       l344 0283                       l336 0217  
                     l328 0211                       l353 0336                       l345 02A5  
                     l337 0218                       l329 01FF                       l346 02C1  
                     l338 0232                       l195 06B8                       l347 02C0  
                     l339 0219                       l380 0643                       l348 02D5  
                     l381 064C                       l349 0312                       l198 05D1  
                     l382 0656                       l622 04AA                       l199 05D2  
                     l383 0658                       l623 047C                       l624 0470  
                     l632 0535                       l625 0481                       l633 050F  
                     l626 0482                       l634 0503                       l627 049B  
                     l635 0514                       l628 04A9                       l636 0515  
                     l629 04AF                       l637 0526                       l638 0534  
                     l639 053A                       l784 066C                       l785 066E  
            __CFG_CPD$OFF 0000                       _isr 0337                       fsr0 0004  
                     indf 0000               LCD_STRING@a 004C               LCD_STRING@n 0051  
            __CFG_LVP$OFF 0000                      l1611 0584                      l1603 0572  
                    l1613 0595                      l1605 0576                      l1621 05A6  
                    l1701 0470                      l1607 0580                      l1615 06A9  
                    l1631 05B1                      l1623 05AA                      l1711 0499  
                    l1703 0477                      l1609 0581                      l1617 06AC  
                    l1641 05CD                      l1633 05BA                      l1625 05AE  
                    l1713 049B                      l1705 047C                      l1721 04F8  
                    l1801 0211                      l1643 05D3                      l1619 06B5  
                    l1635 05BD                      l1627 05AF                      l1651 0672  
                    l1715 04A2                      l1707 0482                      l1731 0515  
                    l1723 0500                      l1811 023E                      l1803 021A  
                    l1645 05D6                      l1661 069A                      l1637 05C3  
                    l1629 05B0                      l1653 0677                      l1709 0493  
                    l1717 04AA                      l1741 053A                      l1733 051F  
                    l1725 0503                      l1821 0257                      l1813 0242  
                    l1805 021B                      l1901 0074                      l1647 05E1  
                    l1663 069B                      l1751 0692                      l1743 0683  
                    l1639 05C4                      l1655 067B                      l1719 04AF  
                    l1735 0526                      l1727 050A                      l1671 065D  
                    l1831 0283                      l1823 025C                      l1815 0246  
                    l1807 0232                      l1911 00B4                      l1903 007F  
                    l1649 05F1                      l1665 069D                      l1753 0693  
                    l1745 068A                      l1657 067C                      l1761 060C  
                    l1681 0641                      l1737 052D                      l1729 050F  
                    l1673 0663                      l1841 02C1                      l1825 0265  
                    l1833 028E                      l1817 024C                      l1809 023A  
                    l1921 010C                      l1913 00BF                      l1905 008D  
                    l1667 06A5                      l1771 04B0                      l1747 068E  
                    l1659 067D                      l1755 06B9                      l1763 0610  
                    l1691 0656                      l1683 0643                      l1739 0535  
                    l1675 0669                      l1851 030D                      l1843 02C9  
                    l1835 029E                      l1827 0266                      l1819 0251  
                    l1931 0165                      l1923 011D                      l1915 00DF  
                    l1907 0099                      l1861 053B                      l1773 04B5  
                    l1749 068F                      l1757 06C1                      l1765 0612  
                    l1693 0658                      l1685 0647                      l1677 066C  
                    l1669 065C                      l1845 02D0                      l1853 0312  
                    l1837 02A5                      l1829 0282                      l1781 01BA  
                    l1933 0178                      l1925 0130                      l1917 00EE  
                    l1909 00A5                      l1871 0566                      l1863 0543  
                    l1775 04D1                      l1767 0618                      l1759 0603  
                    l1687 064C                      l1695 0463                      l1679 066E  
                    l1847 02D6                      l1839 02B9                      l1791 01D9  
                    l1783 01C0                      l1855 031D                      l1935 0189  
                    l1927 0141                      l1919 00F9                      l1865 054B  
                    l1777 04DA                      l1769 061F                      l1689 064E  
                    l1697 0467                      l1849 0306                      l1857 0331  
                    l1793 01DD                      l1785 01C7                      l1937 019C  
                    l1929 0154                      l1881 0040                      l1873 002A  
                    l1867 0555                      l1699 046D                      l1859 0336  
                    l1795 01DF                      l1787 01CC                      l1779 01B5  
                    l1891 0049                      l1883 0041                      l1875 002E  
                    l1869 055E                      l1797 01FA                      l1789 01CD  
                    l1893 0054                      l1885 0042                      l1877 0038  
                    l1799 01FF                      l1895 0059                      l1887 0045  
                    l1879 003C                      l1897 005E                      l1889 0048  
                    l1899 0069                      ?_isr 0076                      STR_1 0457  
                    STR_2 0447                      STR_3 0436                      STR_4 041A  
                    u1100 0594                      u1101 0593                      u1110 05A4  
                    u1111 05A3                      u1120 05C3                      u1105 0590  
                    u1121 05C2                      u1210 0493                      u1130 0663  
                    u1211 0492                      u1131 0662                      u1300 06C0  
                    u1140 0669                      u1301 06BF                      u1205 0483  
                    u1141 0668                      u1310 060C                      u1150 0647  
                    u1230 04A8                      u1311 060B                      u1151 0646  
                    u1231 04A7                      u1215 048F                      u1320 04BF  
                    u1160 0655                      u1240 0500                      u1400 0257  
                    u1161 0654                      u1225 049C                      u1241 04FF  
                    u1401 0256                      u1330 04E4                      u1090 057F  
                    u1170 046D                      u1410 0264                      u1091 057E  
                    u1171 046C                      u1411 0263                      u1500 055E  
                    u1340 04F6                      u1260 0513                      u1420 0281  
                    u1501 055D                      u1341 04F5                      u1261 0512  
                    u1421 0280                      u1190 0480                      u1270 051F  
                    u1430 028D                      u1350 01C0                      u1510 010B  
                    u1191 047F                      u1271 051E                      u1255 0504  
                    u1431 028C                      u1351 01BF                      u1511 010A  
                    u1440 029E                      u1360 01D9                      u1520 012F  
                    u1185 0471                      u1441 029D                      u1425 027D  
                    u1361 01D8                      u1521 012E                      u1290 0533  
                    u1450 02B9                      u1370 020F                      u1530 0153  
                    u1291 0532                      u1275 051B                      u1451 02B8  
                    u1371 020E                      u1531 0152                      u1460 02C9  
                    u1380 0242                      u1540 0177                      u1285 0527  
                    u1461 02C8                      u1445 029A                      u1381 0241  
                    u1541 0176                      u1470 031B                      u1390 0251  
                    u1550 019B                      u1471 031A                      u1455 02B5  
                    u1391 0250                      u1551 019A                      u1607 0185  
                    u1480 032F                      u1481 032E                      u1617 01A9  
                    u1490 0543                      u1491 0542                      u1627 06A2  
                    u1637 05DC                      u1647 05EC                      u1567 0087  
                    u1657 05FA                      u1577 0119                      u1587 013D  
                    u1597 0161                      _RCIF 0065              __CFG_WRT$OFF 0000  
                    _main 002A                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000         ___bmul@multiplier 004D          __end_of_LCD_CHAR 06A9  
        __end_of_LCD_DATO 0600                     ??_isr 0078                     ?_main 0076  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188           __end_of___lwdiv 04B0  
                   i1l120 03AF                     i1l121 037C                     i1l122 03AE  
                   i1l123 038F                     i1l116 03B4                     i1l124 03AD  
                   i1l125 03A2                     i1l117 0358                     i1l118 03B0  
                   i1l126 03AC                     i1l119 0369                     i1l127 03B4  
                   i1l170 06D1                     i1l171 06D1                     i1l172 06D8  
                   i1l173 06D8                     i1l184 06CF                     i1l176 06E5  
         __end_of___lwmod 053B                     _RCREG 001A                     _SPBRG 0099  
                   _PORTA 0005                     _PORTB 0006                     _PORTD 0008  
                   _TRISA 0085                     _TRISB 0086                     _TRISD 0088  
                   _SSPIF 0063                     u59_20 06D7                     u59_21 06D6  
                   _TXREG 0019                     u98_20 033D                     u98_21 033C  
                   u99_20 034E                     u99_21 034D       __size_of_LCD_CURSOR 0037  
          __CFG_FCMEN$OFF 0000           __end_of_lcd_cmd 0683           __end_of_lcd_lat 06B9  
                   _delay 0572       __size_of_LCD_STRING 0048           __end_of_dpowers 041A  
         __end_of_isdigit 066F                     _valor 003A            __CFG_BOREN$OFF 0000  
                   pclath 000A           __end_of_spiInit 061F           __end_of_spiRead 06D0  
                   status 0003                     wtemp0 007E           __end_of_sprintf 0337  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 01B2  
                  ??_main 006D                    ?_delay 004A                    _ANSELH 0189  
                  u100_20 035F                    u100_21 035E                    u101_20 0370  
                  u101_21 036F                    u102_20 0383                    u102_21 0382  
                  u103_20 0396                    u103_21 0395                    i1l1511 033D  
                  i1l1521 0369                    i1l1513 0348                    i1l1531 0396  
                  i1l1523 0370                    i1l1515 034E                    i1l1277 06D0  
                  i1l1533 03A2                    i1l1525 037C                    i1l1517 0358  
                  i1l1509 0337                    i1l1391 06CF                    i1l1527 0383  
                  i1l1519 035F                    i1l1535 03B0                    i1l1393 06E1  
                  i1l1529 038F                    i1l1387 06C6                    i1l1389 06CB  
                  _SPBRGH 009A                    _TRISC3 043B                    _TRISC5 043D  
                  _SSPCON 0014                    _SSPBUF 0013            __CFG_PWRTE$OFF 0000  
        __end_of_lcd_init 063E                    ___bmul 063E                 ??___lwdiv 004E  
               ??___lwmod 0056                    _config 0683                    _mandar 06B9  
                  delay@i 004E                    delay@j 004C                    _valor1 00A0  
               ??_lcd_cmd 0051                 ??_lcd_lat 0050                 ??_isdigit 004A  
                  saved_w 007E          __end_of_spiWrite 06E6                 ??_spiInit 004D  
               ??_spiRead 0076                 ??_sprintf 0063                 LCD_CHAR@a 004B  
               ?_LCD_CHAR 0076                 ?_LCD_DATO 004A   __end_of__initialization 0026  
            ??_LCD_CURSOR 0052       ___bmul@multiplicand 004A              ??_LCD_STRING 004E  
          __pcstackCOMMON 0076             __end_of_delay 05A6        __end_of_LCD_CURSOR 0572  
      __size_of_lcd_ready 002D                   ??_delay 004C        __end_of_LCD_STRING 04F8  
              __pbssBANK0 0020                __pbssBANK1 00A0                ??_LCD_CHAR 004A  
              ??_LCD_DATO 004C                __pmaintext 002A                   ?___bmul 004A  
              __pintentry 0004                   ?_config 0076   __size_of_spiReceiveWait 0009  
                 ?_mandar 004A                 ?_lcd_init 0076                   _SSPSTAT 0094  
              __stringtab 0400         __end_of_lcd_ready 05D3                 ?_spiWrite 0076  
         __size_of___bmul 001B                   ___lwdiv 0463                   ___lwmod 04F8  
         __size_of_config 0014           __size_of_mandar 000D                   __ptext1 01B2  
                 __ptext2 0659                   __ptext3 04F8                   __ptext4 0463  
                 __ptext5 063E                   __ptext6 0600                   __ptext7 06B9  
                 __ptext8 061F                   __ptext9 066F                   _lcd_cmd 066F  
                 _lcd_lat 06A9                   _lectura 0070                   _dpowers 0410  
                 _isdigit 0659              __size_of_isr 0084                   delay@ms 004A  
                 _spiInit 0600                   _spiRead 06C6                   _sprintf 01B2  
                 clrloop0 06DA                ??_lcd_init 0052      end_of_initialization 0026  
               _RCSTAbits 0018                ??_spiWrite 0078                 _PORTDbits 0008  
               _TRISAbits 0085                 _TRISCbits 0087               spiWrite@dat 0076  
               _TXSTAbits 0098         __size_of_LCD_CHAR 0012         __size_of_LCD_DATO 002D  
          _spiReceiveWait 06D0            __end_of___bmul 0659               _BAUDCTLbits 0187  
              mandar@dato 004A            __end_of_config 0697            __end_of_mandar 06C6  
     start_initialization 000F               __end_of_isr 03BB  __CFG_FOSC$INTRC_NOCLKOUT 0000  
  __end_of_spiReceiveWait 06D9                  ??___bmul 004B                  ??_config 004A  
                ??_mandar 004C               __pbssCOMMON 0070                 ___latbits 0002  
           __pcstackBANK0 004A              _isdigit$1048 004A         __size_of_lcd_init 001F  
             sprintf@flag 0067               sprintf@prec 006B          ___lwdiv@dividend 004C  
         ?_spiReceiveWait 0076                  ?___lwdiv 004A                  ?___lwmod 0052  
       __size_of_spiWrite 0005                 _lcd_ready 05A6                 __pstrings 0400  
                ?_lcd_cmd 0076                  ?_lcd_lat 0076                  ?_isdigit 0076  
                ?_spiInit 004A                  ?_spiRead 0076          ___lwdiv@quotient 0050  
          __size_of_delay 0034                  ?_sprintf 0058                  _LCD_CHAR 0697  
                _LCD_DATO 05D3      spiInit@sTransmitEdge 004C         interrupt_function 0004  
               clear_ram0 06D9                  _PIE1bits 008C        spiInit@sDataSample 004A  
                _PIR1bits 000C                ?_lcd_ready 0076               __stringbase 040F  
        __size_of___lwdiv 004D          __size_of___lwmod 0043        __end_of__stringtab 0410  
        __size_of_lcd_cmd 0014          __size_of_lcd_lat 0010                sprintf@val 0068  
        __size_of_isdigit 0016           ___lwdiv@divisor 004A           ___lwdiv@counter 004F  
                __ptext10 05A6                  __ptext11 06A9                  __ptext20 06C6  
                __ptext12 0572                  __ptext21 06D0                  __ptext13 0683  
                __ptext14 04B0                  __ptext15 0697                  __ptext16 053B  
                __ptext17 05D3                  __ptext18 0337                  __ptext19 06E1  
        __size_of_spiInit 001F          __size_of_spiRead 000A         __CFG_BOR4V$BOR40V 0000  
                _lcd_init 061F          __size_of_sprintf 0185             __size_of_main 0188  
              _LCD_CURSOR 053B                _LCD_STRING 04B0                  _spiWrite 06E1  
            spiInit@sType 004D                  lcd_cmd@x 0051         spiInit@sClockIdle 004B  
             ??_lcd_ready 0050                _INTCONbits 000B                  isdigit@c 004B  
                intlevel1 0000                 sprintf@ap 0066                 sprintf@sp 006A  
        ___lwmod@dividend 0054          ??_spiReceiveWait 0076                 stringcode 040A  
                sprintf@c 006C                  sprintf@f 0058           ___lwmod@divisor 0052  
         ___lwmod@counter 0057                  stringdir 040A                  stringtab 0400  
             LCD_DATO@var 004A               ?_LCD_CURSOR 004E               ?_LCD_STRING 004C  
