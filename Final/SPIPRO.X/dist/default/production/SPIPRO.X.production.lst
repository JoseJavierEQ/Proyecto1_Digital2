

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun May 10 17:07:09 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     	FNCALL	_main,_LCD_CURSOR
   712                           	FNCALL	_main,_LCD_DATO
   713                           	FNCALL	_main,_LCD_STRING
   714                           	FNCALL	_main,_lcd_init
   715                           	FNCALL	_main,_setup
   716                           	FNCALL	_main,_spiRead
   717                           	FNCALL	_main,_spiWrite
   718                           	FNCALL	_main,_sprintf
   719                           	FNCALL	_sprintf,___bmul
   720                           	FNCALL	_sprintf,___lwdiv
   721                           	FNCALL	_sprintf,___lwmod
   722                           	FNCALL	_sprintf,_isdigit
   723                           	FNCALL	_spiRead,_spiReceiveWait
   724                           	FNCALL	_setup,_spiInit
   725                           	FNCALL	_lcd_init,_lcd_cmd
   726                           	FNCALL	_lcd_cmd,_lcd_lat
   727                           	FNCALL	_lcd_cmd,_lcd_ready
   728                           	FNCALL	_lcd_ready,_delay
   729                           	FNCALL	_lcd_lat,_delay
   730                           	FNCALL	_LCD_STRING,_LCD_CHAR
   731                           	FNCALL	_LCD_CURSOR,_LCD_DATO
   732                           	FNROOT	_main
   733                           	global	_dpowers
   734                           psect	strings,class=STRING,delta=2,noexec
   735                           global __pstrings
   736                           __pstrings:
   737  0003                     stringtab:
   738  0003                     	global    __stringtab
   739                           __stringtab:
   740  0003                     ;	String table - string pointers are 1 byte each
   741                           	btfsc	(btemp+1),7
   742  0003  1BFF               	ljmp	stringcode
   743  0004  280D               	bcf	status,7
   744  0005  1383               	btfsc	(btemp+1),0
   745  0006  187F               	bsf	status,7
   746  0007  1783               	movf	indf,w
   747  0008  0800               	incf fsr
   748  0009  0A84               skipnz
   749  000A  1903               incf btemp+1
   750  000B  0AFF               	return
   751  000C  0008               stringcode:stringdir:
   752  000D                     movlw high(stringdir)
      + 000D                     stringdir:	
   753  000D  3000               movwf pclath
   754  000E  008A               movf fsr,w
   755  000F  0804               incf fsr
   756  0010  0A84               	addwf pc
   757  0011  0782               	global __stringbase
   758                           __stringbase:
   759  0012                     	retlw	0
   760  0012  3400               psect	strings
   761                           	global    __end_of__stringtab
   762                           __end_of__stringtab:
   763  0013                     	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
   764                           	line	358
   765                           _dpowers:
   766  0013                     	retlw	01h
   767  0013  3401               	retlw	0
   768  0014  3400               
   769                           	retlw	0Ah
   770  0015  340A               	retlw	0
   771  0016  3400               
   772                           	retlw	064h
   773  0017  3464               	retlw	0
   774  0018  3400               
   775                           	retlw	0E8h
   776  0019  34E8               	retlw	03h
   777  001A  3403               
   778                           	retlw	010h
   779  001B  3410               	retlw	027h
   780  001C  3427               
   781                           	global __end_of_dpowers
   782                           __end_of_dpowers:
   783  001D                     	global	_dpowers
   784                           	global	_E1
   785                           	global	_D1
   786                           	global	_C1
   787                           	global	_B1
   788                           	global	_A1
   789                           	global	_valor
   790                           	global	_valor1
   791                           	global	_PORTDbits
   792                           _PORTDbits	set	0x8
   793  0008                     	global	_PORTCbits
   794                           _PORTCbits	set	0x7
   795  0007                     	global	_PORTD
   796                           _PORTD	set	0x8
   797  0008                     	global	_PORTA
   798                           _PORTA	set	0x5
   799  0005                     	global	_PORTB
   800                           _PORTB	set	0x6
   801  0006                     	global	_SSPBUF
   802                           _SSPBUF	set	0x13
   803  0013                     	global	_SSPCON
   804                           _SSPCON	set	0x14
   805  0014                     	global	_TRISA
   806                           _TRISA	set	0x85
   807  0085                     	global	_TRISCbits
   808                           _TRISCbits	set	0x87
   809  0087                     	global	_TRISB
   810                           _TRISB	set	0x86
   811  0086                     	global	_TRISD
   812                           _TRISD	set	0x88
   813  0088                     	global	_SSPSTATbits
   814                           _SSPSTATbits	set	0x94
   815  0094                     	global	_SSPSTAT
   816                           _SSPSTAT	set	0x94
   817  0094                     	global	_TRISC2
   818                           _TRISC2	set	0x43A
   819  043A                     	global	_TRISC3
   820                           _TRISC3	set	0x43B
   821  043B                     	global	_TRISC5
   822                           _TRISC5	set	0x43D
   823  043D                     	global	_ANSELH
   824                           _ANSELH	set	0x189
   825  0189                     	global	_ANSEL
   826                           _ANSEL	set	0x188
   827  0188                     	
   828                           STR_4:	
   829  001D                     	retlw	37	;'%'
   830  001D  3425               	retlw	46	;'.'
   831  001E  342E               	retlw	49	;'1'
   832  001F  3431               	retlw	100	;'d'
   833  0020  3464               	retlw	32	;' '
   834  0021  3420               	retlw	37	;'%'
   835  0022  3425               	retlw	46	;'.'
   836  0023  342E               	retlw	49	;'1'
   837  0024  3431               	retlw	100	;'d'
   838  0025  3464               	retlw	32	;' '
   839  0026  3420               	retlw	32	;' '
   840  0027  3420               	retlw	37	;'%'
   841  0028  3425               	retlw	46	;'.'
   842  0029  342E               	retlw	51	;'3'
   843  002A  3433               	retlw	100	;'d'
   844  002B  3464               	retlw	32	;' '
   845  002C  3420               	retlw	37	;'%'
   846  002D  3425               	retlw	46	;'.'
   847  002E  342E               	retlw	49	;'1'
   848  002F  3431               	retlw	100	;'d'
   849  0030  3464               	retlw	32	;' '
   850  0031  3420               	retlw	32	;' '
   851  0032  3420               	retlw	32	;' '
   852  0033  3420               	retlw	32	;' '
   853  0034  3420               	retlw	37	;'%'
   854  0035  3425               	retlw	46	;'.'
   855  0036  342E               	retlw	100	;'d'
   856  0037  3464               	retlw	0
   857  0038  3400               psect	strings
   858                           	
   859                           STR_3:	
   860  0039                     	retlw	70	;'F'
   861  0039  3446               	retlw	32	;' '
   862  003A  3420               	retlw	76	;'L'
   863  003B  344C               	retlw	108	;'l'
   864  003C  346C               	retlw	32	;' '
   865  003D  3420               	retlw	68	;'D'
   866  003E  3444               	retlw	105	;'i'
   867  003F  3469               	retlw	115	;'s'
   868  0040  3473               	retlw	32	;' '
   869  0041  3420               	retlw	76	;'L'
   870  0042  344C               	retlw	105	;'i'
   871  0043  3469               	retlw	32	;' '
   872  0044  3420               	retlw	32	;' '
   873  0045  3420               	retlw	83	;'S'
   874  0046  3453               	retlw	101	;'e'
   875  0047  3465               	retlw	99	;'c'
   876  0048  3463               	retlw	0
   877  0049  3400               psect	strings
   878                           	
   879                           STR_2:	
   880  004A                     	retlw	69	;'E'
   881  004A  3445               	retlw	83	;'S'
   882  004B  3453               	retlw	84	;'T'
   883  004C  3454               	retlw	82	;'R'
   884  004D  3452               	retlw	65	;'A'
   885  004E  3441               	retlw	68	;'D'
   886  004F  3444               	retlw	65	;'A'
   887  0050  3441               	retlw	32	;' '
   888  0051  3420               	retlw	32	;' '
   889  0052  3420               	retlw	35	;'#'
   890  0053  3423               	retlw	49	;'1'
   891  0054  3431               	retlw	55	;'7'
   892  0055  3437               	retlw	48	;'0'
   893  0056  3430               	retlw	55	;'7'
   894  0057  3437               	retlw	56	;'8'
   895  0058  3438               	retlw	0
   896  0059  3400               psect	strings
   897                           	
   898                           STR_1:	
   899  005A                     	retlw	74	;'J'
   900  005A  344A               	retlw	79	;'O'
   901  005B  344F               	retlw	83	;'S'
   902  005C  3453               	retlw	69	;'E'
   903  005D  3445               	retlw	32	;' '
   904  005E  3420               	retlw	74	;'J'
   905  005F  344A               	retlw	65	;'A'
   906  0060  3441               	retlw	86	;'V'
   907  0061  3456               	retlw	73	;'I'
   908  0062  3449               	retlw	69	;'E'
   909  0063  3445               	retlw	82	;'R'
   910  0064  3452               	retlw	0
   911  0065  3400               psect	strings
   912                           ; #config settings
   913                           global __CFG_FOSC$INTRC_NOCLKOUT
   914                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   915  0000                     global __CFG_WDTE$OFF
   916                           __CFG_WDTE$OFF equ 0x0
   917  0000                     global __CFG_PWRTE$OFF
   918                           __CFG_PWRTE$OFF equ 0x0
   919  0000                     global __CFG_MCLRE$OFF
   920                           __CFG_MCLRE$OFF equ 0x0
   921  0000                     global __CFG_CP$OFF
   922                           __CFG_CP$OFF equ 0x0
   923  0000                     global __CFG_CPD$OFF
   924                           __CFG_CPD$OFF equ 0x0
   925  0000                     global __CFG_BOREN$OFF
   926                           __CFG_BOREN$OFF equ 0x0
   927  0000                     global __CFG_IESO$OFF
   928                           __CFG_IESO$OFF equ 0x0
   929  0000                     global __CFG_FCMEN$OFF
   930                           __CFG_FCMEN$OFF equ 0x0
   931  0000                     global __CFG_LVP$OFF
   932                           __CFG_LVP$OFF equ 0x0
   933  0000                     global __CFG_BOR4V$BOR40V
   934                           __CFG_BOR4V$BOR40V equ 0x0
   935  0000                     global __CFG_WRT$OFF
   936                           __CFG_WRT$OFF equ 0x0
   937  0000                     	file	"C:\Users\JOSJAV~1\AppData\Local\Temp\snkc."
   938                           	line	#
   939                           psect cinit,class=CODE,delta=2
   940                           global start_initialization
   941                           start_initialization:
   942  07EB                     
   943                           global __initialization
   944                           __initialization:
   945  07EB                     psect	bssBANK0,class=BANK0,space=1,noexec
   946                           global __pbssBANK0
   947                           __pbssBANK0:
   948  0020                     _E1:
   949  0020                            ds      2
   950  0020                     
   951                           _D1:
   952  0022                            ds      2
   953  0022                     
   954                           _C1:
   955  0024                            ds      2
   956  0024                     
   957                           _B1:
   958  0026                            ds      2
   959  0026                     
   960                           _A1:
   961  0028                            ds      2
   962  0028                     
   963                           _E:
   964  002A                            ds      2
   965  002A                     
   966                           _D:
   967  002C                            ds      2
   968  002C                     
   969                           _C:
   970  002E                            ds      2
   971  002E                     
   972                           _B:
   973  0030                            ds      2
   974  0030                     
   975                           _A:
   976  0032                            ds      2
   977  0032                     
   978                           _e:
   979  0034                            ds      2
   980  0034                     
   981                           _d:
   982  0036                            ds      2
   983  0036                     
   984                           _c:
   985  0038                            ds      2
   986  0038                     
   987                           _b:
   988  003A                            ds      2
   989  003A                     
   990                           _a:
   991  003C                            ds      2
   992  003C                     
   993                           _valor:
   994  003E                            ds      16
   995  003E                     
   996                           psect	bssBANK1,class=BANK1,space=1,noexec
   997                           global __pbssBANK1
   998                           __pbssBANK1:
   999  00A0                     _valor1:
  1000  00A0                            ds      16
  1001  00A0                     
  1002                           	file	"C:\Users\JOSJAV~1\AppData\Local\Temp\snkc."
  1003                           	line	#
  1004                           psect clrtext,class=CODE,delta=2
  1005                           global clear_ram0
  1006                           ;	Called with FSR containing the base address, and
  1007                           ;	W with the last address+1
  1008                           clear_ram0:
  1009  02CE                     	clrwdt			;clear the watchdog before getting into this loop
  1010  02CE  0064               clrloop0:
  1011  02CF                     	clrf	indf		;clear RAM location pointed to by FSR
  1012  02CF  0180               	incf	fsr,f		;increment pointer
  1013  02D0  0A84               	xorwf	fsr,w		;XOR with final address
  1014  02D1  0604               	btfsc	status,2	;have we reached the end yet?
  1015  02D2  1903               	retlw	0		;all done for this memory range, return
  1016  02D3  3400               	xorwf	fsr,w		;XOR again to restore value
  1017  02D4  0604               	goto	clrloop0		;do the next byte
  1018  02D5  2ACF               
  1019                           ; Clear objects allocated to BANK0
  1020                           psect cinit,class=CODE,delta=2,merge=1
  1021                           	bcf	status, 7	;select IRP bank0
  1022  07EB  1383               	movlw	low(__pbssBANK0)
  1023  07EC  3020               	movwf	fsr
  1024  07ED  0084               	movlw	low((__pbssBANK0)+02Eh)
  1025  07EE  304E               	fcall	clear_ram0
  1026  07EF  120A  118A  22CE  120A  118A  ; Clear objects allocated to BANK1
  1027                           psect cinit,class=CODE,delta=2,merge=1
  1028                           	movlw	low(__pbssBANK1)
  1029  07F4  30A0               	movwf	fsr
  1030  07F5  0084               	movlw	low((__pbssBANK1)+010h)
  1031  07F6  30B0               	fcall	clear_ram0
  1032  07F7  120A  118A  22CE  120A  118A  psect cinit,class=CODE,delta=2,merge=1
  1033                           global end_of_initialization,__end_of__initialization
  1034                           
  1035                           ;End of C runtime variable initialization code
  1036                           
  1037                           end_of_initialization:
  1038  07FC                     __end_of__initialization:
  1039  07FC                     clrf status
  1040  07FC  0183               ljmp _main	;jump to C main() function
  1041  07FD  120A  118A  2D2D   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1042                           global __pcstackCOMMON
  1043                           __pcstackCOMMON:
  1044  0070                     ?_isdigit:	; 1 bit 
  1045  0070                     ?_setup:	; 1 bytes @ 0x0
  1046  0070                     ?_lcd_init:	; 1 bytes @ 0x0
  1047  0070                     ?_LCD_DATO:	; 1 bytes @ 0x0
  1048  0070                     ?_delay:	; 1 bytes @ 0x0
  1049  0070                     ??_isdigit:	; 1 bytes @ 0x0
  1050  0070                     ?_spiInit:	; 1 bytes @ 0x0
  1051  0070                     ?_spiReceiveWait:	; 1 bytes @ 0x0
  1052  0070                     ??_spiReceiveWait:	; 1 bytes @ 0x0
  1053  0070                     ?_spiWrite:	; 1 bytes @ 0x0
  1054  0070                     ??_spiWrite:	; 1 bytes @ 0x0
  1055  0070                     ?_spiRead:	; 1 bytes @ 0x0
  1056  0070                     ??_spiRead:	; 1 bytes @ 0x0
  1057  0070                     ?_main:	; 1 bytes @ 0x0
  1058  0070                     ?_lcd_lat:	; 1 bytes @ 0x0
  1059  0070                     ?_lcd_ready:	; 1 bytes @ 0x0
  1060  0070                     ?_lcd_cmd:	; 1 bytes @ 0x0
  1061  0070                     ?_LCD_CHAR:	; 1 bytes @ 0x0
  1062  0070                     ??_LCD_CHAR:	; 1 bytes @ 0x0
  1063  0070                     ?___bmul:	; 1 bytes @ 0x0
  1064  0070                     	global	?___lwdiv
  1065                           ?___lwdiv:	; 2 bytes @ 0x0
  1066  0070                     	global	spiInit@sDataSample
  1067                           spiInit@sDataSample:	; 1 bytes @ 0x0
  1068  0070                     	global	spiWrite@dat
  1069                           spiWrite@dat:	; 1 bytes @ 0x0
  1070  0070                     	global	___bmul@multiplicand
  1071                           ___bmul@multiplicand:	; 1 bytes @ 0x0
  1072  0070                     	global	_isdigit$828
  1073                           _isdigit$828:	; 1 bytes @ 0x0
  1074  0070                     	global	delay@ms
  1075                           delay@ms:	; 2 bytes @ 0x0
  1076  0070                     	global	LCD_DATO@var
  1077                           LCD_DATO@var:	; 2 bytes @ 0x0
  1078  0070                     	global	___lwdiv@divisor
  1079                           ___lwdiv@divisor:	; 2 bytes @ 0x0
  1080  0070                     	ds	1
  1081  0070                     ??___bmul:	; 1 bytes @ 0x1
  1082  0071                     	global	spiInit@sClockIdle
  1083                           spiInit@sClockIdle:	; 1 bytes @ 0x1
  1084  0071                     	global	LCD_CHAR@a
  1085                           LCD_CHAR@a:	; 1 bytes @ 0x1
  1086  0071                     	global	isdigit@c
  1087                           isdigit@c:	; 1 bytes @ 0x1
  1088  0071                     	ds	1
  1089  0071                     ?_LCD_STRING:	; 1 bytes @ 0x2
  1090  0072                     ??_LCD_DATO:	; 1 bytes @ 0x2
  1091  0072                     ??_delay:	; 1 bytes @ 0x2
  1092  0072                     	global	spiInit@sTransmitEdge
  1093                           spiInit@sTransmitEdge:	; 1 bytes @ 0x2
  1094  0072                     	global	___bmul@product
  1095                           ___bmul@product:	; 1 bytes @ 0x2
  1096  0072                     	global	delay@j
  1097                           delay@j:	; 2 bytes @ 0x2
  1098  0072                     	global	LCD_STRING@a
  1099                           LCD_STRING@a:	; 2 bytes @ 0x2
  1100  0072                     	global	___lwdiv@dividend
  1101                           ___lwdiv@dividend:	; 2 bytes @ 0x2
  1102  0072                     	ds	1
  1103  0072                     ??_spiInit:	; 1 bytes @ 0x3
  1104  0073                     	global	spiInit@sType
  1105                           spiInit@sType:	; 1 bytes @ 0x3
  1106  0073                     	global	___bmul@multiplier
  1107                           ___bmul@multiplier:	; 1 bytes @ 0x3
  1108  0073                     	ds	1
  1109  0073                     ??_setup:	; 1 bytes @ 0x4
  1110  0074                     ??_LCD_STRING:	; 1 bytes @ 0x4
  1111  0074                     ?_LCD_CURSOR:	; 1 bytes @ 0x4
  1112  0074                     ??___lwdiv:	; 1 bytes @ 0x4
  1113  0074                     	global	delay@i
  1114                           delay@i:	; 2 bytes @ 0x4
  1115  0074                     	global	LCD_CURSOR@a
  1116                           LCD_CURSOR@a:	; 2 bytes @ 0x4
  1117  0074                     	ds	1
  1118  0074                     	global	___lwdiv@quotient
  1119                           ___lwdiv@quotient:	; 2 bytes @ 0x5
  1120  0075                     	ds	1
  1121  0075                     ??_lcd_lat:	; 1 bytes @ 0x6
  1122  0076                     ??_lcd_ready:	; 1 bytes @ 0x6
  1123  0076                     	global	LCD_CURSOR@b
  1124                           LCD_CURSOR@b:	; 2 bytes @ 0x6
  1125  0076                     	ds	1
  1126  0076                     ??_lcd_cmd:	; 1 bytes @ 0x7
  1127  0077                     	global	lcd_cmd@x
  1128                           lcd_cmd@x:	; 1 bytes @ 0x7
  1129  0077                     	global	___lwdiv@counter
  1130                           ___lwdiv@counter:	; 1 bytes @ 0x7
  1131  0077                     	global	LCD_STRING@n
  1132                           LCD_STRING@n:	; 2 bytes @ 0x7
  1133  0077                     	ds	1
  1134  0077                     ??_lcd_init:	; 1 bytes @ 0x8
  1135  0078                     ??_LCD_CURSOR:	; 1 bytes @ 0x8
  1136  0078                     	global	?___lwmod
  1137                           ?___lwmod:	; 2 bytes @ 0x8
  1138  0078                     	global	LCD_CURSOR@d
  1139                           LCD_CURSOR@d:	; 2 bytes @ 0x8
  1140  0078                     	global	___lwmod@divisor
  1141                           ___lwmod@divisor:	; 2 bytes @ 0x8
  1142  0078                     	ds	2
  1143  0078                     	global	___lwmod@dividend
  1144                           ___lwmod@dividend:	; 2 bytes @ 0xA
  1145  007A                     	ds	2
  1146  007A                     ??___lwmod:	; 1 bytes @ 0xC
  1147  007C                     	ds	1
  1148  007C                     	global	___lwmod@counter
  1149                           ___lwmod@counter:	; 1 bytes @ 0xD
  1150  007D                     	ds	1
  1151  007D                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1152                           global __pcstackBANK0
  1153                           __pcstackBANK0:
  1154  004E                     	global	?_sprintf
  1155                           ?_sprintf:	; 2 bytes @ 0x0
  1156  004E                     	global	sprintf@f
  1157                           sprintf@f:	; 1 bytes @ 0x0
  1158  004E                     	ds	11
  1159  004E                     ??_sprintf:	; 1 bytes @ 0xB
  1160  0059                     	ds	3
  1161  0059                     	global	sprintf@ap
  1162                           sprintf@ap:	; 1 bytes @ 0xE
  1163  005C                     	ds	1
  1164  005C                     	global	sprintf@flag
  1165                           sprintf@flag:	; 1 bytes @ 0xF
  1166  005D                     	ds	1
  1167  005D                     	global	sprintf@val
  1168                           sprintf@val:	; 2 bytes @ 0x10
  1169  005E                     	ds	2
  1170  005E                     	global	sprintf@sp
  1171                           sprintf@sp:	; 1 bytes @ 0x12
  1172  0060                     	ds	1
  1173  0060                     	global	sprintf@prec
  1174                           sprintf@prec:	; 1 bytes @ 0x13
  1175  0061                     	ds	1
  1176  0061                     	global	sprintf@c
  1177                           sprintf@c:	; 1 bytes @ 0x14
  1178  0062                     	ds	1
  1179  0062                     ??_main:	; 1 bytes @ 0x15
  1180  0063                     	ds	3
  1181  0063                     ;!
  1182                           ;!Data Sizes:
  1183                           ;!    Strings     73
  1184                           ;!    Constant    10
  1185                           ;!    Data        0
  1186                           ;!    BSS         62
  1187                           ;!    Persistent  0
  1188                           ;!    Stack       0
  1189                           ;!
  1190                           ;!Auto Spaces:
  1191                           ;!    Space          Size  Autos    Used
  1192                           ;!    COMMON           14     14      14
  1193                           ;!    BANK0            80     24      70
  1194                           ;!    BANK1            80      0      16
  1195                           ;!    BANK3            96      0       0
  1196                           ;!    BANK2            96      0       0
  1197                           
  1198                           ;!
  1199                           ;!Pointer List with Targets:
  1200                           ;!
  1201                           ;!    sprintf@f	PTR const unsigned char  size(1) Largest target is 28
  1202                           ;!		 -> STR_4(CODE[28]), STR_3(CODE[17]), 
  1203                           ;!
  1204                           ;!    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1205                           ;!		 -> valor(BANK0[16]), valor1(BANK1[16]), 
  1206                           ;!
  1207                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  1208                           ;!		 -> ?_sprintf(BANK0[2]), 
  1209                           ;!
  1210                           ;!    LCD_STRING@a	PTR unsigned char  size(2) Largest target is 16
  1211                           ;!		 -> valor(BANK0[16]), valor1(BANK1[16]), STR_2(CODE[16]), STR_1(CODE[12]), 
  1212                           ;!
  1213                           
  1214                           
  1215                           ;!
  1216                           ;!Critical Paths under _main in COMMON
  1217                           ;!
  1218                           ;!    _sprintf->___lwmod
  1219                           ;!    ___lwmod->___lwdiv
  1220                           ;!    _setup->_spiInit
  1221                           ;!    _lcd_init->_lcd_cmd
  1222                           ;!    _lcd_cmd->_lcd_ready
  1223                           ;!    _lcd_ready->_delay
  1224                           ;!    _lcd_lat->_delay
  1225                           ;!    _LCD_STRING->_LCD_CHAR
  1226                           ;!    _LCD_CURSOR->_LCD_DATO
  1227                           ;!
  1228                           ;!Critical Paths under _main in BANK0
  1229                           ;!
  1230                           ;!    _main->_sprintf
  1231                           ;!
  1232                           ;!Critical Paths under _main in BANK1
  1233                           ;!
  1234                           ;!    None.
  1235                           ;!
  1236                           ;!Critical Paths under _main in BANK3
  1237                           ;!
  1238                           ;!    None.
  1239                           ;!
  1240                           ;!Critical Paths under _main in BANK2
  1241                           ;!
  1242                           ;!    None.
  1243                           
  1244 ;;
  1245 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1246 ;;
  1247                           
  1248                           ;!
  1249                           ;!Call Graph Tables:
  1250                           ;!
  1251                           ;! ---------------------------------------------------------------------------------
  1252                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1253                           ;! ---------------------------------------------------------------------------------
  1254                           ;! (0) _main                                                 3     3      0    4355
  1255                           ;!                                             21 BANK0      3     3      0
  1256                           ;!                         _LCD_CURSOR
  1257                           ;!                           _LCD_DATO
  1258                           ;!                         _LCD_STRING
  1259                           ;!                           _lcd_init
  1260                           ;!                              _setup
  1261                           ;!                            _spiRead
  1262                           ;!                           _spiWrite
  1263                           ;!                            _sprintf
  1264                           ;! ---------------------------------------------------------------------------------
  1265                           ;! (1) _sprintf                                             29    18     11    1805
  1266                           ;!                                              0 BANK0     21    10     11
  1267                           ;!                             ___bmul
  1268                           ;!                            ___lwdiv
  1269                           ;!                            ___lwmod
  1270                           ;!                            _isdigit
  1271                           ;! ---------------------------------------------------------------------------------
  1272                           ;! (2) _isdigit                                              2     2      0      68
  1273                           ;!                                              0 COMMON     2     2      0
  1274                           ;! ---------------------------------------------------------------------------------
  1275                           ;! (2) ___lwmod                                              6     2      4     311
  1276                           ;!                                              8 COMMON     6     2      4
  1277                           ;!                            ___lwdiv (ARG)
  1278                           ;! ---------------------------------------------------------------------------------
  1279                           ;! (2) ___lwdiv                                              8     4      4     314
  1280                           ;!                                              0 COMMON     8     4      4
  1281                           ;! ---------------------------------------------------------------------------------
  1282                           ;! (2) ___bmul                                               4     3      1     168
  1283                           ;!                                              0 COMMON     4     3      1
  1284                           ;! ---------------------------------------------------------------------------------
  1285                           ;! (1) _spiWrite                                             1     1      0      22
  1286                           ;!                                              0 COMMON     1     1      0
  1287                           ;! ---------------------------------------------------------------------------------
  1288                           ;! (1) _spiRead                                              0     0      0       0
  1289                           ;!                     _spiReceiveWait
  1290                           ;! ---------------------------------------------------------------------------------
  1291                           ;! (2) _spiReceiveWait                                       0     0      0       0
  1292                           ;! ---------------------------------------------------------------------------------
  1293                           ;! (1) _setup                                                0     0      0     360
  1294                           ;!                            _spiInit
  1295                           ;! ---------------------------------------------------------------------------------
  1296                           ;! (2) _spiInit                                              4     1      3     360
  1297                           ;!                                              0 COMMON     4     1      3
  1298                           ;! ---------------------------------------------------------------------------------
  1299                           ;! (1) _lcd_init                                             0     0      0     662
  1300                           ;!                            _lcd_cmd
  1301                           ;! ---------------------------------------------------------------------------------
  1302                           ;! (2) _lcd_cmd                                              1     1      0     662
  1303                           ;!                                              7 COMMON     1     1      0
  1304                           ;!                            _lcd_lat
  1305                           ;!                          _lcd_ready
  1306                           ;! ---------------------------------------------------------------------------------
  1307                           ;! (3) _lcd_ready                                            1     1      0     320
  1308                           ;!                                              6 COMMON     1     1      0
  1309                           ;!                              _delay
  1310                           ;! ---------------------------------------------------------------------------------
  1311                           ;! (3) _lcd_lat                                              0     0      0     320
  1312                           ;!                              _delay
  1313                           ;! ---------------------------------------------------------------------------------
  1314                           ;! (4) _delay                                                6     4      2     320
  1315                           ;!                                              0 COMMON     6     4      2
  1316                           ;! ---------------------------------------------------------------------------------
  1317                           ;! (1) _LCD_STRING                                           7     5      2     416
  1318                           ;!                                              2 COMMON     7     5      2
  1319                           ;!                           _LCD_CHAR
  1320                           ;! ---------------------------------------------------------------------------------
  1321                           ;! (2) _LCD_CHAR                                             2     2      0      22
  1322                           ;!                                              0 COMMON     2     2      0
  1323                           ;! ---------------------------------------------------------------------------------
  1324                           ;! (1) _LCD_CURSOR                                           6     2      4     764
  1325                           ;!                                              4 COMMON     6     2      4
  1326                           ;!                           _LCD_DATO
  1327                           ;! ---------------------------------------------------------------------------------
  1328                           ;! (1) _LCD_DATO                                             4     2      2     326
  1329                           ;!                                              0 COMMON     4     2      2
  1330                           ;! ---------------------------------------------------------------------------------
  1331                           ;! Estimated maximum stack depth 4
  1332                           ;! ---------------------------------------------------------------------------------
  1333                           ;!
  1334                           ;! Call Graph Graphs:
  1335                           ;!
  1336                           ;! _main (ROOT)
  1337                           ;!   _LCD_CURSOR
  1338                           ;!     _LCD_DATO
  1339                           ;!   _LCD_DATO
  1340                           ;!   _LCD_STRING
  1341                           ;!     _LCD_CHAR
  1342                           ;!   _lcd_init
  1343                           ;!     _lcd_cmd
  1344                           ;!       _lcd_lat
  1345                           ;!         _delay
  1346                           ;!       _lcd_ready
  1347                           ;!         _delay
  1348                           ;!   _setup
  1349                           ;!     _spiInit
  1350                           ;!   _spiRead
  1351                           ;!     _spiReceiveWait
  1352                           ;!   _spiWrite
  1353                           ;!   _sprintf
  1354                           ;!     ___bmul
  1355                           ;!     ___lwdiv
  1356                           ;!     ___lwmod
  1357                           ;!       ___lwdiv (ARG)
  1358                           ;!     _isdigit
  1359                           ;!
  1360                           
  1361                           ;! Address spaces:
  1362                           
  1363                           ;!Name               Size   Autos  Total    Cost      Usage
  1364                           ;!BITCOMMON            E      0       0       0        0.0%
  1365                           ;!EEDATA             100      0       0       0        0.0%
  1366                           ;!NULL                 0      0       0       0        0.0%
  1367                           ;!CODE                 0      0       0       0        0.0%
  1368                           ;!COMMON               E      E       E       1      100.0%
  1369                           ;!BITSFR0              0      0       0       1        0.0%
  1370                           ;!SFR0                 0      0       0       1        0.0%
  1371                           ;!BITSFR1              0      0       0       2        0.0%
  1372                           ;!SFR1                 0      0       0       2        0.0%
  1373                           ;!STACK                0      0       0       2        0.0%
  1374                           ;!ABS                  0      0      64       3        0.0%
  1375                           ;!BITBANK0            50      0       0       4        0.0%
  1376                           ;!BITSFR3              0      0       0       4        0.0%
  1377                           ;!SFR3                 0      0       0       4        0.0%
  1378                           ;!BANK0               50     18      46       5       87.5%
  1379                           ;!BITSFR2              0      0       0       5        0.0%
  1380                           ;!SFR2                 0      0       0       5        0.0%
  1381                           ;!BITBANK1            50      0       0       6        0.0%
  1382                           ;!BANK1               50      0      10       7       20.0%
  1383                           ;!BITBANK3            60      0       0       8        0.0%
  1384                           ;!BANK3               60      0       0       9        0.0%
  1385                           ;!BITBANK2            60      0       0      10        0.0%
  1386                           ;!BANK2               60      0       0      11        0.0%
  1387                           ;!DATA                 0      0      64      12        0.0%
  1388                           
  1389                           	global	_main
  1390                           
  1391 ;; *************** function _main *****************
  1392 ;; Defined at:
  1393 ;;		line 60 in file "newmain.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;		None
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;		None
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  1    wreg      void 
  1400 ;; Registers used:
  1401 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1402 ;; Tracked objects:
  1403 ;;		On entry : B00/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1407 ;;      Params:         0       0       0       0       0
  1408 ;;      Locals:         0       0       0       0       0
  1409 ;;      Temps:          0       3       0       0       0
  1410 ;;      Totals:         0       3       0       0       0
  1411 ;;Total ram usage:        3 bytes
  1412 ;; Hardware stack levels required when called:    4
  1413 ;; This function calls:
  1414 ;;		_LCD_CURSOR
  1415 ;;		_LCD_DATO
  1416 ;;		_LCD_STRING
  1417 ;;		_lcd_init
  1418 ;;		_setup
  1419 ;;		_spiRead
  1420 ;;		_spiWrite
  1421 ;;		_sprintf
  1422 ;; This function is called by:
  1423 ;;		Startup code after reset
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1427                           	file	"newmain.c"
  1428                           	line	60
  1429                           global __pmaintext
  1430                           __pmaintext:	;psect for function _main
  1431  052D                     psect	maintext
  1432                           	file	"newmain.c"
  1433                           	line	60
  1434                           	global	__size_of_main
  1435                           	__size_of_main	equ	__end_of_main-_main
  1436  0133                     	
  1437                           _main:	
  1438  052D                     ;incstack = 0
  1439                           	opt	stack 4
  1440                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1441                           	line	61
  1442                           	
  1443                           l1434:	
  1444  052D                     ;newmain.c: 61:     setup();
  1445                           	fcall	_setup
  1446  052D  120A  118A  23A0  120A  118A  	line	62
  1447                           ;newmain.c: 62:     lcd_init();
  1448                           	fcall	_lcd_init
  1449  0532  120A  118A  235D  120A  118A  	line	63
  1450                           	
  1451                           l1436:	
  1452  0537                     ;newmain.c: 63:     LCD_STRING("JOSE JAVIER");
  1453                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  1454  0537  3048               	movwf	(LCD_STRING@a)
  1455  0538  00F2               	movlw	80h
  1456  0539  3080               	movwf	(LCD_STRING@a+1)
  1457  053A  00F3               	fcall	_LCD_STRING
  1458  053B  120A  118A  249E  120A  118A  	line	64
  1459                           	
  1460                           l1438:	
  1461  0540                     ;newmain.c: 64:     LCD_DATO(0xC0);
  1462                           	movlw	0C0h
  1463  0540  30C0               	movwf	(LCD_DATO@var)
  1464  0541  00F0               	movlw	0
  1465  0542  3000               	movwf	((LCD_DATO@var))+1
  1466  0543  00F1               	fcall	_LCD_DATO
  1467  0544  120A  118A  237C  120A  118A  	line	65
  1468                           ;newmain.c: 65:     LCD_STRING("ESTRADA  #17078");
  1469                           	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  1470  0549  3038               	movwf	(LCD_STRING@a)
  1471  054A  00F2               	movlw	80h
  1472  054B  3080               	movwf	(LCD_STRING@a+1)
  1473  054C  00F3               	fcall	_LCD_STRING
  1474  054D  120A  118A  249E  120A  118A  	line	66
  1475                           	
  1476                           l1440:	
  1477  0552                     ;newmain.c: 66:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1478                           	opt asmopt_push
  1479                           opt asmopt_off
  1480                           movlw  3
  1481  0552  3003               	bcf	status, 5	;RP0=0, select bank0
  1482  0553  1283               	bcf	status, 6	;RP1=0, select bank0
  1483  0554  1303               movwf	((??_main+0)+0+2),f
  1484  0555  00E5               movlw	138
  1485  0556  308A               movwf	((??_main+0)+0+1),f
  1486  0557  00E4               	movlw	85
  1487  0558  3055               movwf	((??_main+0)+0),f
  1488  0559  00E3               	u857:
  1489  055A                     decfsz	((??_main+0)+0),f
  1490  055A  0BE3               	goto	u857
  1491  055B  2D5A               	decfsz	((??_main+0)+0+1),f
  1492  055C  0BE4               	goto	u857
  1493  055D  2D5A               	decfsz	((??_main+0)+0+2),f
  1494  055E  0BE5               	goto	u857
  1495  055F  2D5A               opt asmopt_pop
  1496                           
  1497                           	line	67
  1498                           	
  1499                           l1442:	
  1500  0560                     ;newmain.c: 67:     LCD_DATO(0x01);
  1501                           	movlw	01h
  1502  0560  3001               	movwf	(LCD_DATO@var)
  1503  0561  00F0               	movlw	0
  1504  0562  3000               	movwf	((LCD_DATO@var))+1
  1505  0563  00F1               	fcall	_LCD_DATO
  1506  0564  120A  118A  237C  120A  118A  	goto	l1444
  1507  0569  2D6A               	line	71
  1508                           ;newmain.c: 71:     while(1) {
  1509                           	
  1510                           l115:	
  1511  056A                     	line	72
  1512                           	
  1513                           l1444:	
  1514  056A                     ;newmain.c: 72:         sprintf(valor1, "F Ll Dis Li  Sec");
  1515                           	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  1516  056A  3027               	bcf	status, 5	;RP0=0, select bank0
  1517  056B  1283               	bcf	status, 6	;RP1=0, select bank0
  1518  056C  1303               	movwf	(??_main+0)+0
  1519  056D  00E3               	movf	(??_main+0)+0,w
  1520  056E  0863               	movwf	(sprintf@f)
  1521  056F  00CE               	movlw	(low(_valor1|((0x0)<<8)))&0ffh
  1522  0570  30A0               	fcall	_sprintf
  1523  0571  120A  118A  2660  120A  118A  	line	73
  1524                           	
  1525                           l1446:	
  1526  0576                     ;newmain.c: 73:         LCD_CURSOR(1, 1);
  1527                           	movlw	01h
  1528  0576  3001               	movwf	(LCD_CURSOR@a)
  1529  0577  00F4               	movlw	0
  1530  0578  3000               	movwf	((LCD_CURSOR@a))+1
  1531  0579  00F5               	movlw	01h
  1532  057A  3001               	movwf	(LCD_CURSOR@b)
  1533  057B  00F6               	movlw	0
  1534  057C  3000               	movwf	((LCD_CURSOR@b))+1
  1535  057D  00F7               	fcall	_LCD_CURSOR
  1536  057E  120A  118A  242A  120A  118A  	line	74
  1537                           	
  1538                           l1448:	
  1539  0583                     ;newmain.c: 74:         LCD_STRING(valor1);
  1540                           	movlw	(low(_valor1|((0x0)<<8))&0ffh)
  1541  0583  30A0               	movwf	(LCD_STRING@a)
  1542  0584  00F2               	movlw	(0x0)
  1543  0585  3000               	movwf	(LCD_STRING@a+1)
  1544  0586  00F3               	fcall	_LCD_STRING
  1545  0587  120A  118A  249E  120A  118A  	line	75
  1546                           	
  1547                           l1450:	
  1548  058C                     ;newmain.c: 75:         sprintf(valor, "%.1d %.1d  %.3d %.1d    %.d", C1, E1, D1, A1, B1
                                 );
  1549                           	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  1550  058C  300B               	bcf	status, 5	;RP0=0, select bank0
  1551  058D  1283               	bcf	status, 6	;RP1=0, select bank0
  1552  058E  1303               	movwf	(??_main+0)+0
  1553  058F  00E3               	movf	(??_main+0)+0,w
  1554  0590  0863               	movwf	(sprintf@f)
  1555  0591  00CE               	movf	(_C1+1),w
  1556  0592  0825               	movwf	1+(?_sprintf)+01h
  1557  0593  00D0               	movf	(_C1),w
  1558  0594  0824               	movwf	0+(?_sprintf)+01h
  1559  0595  00CF               	movf	(_E1+1),w
  1560  0596  0821               	movwf	1+(?_sprintf)+03h
  1561  0597  00D2               	movf	(_E1),w
  1562  0598  0820               	movwf	0+(?_sprintf)+03h
  1563  0599  00D1               	movf	(_D1+1),w
  1564  059A  0823               	movwf	1+(?_sprintf)+05h
  1565  059B  00D4               	movf	(_D1),w
  1566  059C  0822               	movwf	0+(?_sprintf)+05h
  1567  059D  00D3               	movf	(_A1+1),w
  1568  059E  0829               	movwf	1+(?_sprintf)+07h
  1569  059F  00D6               	movf	(_A1),w
  1570  05A0  0828               	movwf	0+(?_sprintf)+07h
  1571  05A1  00D5               	movf	(_B1+1),w
  1572  05A2  0827               	movwf	1+(?_sprintf)+09h
  1573  05A3  00D8               	movf	(_B1),w
  1574  05A4  0826               	movwf	0+(?_sprintf)+09h
  1575  05A5  00D7               	movlw	(low(_valor|((0x0)<<8)))&0ffh
  1576  05A6  303E               	fcall	_sprintf
  1577  05A7  120A  118A  2660  120A  118A  	line	76
  1578                           	
  1579                           l1452:	
  1580  05AC                     ;newmain.c: 76:         LCD_CURSOR(2, 1);
  1581                           	movlw	02h
  1582  05AC  3002               	movwf	(LCD_CURSOR@a)
  1583  05AD  00F4               	movlw	0
  1584  05AE  3000               	movwf	((LCD_CURSOR@a))+1
  1585  05AF  00F5               	movlw	01h
  1586  05B0  3001               	movwf	(LCD_CURSOR@b)
  1587  05B1  00F6               	movlw	0
  1588  05B2  3000               	movwf	((LCD_CURSOR@b))+1
  1589  05B3  00F7               	fcall	_LCD_CURSOR
  1590  05B4  120A  118A  242A  120A  118A  	line	77
  1591                           	
  1592                           l1454:	
  1593  05B9                     ;newmain.c: 77:         LCD_STRING(valor);
  1594                           	movlw	(low(_valor|((0x0)<<8))&0ffh)
  1595  05B9  303E               	movwf	(LCD_STRING@a)
  1596  05BA  00F2               	movlw	(0x0)
  1597  05BB  3000               	movwf	(LCD_STRING@a+1)
  1598  05BC  00F3               	fcall	_LCD_STRING
  1599  05BD  120A  118A  249E  120A  118A  	line	78
  1600                           	
  1601                           l1456:	
  1602  05C2                     ;newmain.c: 78:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1603                           	opt asmopt_push
  1604                           opt asmopt_off
  1605                           	movlw	199
  1606  05C2  30C7               	bcf	status, 5	;RP0=0, select bank0
  1607  05C3  1283               	bcf	status, 6	;RP1=0, select bank0
  1608  05C4  1303               movwf	((??_main+0)+0),f
  1609  05C5  00E3               	u867:
  1610  05C6                     	nop2
  1611  05C6  2DC7               decfsz	(??_main+0)+0,f
  1612  05C7  0BE3               	goto	u867
  1613  05C8  2DC6               	nop2
  1614  05C9  2DCA               opt asmopt_pop
  1615                           
  1616                           	line	79
  1617                           	
  1618                           l1458:	
  1619  05CA                     ;newmain.c: 79:         spiWrite(1);
  1620                           	movlw	low(01h)
  1621  05CA  3001               	fcall	_spiWrite
  1622  05CB  120A  118A  22C8  120A  118A  	line	80
  1623                           	
  1624                           l1460:	
  1625  05D0                     ;newmain.c: 80:         A1 = spiRead();
  1626                           	fcall	_spiRead
  1627  05D0  120A  118A  22DF  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1628  05D5  1283               	bcf	status, 6	;RP1=0, select bank0
  1629  05D6  1303               	movwf	(??_main+0)+0
  1630  05D7  00E3               	clrf	(??_main+0)+0+1
  1631  05D8  01E4               	movf	0+(??_main+0)+0,w
  1632  05D9  0863               	movwf	(_A1)
  1633  05DA  00A8               	movf	1+(??_main+0)+0,w
  1634  05DB  0864               	movwf	(_A1+1)
  1635  05DC  00A9               	line	81
  1636                           	
  1637                           l1462:	
  1638  05DD                     ;newmain.c: 81:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1639                           	opt asmopt_push
  1640                           opt asmopt_off
  1641                           movlw	13
  1642  05DD  300D               	bcf	status, 5	;RP0=0, select bank0
  1643  05DE  1283               	bcf	status, 6	;RP1=0, select bank0
  1644  05DF  1303               movwf	((??_main+0)+0+1),f
  1645  05E0  00E4               	movlw	251
  1646  05E1  30FB               movwf	((??_main+0)+0),f
  1647  05E2  00E3               	u877:
  1648  05E3                     decfsz	((??_main+0)+0),f
  1649  05E3  0BE3               	goto	u877
  1650  05E4  2DE3               	decfsz	((??_main+0)+0+1),f
  1651  05E5  0BE4               	goto	u877
  1652  05E6  2DE3               opt asmopt_pop
  1653                           
  1654                           	line	82
  1655                           	
  1656                           l1464:	
  1657  05E7                     ;newmain.c: 82:         spiWrite(2);
  1658                           	movlw	low(02h)
  1659  05E7  3002               	fcall	_spiWrite
  1660  05E8  120A  118A  22C8  120A  118A  	line	83
  1661                           	
  1662                           l1466:	
  1663  05ED                     ;newmain.c: 83:         B1 = spiRead();
  1664                           	fcall	_spiRead
  1665  05ED  120A  118A  22DF  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1666  05F2  1283               	bcf	status, 6	;RP1=0, select bank0
  1667  05F3  1303               	movwf	(??_main+0)+0
  1668  05F4  00E3               	clrf	(??_main+0)+0+1
  1669  05F5  01E4               	movf	0+(??_main+0)+0,w
  1670  05F6  0863               	movwf	(_B1)
  1671  05F7  00A6               	movf	1+(??_main+0)+0,w
  1672  05F8  0864               	movwf	(_B1+1)
  1673  05F9  00A7               	line	84
  1674                           	
  1675                           l1468:	
  1676  05FA                     ;newmain.c: 84:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1677                           	opt asmopt_push
  1678                           opt asmopt_off
  1679                           movlw	13
  1680  05FA  300D               	bcf	status, 5	;RP0=0, select bank0
  1681  05FB  1283               	bcf	status, 6	;RP1=0, select bank0
  1682  05FC  1303               movwf	((??_main+0)+0+1),f
  1683  05FD  00E4               	movlw	251
  1684  05FE  30FB               movwf	((??_main+0)+0),f
  1685  05FF  00E3               	u887:
  1686  0600                     decfsz	((??_main+0)+0),f
  1687  0600  0BE3               	goto	u887
  1688  0601  2E00               	decfsz	((??_main+0)+0+1),f
  1689  0602  0BE4               	goto	u887
  1690  0603  2E00               opt asmopt_pop
  1691                           
  1692                           	line	85
  1693                           	
  1694                           l1470:	
  1695  0604                     ;newmain.c: 85:         spiWrite(3);
  1696                           	movlw	low(03h)
  1697  0604  3003               	fcall	_spiWrite
  1698  0605  120A  118A  22C8  120A  118A  	line	86
  1699                           	
  1700                           l1472:	
  1701  060A                     ;newmain.c: 86:         C1 = spiRead();
  1702                           	fcall	_spiRead
  1703  060A  120A  118A  22DF  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1704  060F  1283               	bcf	status, 6	;RP1=0, select bank0
  1705  0610  1303               	movwf	(??_main+0)+0
  1706  0611  00E3               	clrf	(??_main+0)+0+1
  1707  0612  01E4               	movf	0+(??_main+0)+0,w
  1708  0613  0863               	movwf	(_C1)
  1709  0614  00A4               	movf	1+(??_main+0)+0,w
  1710  0615  0864               	movwf	(_C1+1)
  1711  0616  00A5               	line	87
  1712                           	
  1713                           l1474:	
  1714  0617                     ;newmain.c: 87:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1715                           	opt asmopt_push
  1716                           opt asmopt_off
  1717                           movlw	13
  1718  0617  300D               	bcf	status, 5	;RP0=0, select bank0
  1719  0618  1283               	bcf	status, 6	;RP1=0, select bank0
  1720  0619  1303               movwf	((??_main+0)+0+1),f
  1721  061A  00E4               	movlw	251
  1722  061B  30FB               movwf	((??_main+0)+0),f
  1723  061C  00E3               	u897:
  1724  061D                     decfsz	((??_main+0)+0),f
  1725  061D  0BE3               	goto	u897
  1726  061E  2E1D               	decfsz	((??_main+0)+0+1),f
  1727  061F  0BE4               	goto	u897
  1728  0620  2E1D               opt asmopt_pop
  1729                           
  1730                           	line	88
  1731                           	
  1732                           l1476:	
  1733  0621                     ;newmain.c: 88:         spiWrite(4);
  1734                           	movlw	low(04h)
  1735  0621  3004               	fcall	_spiWrite
  1736  0622  120A  118A  22C8  120A  118A  	line	89
  1737                           	
  1738                           l1478:	
  1739  0627                     ;newmain.c: 89:         D1 = spiRead();
  1740                           	fcall	_spiRead
  1741  0627  120A  118A  22DF  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1742  062C  1283               	bcf	status, 6	;RP1=0, select bank0
  1743  062D  1303               	movwf	(??_main+0)+0
  1744  062E  00E3               	clrf	(??_main+0)+0+1
  1745  062F  01E4               	movf	0+(??_main+0)+0,w
  1746  0630  0863               	movwf	(_D1)
  1747  0631  00A2               	movf	1+(??_main+0)+0,w
  1748  0632  0864               	movwf	(_D1+1)
  1749  0633  00A3               	line	90
  1750                           	
  1751                           l1480:	
  1752  0634                     ;newmain.c: 90:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1753                           	opt asmopt_push
  1754                           opt asmopt_off
  1755                           movlw	13
  1756  0634  300D               	bcf	status, 5	;RP0=0, select bank0
  1757  0635  1283               	bcf	status, 6	;RP1=0, select bank0
  1758  0636  1303               movwf	((??_main+0)+0+1),f
  1759  0637  00E4               	movlw	251
  1760  0638  30FB               movwf	((??_main+0)+0),f
  1761  0639  00E3               	u907:
  1762  063A                     decfsz	((??_main+0)+0),f
  1763  063A  0BE3               	goto	u907
  1764  063B  2E3A               	decfsz	((??_main+0)+0+1),f
  1765  063C  0BE4               	goto	u907
  1766  063D  2E3A               opt asmopt_pop
  1767                           
  1768                           	line	91
  1769                           	
  1770                           l1482:	
  1771  063E                     ;newmain.c: 91:         spiWrite(5);
  1772                           	movlw	low(05h)
  1773  063E  3005               	fcall	_spiWrite
  1774  063F  120A  118A  22C8  120A  118A  	line	92
  1775                           	
  1776                           l1484:	
  1777  0644                     ;newmain.c: 92:         E1 = spiRead();
  1778                           	fcall	_spiRead
  1779  0644  120A  118A  22DF  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1780  0649  1283               	bcf	status, 6	;RP1=0, select bank0
  1781  064A  1303               	movwf	(??_main+0)+0
  1782  064B  00E3               	clrf	(??_main+0)+0+1
  1783  064C  01E4               	movf	0+(??_main+0)+0,w
  1784  064D  0863               	movwf	(_E1)
  1785  064E  00A0               	movf	1+(??_main+0)+0,w
  1786  064F  0864               	movwf	(_E1+1)
  1787  0650  00A1               	line	93
  1788                           	
  1789                           l1486:	
  1790  0651                     ;newmain.c: 93:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1791                           	opt asmopt_push
  1792                           opt asmopt_off
  1793                           movlw	13
  1794  0651  300D               	bcf	status, 5	;RP0=0, select bank0
  1795  0652  1283               	bcf	status, 6	;RP1=0, select bank0
  1796  0653  1303               movwf	((??_main+0)+0+1),f
  1797  0654  00E4               	movlw	251
  1798  0655  30FB               movwf	((??_main+0)+0),f
  1799  0656  00E3               	u917:
  1800  0657                     decfsz	((??_main+0)+0),f
  1801  0657  0BE3               	goto	u917
  1802  0658  2E57               	decfsz	((??_main+0)+0+1),f
  1803  0659  0BE4               	goto	u917
  1804  065A  2E57               opt asmopt_pop
  1805                           
  1806                           	goto	l1444
  1807  065B  2D6A               	line	106
  1808                           ;newmain.c: 106:     }
  1809                           	
  1810                           l116:	
  1811  065C                     	goto	l1444
  1812  065C  2D6A               	
  1813                           l117:	
  1814  065D                     	line	111
  1815                           	
  1816                           l118:	
  1817  065D                     	global	start
  1818                           	ljmp	start
  1819  065D  120A  118A  2800   	opt stack 0
  1820                           GLOBAL	__end_of_main
  1821                           	__end_of_main:
  1822  0660                     	signat	_main,89
  1823                           	global	_sprintf
  1824                           
  1825 ;; *************** function _sprintf *****************
  1826 ;; Defined at:
  1827 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;  sp              1    wreg     PTR unsigned char 
  1830 ;;		 -> valor(16), valor1(16), 
  1831 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1832 ;;		 -> STR_4(28), STR_3(17), 
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;  sp              1   18[BANK0 ] PTR unsigned char 
  1835 ;;		 -> valor(16), valor1(16), 
  1836 ;;  tmpval          4    0        struct .
  1837 ;;  val             2   16[BANK0 ] unsigned int 
  1838 ;;  cp              2    0        PTR const unsigned char 
  1839 ;;  len             2    0        unsigned int 
  1840 ;;  c               1   20[BANK0 ] unsigned char 
  1841 ;;  prec            1   19[BANK0 ] char 
  1842 ;;  flag            1   15[BANK0 ] unsigned char 
  1843 ;;  ap              1   14[BANK0 ] PTR void [1]
  1844 ;;		 -> ?_sprintf(2), 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  2    0[BANK0 ] int 
  1847 ;; Registers used:
  1848 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1854 ;;      Params:         0      11       0       0       0
  1855 ;;      Locals:         0       7       0       0       0
  1856 ;;      Temps:          0       3       0       0       0
  1857 ;;      Totals:         0      21       0       0       0
  1858 ;;Total ram usage:       21 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; Hardware stack levels required when called:    1
  1861 ;; This function calls:
  1862 ;;		___bmul
  1863 ;;		___lwdiv
  1864 ;;		___lwmod
  1865 ;;		_isdigit
  1866 ;; This function is called by:
  1867 ;;		_main
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1871                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  1872                           	line	500
  1873                           global __ptext1
  1874                           __ptext1:	;psect for function _sprintf
  1875  0660                     psect	text1
  1876                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  1877                           	line	500
  1878                           	global	__size_of_sprintf
  1879                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  1880  018B                     	
  1881                           _sprintf:	
  1882  0660                     ;incstack = 0
  1883                           	opt	stack 6
  1884                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1885                           ;sprintf@sp stored from wreg
  1886                           	bcf	status, 5	;RP0=0, select bank0
  1887  0660  1283               	bcf	status, 6	;RP1=0, select bank0
  1888  0661  1303               	movwf	(sprintf@sp)
  1889  0662  00E0               	line	545
  1890                           	
  1891                           l1336:	
  1892  0663                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 500: sprint
                                 f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources
                                 \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\
                                 common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\source
                                 s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sour
                                 ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
                                 .00\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  1893                           	movlw	(low(?_sprintf|((0x0)<<8)+01h))&0ffh
  1894  0663  304F               	movwf	(??_sprintf+0)+0
  1895  0664  00D9               	movf	(??_sprintf+0)+0,w
  1896  0665  0859               	movwf	(sprintf@ap)
  1897  0666  00DC               	line	548
  1898                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  1899                           	goto	l1412
  1900  0667  2FD1               	
  1901                           l263:	
  1902  0668                     	line	550
  1903                           	
  1904                           l1338:	
  1905  0668                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 550:   if(c
                                  != '%')
  1906                           		movlw	37
  1907  0668  3025               	xorwf	((sprintf@c)),w
  1908  0669  0662               	btfsc	status,2
  1909  066A  1903               	goto	u691
  1910  066B  2E6D               	goto	u690
  1911  066C  2E6E               u691:
  1912  066D                     	goto	l1344
  1913  066D  2E7A               u690:
  1914  066E                     	line	553
  1915                           	
  1916                           l1340:	
  1917  066E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 552:   {;C:
                                 \Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
                                 + = (c)));
  1918                           	movf	(sprintf@c),w
  1919  066E  0862               	movwf	(??_sprintf+0)+0
  1920  066F  00D9               	movf	(sprintf@sp),w
  1921  0670  0860               	movwf	fsr0
  1922  0671  0084               	movf	(??_sprintf+0)+0,w
  1923  0672  0859               	bcf	status, 7	;select IRP bank0
  1924  0673  1383               	movwf	indf
  1925  0674  0080               	
  1926                           l1342:	
  1927  0675                     	movlw	low(01h)
  1928  0675  3001               	movwf	(??_sprintf+0)+0
  1929  0676  00D9               	movf	(??_sprintf+0)+0,w
  1930  0677  0859               	addwf	(sprintf@sp),f
  1931  0678  07E0               	line	554
  1932                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 554:    con
                                 tinue;
  1933                           	goto	l1412
  1934  0679  2FD1               	line	555
  1935                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 555:   }
  1936                           	
  1937                           l264:	
  1938  067A                     	line	560
  1939                           	
  1940                           l1344:	
  1941  067A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 560:   flag
                                  = 0;
  1942                           	clrf	(sprintf@flag)
  1943  067A  01DD               	line	623
  1944                           	
  1945                           l1346:	
  1946  067B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 623:   if(*
                                 f == '.') {
  1947                           	movf	(sprintf@f),w
  1948  067B  084E               	movwf	fsr0
  1949  067C  0084               	fcall	stringdir
  1950  067D  120A  118A  200D  120A  118A  	xorlw	02Eh
  1951  0682  3A2E               	skipz
  1952  0683  1D03               	goto	u701
  1953  0684  2E86               	goto	u700
  1954  0685  2E87               u701:
  1955  0686                     	goto	l1358
  1956  0686  2EBF               u700:
  1957  0687                     	line	625
  1958                           	
  1959                           l1348:	
  1960  0687                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 625:    f++
                                 ;
  1961                           	movlw	low(01h)
  1962  0687  3001               	movwf	(??_sprintf+0)+0
  1963  0688  00D9               	movf	(??_sprintf+0)+0,w
  1964  0689  0859               	addwf	(sprintf@f),f
  1965  068A  07CE               	line	640
  1966                           	
  1967                           l1350:	
  1968  068B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 639:    {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 640:     prec
                                  = 0;
  1969                           	clrf	(sprintf@prec)
  1970  068B  01E1               	line	641
  1971                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 641:     wh
                                 ile(isdigit((unsigned)*f))
  1972                           	goto	l1356
  1973  068C  2EAD               	
  1974                           l267:	
  1975  068D                     	line	642
  1976                           	
  1977                           l1352:	
  1978  068D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 642:      p
                                 rec = prec*10 + *f++ - '0';
  1979                           	bcf	status, 5	;RP0=0, select bank0
  1980  068D  1283               	bcf	status, 6	;RP1=0, select bank0
  1981  068E  1303               	movf	(sprintf@f),w
  1982  068F  084E               	movwf	fsr0
  1983  0690  0084               	fcall	stringdir
  1984  0691  120A  118A  200D  120A  118A  	movwf	(??_sprintf+0)+0
  1985  0696  00D9               	movlw	low(0Ah)
  1986  0697  300A               	movwf	(??_sprintf+1)+0
  1987  0698  00DA               	movf	(??_sprintf+1)+0,w
  1988  0699  085A               	movwf	(___bmul@multiplicand)
  1989  069A  00F0               	movf	(sprintf@prec),w
  1990  069B  0861               	fcall	___bmul
  1991  069C  120A  118A  2344  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1992  06A1  1283               	bcf	status, 6	;RP1=0, select bank0
  1993  06A2  1303               	addwf	(??_sprintf+0)+0,w
  1994  06A3  0759               	addlw	-48
  1995  06A4  3ED0               	movwf	(??_sprintf+2)+0
  1996  06A5  00DB               	movf	(??_sprintf+2)+0,w
  1997  06A6  085B               	movwf	(sprintf@prec)
  1998  06A7  00E1               	
  1999                           l1354:	
  2000  06A8                     	movlw	low(01h)
  2001  06A8  3001               	movwf	(??_sprintf+0)+0
  2002  06A9  00D9               	movf	(??_sprintf+0)+0,w
  2003  06AA  0859               	addwf	(sprintf@f),f
  2004  06AB  07CE               	goto	l1356
  2005  06AC  2EAD               	
  2006                           l266:	
  2007  06AD                     	line	641
  2008                           	
  2009                           l1356:	
  2010  06AD                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 641:     wh
                                 ile(isdigit((unsigned)*f))
  2011                           	movf	(sprintf@f),w
  2012  06AD  084E               	movwf	fsr0
  2013  06AE  0084               	fcall	stringdir
  2014  06AF  120A  118A  200D  120A  118A  	fcall	_isdigit
  2015  06B4  120A  118A  231A  120A  118A  	btfsc	status,0
  2016  06B9  1803               	goto	u711
  2017  06BA  2EBC               	goto	u710
  2018  06BB  2EBD               u711:
  2019  06BC                     	goto	l1352
  2020  06BC  2E8D               u710:
  2021  06BD                     	goto	l1362
  2022  06BD  2EC9               	
  2023                           l268:	
  2024  06BE                     	line	644
  2025                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 643:    };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 644:   } else
                                  {
  2026                           	goto	l1362
  2027  06BE  2EC9               	
  2028                           l265:	
  2029  06BF                     	line	645
  2030                           	
  2031                           l1358:	
  2032  06BF                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 645:    pre
                                 c = 0;
  2033                           	bcf	status, 5	;RP0=0, select bank0
  2034  06BF  1283               	bcf	status, 6	;RP1=0, select bank0
  2035  06C0  1303               	clrf	(sprintf@prec)
  2036  06C1  01E1               	goto	l1362
  2037  06C2  2EC9               	line	649
  2038                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 649:   }
  2039                           	
  2040                           l269:	
  2041  06C3                     	line	654
  2042                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 654:   swit
                                 ch(c = *f++) {
  2043                           	goto	l1362
  2044  06C3  2EC9               	line	656
  2045                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 656:   case
                                  0:
  2046                           	
  2047                           l271:	
  2048  06C4                     	line	657
  2049                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 657:    got
                                 o alldone;
  2050                           	goto	l1414
  2051  06C4  2FE5               	line	716
  2052                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 716:   case
                                  'd':
  2053                           	
  2054                           l273:	
  2055  06C5                     	goto	l1364
  2056  06C5  2EE8               	line	717
  2057                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 717:   case
                                  'i':
  2058                           	
  2059                           l274:	
  2060  06C6                     	line	718
  2061                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 718:    bre
                                 ak;
  2062                           	goto	l1364
  2063  06C6  2EE8               	line	821
  2064                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 821:   defa
                                 ult:
  2065                           	
  2066                           l276:	
  2067  06C7                     	line	832
  2068                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 832:    con
                                 tinue;
  2069                           	goto	l1412
  2070  06C7  2FD1               	line	841
  2071                           	
  2072                           l1360:	
  2073  06C8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 841:   }
  2074                           	goto	l1364
  2075  06C8  2EE8               	
  2076                           l270:	
  2077  06C9                     	
  2078                           l1362:	
  2079  06C9                     	movlw	01h
  2080  06C9  3001               	bcf	status, 5	;RP0=0, select bank0
  2081  06CA  1283               	bcf	status, 6	;RP1=0, select bank0
  2082  06CB  1303               	addwf	(sprintf@f),f
  2083  06CC  07CE               	movlw	-01h
  2084  06CD  30FF               	addwf	(sprintf@f),w
  2085  06CE  074E               	movwf	fsr0
  2086  06CF  0084               	fcall	stringdir
  2087  06D0  120A  118A  200D  120A  118A  	movwf	(sprintf@c)
  2088  06D5  00E2               	movwf	(??_sprintf+0)+0
  2089  06D6  00D9               	clrf	(??_sprintf+0)+0+1
  2090  06D7  01DA               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2091                           ; Switch size 1, requested type "space"
  2092                           ; Number of cases is 1, Range of values is 0 to 0
  2093                           ; switch strategies available:
  2094                           ; Name         Instructions Cycles
  2095                           ; simple_byte            4     3 (average)
  2096                           ; direct_byte           11     8 (fixed)
  2097                           ; jumptable            260     6 (fixed)
  2098                           ;	Chosen strategy is simple_byte
  2099                           
  2100                           	movf 1+(??_sprintf+0)+0,w
  2101  06D8  085A               	opt asmopt_push
  2102                           	opt asmopt_off
  2103                           	xorlw	0^0	; case 0
  2104  06D9  3A00               	skipnz
  2105  06DA  1903               	goto	l1508
  2106  06DB  2EDD               	goto	l1412
  2107  06DC  2FD1               	opt asmopt_pop
  2108                           	
  2109                           l1508:	
  2110  06DD                     ; Switch size 1, requested type "space"
  2111                           ; Number of cases is 3, Range of values is 0 to 105
  2112                           ; switch strategies available:
  2113                           ; Name         Instructions Cycles
  2114                           ; simple_byte           10     6 (average)
  2115                           ; jumptable            260     6 (fixed)
  2116                           ;	Chosen strategy is simple_byte
  2117                           
  2118                           	movf 0+(??_sprintf+0)+0,w
  2119  06DD  0859               	opt asmopt_push
  2120                           	opt asmopt_off
  2121                           	xorlw	0^0	; case 0
  2122  06DE  3A00               	skipnz
  2123  06DF  1903               	goto	l1414
  2124  06E0  2FE5               	xorlw	100^0	; case 100
  2125  06E1  3A64               	skipnz
  2126  06E2  1903               	goto	l1364
  2127  06E3  2EE8               	xorlw	105^100	; case 105
  2128  06E4  3A0D               	skipnz
  2129  06E5  1903               	goto	l1364
  2130  06E6  2EE8               	goto	l1412
  2131  06E7  2FD1               	opt asmopt_pop
  2132                           
  2133                           	
  2134                           l275:	
  2135  06E8                     	line	1278
  2136                           	
  2137                           l1364:	
  2138  06E8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1272:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1278:     val
                                  = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2139                           	movf	(sprintf@ap),w
  2140  06E8  085C               	movwf	fsr0
  2141  06E9  0084               	bcf	status, 7	;select IRP bank0
  2142  06EA  1383               	movf	indf,w
  2143  06EB  0800               	movwf	(sprintf@val)
  2144  06EC  00DE               	incf	fsr0,f
  2145  06ED  0A84               	movf	indf,w
  2146  06EE  0800               	movwf	(sprintf@val+1)
  2147  06EF  00DF               	
  2148                           l1366:	
  2149  06F0                     	movlw	low(02h)
  2150  06F0  3002               	movwf	(??_sprintf+0)+0
  2151  06F1  00D9               	movf	(??_sprintf+0)+0,w
  2152  06F2  0859               	addwf	(sprintf@ap),f
  2153  06F3  07DC               	line	1280
  2154                           	
  2155                           l1368:	
  2156  06F4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1280:    if
                                 ((int)val < 0) {
  2157                           	btfss	(sprintf@val+1),7
  2158  06F4  1FDF               	goto	u721
  2159  06F5  2EF7               	goto	u720
  2160  06F6  2EF8               u721:
  2161  06F7                     	goto	l1374
  2162  06F7  2F02               u720:
  2163  06F8                     	line	1281
  2164                           	
  2165                           l1370:	
  2166  06F8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1281:     f
                                 lag |= 0x03;
  2167                           	movlw	low(03h)
  2168  06F8  3003               	movwf	(??_sprintf+0)+0
  2169  06F9  00D9               	movf	(??_sprintf+0)+0,w
  2170  06FA  0859               	iorwf	(sprintf@flag),f
  2171  06FB  04DD               	line	1282
  2172                           	
  2173                           l1372:	
  2174  06FC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1282:     v
                                 al = -val;
  2175                           	comf	(sprintf@val),f
  2176  06FC  09DE               	comf	(sprintf@val+1),f
  2177  06FD  09DF               	incf	(sprintf@val),f
  2178  06FE  0ADE               	skipnz
  2179  06FF  1903               	incf	(sprintf@val+1),f
  2180  0700  0ADF               	goto	l1374
  2181  0701  2F02               	line	1283
  2182                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1283:    }

  2183                           	
  2184                           l277:	
  2185  0702                     	line	1309
  2186                           	
  2187                           l1374:	
  2188  0702                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1285:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1309:   if(pr
                                 ec == 0 && val == 0)
  2189                           	movf	((sprintf@prec)),w
  2190  0702  0861               	btfss	status,2
  2191  0703  1D03               	goto	u731
  2192  0704  2F06               	goto	u730
  2193  0705  2F07               u731:
  2194  0706                     	goto	l1380
  2195  0706  2F12               u730:
  2196  0707                     	
  2197                           l1376:	
  2198  0707                     	movf	((sprintf@val)),w
  2199  0707  085E               iorwf	((sprintf@val+1)),w
  2200  0708  045F               	btfss	status,2
  2201  0709  1D03               	goto	u741
  2202  070A  2F0C               	goto	u740
  2203  070B  2F0D               u741:
  2204  070C                     	goto	l1380
  2205  070C  2F12               u740:
  2206  070D                     	line	1310
  2207                           	
  2208                           l1378:	
  2209  070D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1310:    pr
                                 ec++;
  2210                           	movlw	low(01h)
  2211  070D  3001               	movwf	(??_sprintf+0)+0
  2212  070E  00D9               	movf	(??_sprintf+0)+0,w
  2213  070F  0859               	addwf	(sprintf@prec),f
  2214  0710  07E1               	goto	l1380
  2215  0711  2F12               	
  2216                           l278:	
  2217  0712                     	line	1324
  2218                           	
  2219                           l1380:	
  2220  0712                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1324:    fo
                                 r(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2221                           	clrf	(sprintf@c)
  2222  0712  01E2               	incf	(sprintf@c),f
  2223  0713  0AE2               		movlw	5
  2224  0714  3005               	xorwf	((sprintf@c)),w
  2225  0715  0662               	btfss	status,2
  2226  0716  1D03               	goto	u751
  2227  0717  2F19               	goto	u750
  2228  0718  2F1A               u751:
  2229  0719                     	goto	l1384
  2230  0719  2F1C               u750:
  2231  071A                     	goto	l1390
  2232  071A  2F44               	
  2233                           l1382:	
  2234  071B                     	goto	l1390
  2235  071B  2F44               	
  2236                           l279:	
  2237  071C                     	line	1325
  2238                           	
  2239                           l1384:	
  2240  071C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1325:     i
                                 f(val < dpowers[c])
  2241                           	movf	(sprintf@c),w
  2242  071C  0862               	movwf	(??_sprintf+0)+0
  2243  071D  00D9               	addwf	(??_sprintf+0)+0,w
  2244  071E  0759               	addlw	low((((_dpowers)-__stringbase)|8000h))
  2245  071F  3E01               	movwf	fsr0
  2246  0720  0084               	fcall	stringdir
  2247  0721  120A  118A  200D  120A  118A  	movwf	(??_sprintf+1)+0
  2248  0726  00DA               	fcall	stringdir
  2249  0727  120A  118A  200D  120A  118A  	movwf	(??_sprintf+1)+0+1
  2250  072C  00DB               	movf	1+(??_sprintf+1)+0,w
  2251  072D  085B               	subwf	(sprintf@val+1),w
  2252  072E  025F               	skipz
  2253  072F  1D03               	goto	u765
  2254  0730  2F33               	movf	0+(??_sprintf+1)+0,w
  2255  0731  085A               	subwf	(sprintf@val),w
  2256  0732  025E               u765:
  2257  0733                     	skipnc
  2258  0733  1803               	goto	u761
  2259  0734  2F36               	goto	u760
  2260  0735  2F37               u761:
  2261  0736                     	goto	l1388
  2262  0736  2F39               u760:
  2263  0737                     	goto	l1390
  2264  0737  2F44               	line	1326
  2265                           	
  2266                           l1386:	
  2267  0738                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1326:      
                                 break;
  2268                           	goto	l1390
  2269  0738  2F44               	
  2270                           l281:	
  2271  0739                     	
  2272                           l1388:	
  2273  0739                     	movlw	low(01h)
  2274  0739  3001               	movwf	(??_sprintf+0)+0
  2275  073A  00D9               	movf	(??_sprintf+0)+0,w
  2276  073B  0859               	addwf	(sprintf@c),f
  2277  073C  07E2               		movlw	5
  2278  073D  3005               	xorwf	((sprintf@c)),w
  2279  073E  0662               	btfss	status,2
  2280  073F  1D03               	goto	u771
  2281  0740  2F42               	goto	u770
  2282  0741  2F43               u771:
  2283  0742                     	goto	l1384
  2284  0742  2F1C               u770:
  2285  0743                     	goto	l1390
  2286  0743  2F44               	
  2287                           l280:	
  2288  0744                     	line	1358
  2289                           	
  2290                           l1390:	
  2291  0744                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1358:   if(
                                 c < prec)
  2292                           	movf	(sprintf@prec),w
  2293  0744  0861               	movwf	(??_sprintf+0)+0
  2294  0745  00D9               	clrf	(??_sprintf+0)+0+1
  2295  0746  01DA               	btfsc	(??_sprintf+0)+0,7
  2296  0747  1BD9               	decf	(??_sprintf+0)+0+1,f
  2297  0748  03DA               	movf	1+(??_sprintf+0)+0,w
  2298  0749  085A               	xorlw	80h
  2299  074A  3A80               	sublw	080h
  2300  074B  3C80               	skipz
  2301  074C  1D03               	goto	u785
  2302  074D  2F50               	movf	0+(??_sprintf+0)+0,w
  2303  074E  0859               	subwf	(sprintf@c),w
  2304  074F  0262               u785:
  2305  0750                     
  2306                           	skipnc
  2307  0750  1803               	goto	u781
  2308  0751  2F53               	goto	u780
  2309  0752  2F54               u781:
  2310  0753                     	goto	l1394
  2311  0753  2F5B               u780:
  2312  0754                     	line	1359
  2313                           	
  2314                           l1392:	
  2315  0754                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1359:    c 
                                 = prec;
  2316                           	bcf	status, 5	;RP0=0, select bank0
  2317  0754  1283               	bcf	status, 6	;RP1=0, select bank0
  2318  0755  1303               	movf	(sprintf@prec),w
  2319  0756  0861               	movwf	(??_sprintf+0)+0
  2320  0757  00D9               	movf	(??_sprintf+0)+0,w
  2321  0758  0859               	movwf	(sprintf@c)
  2322  0759  00E2               	goto	l1398
  2323  075A  2F77               	line	1360
  2324                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1360:   els
                                 e if(prec < c)
  2325                           	
  2326                           l282:	
  2327  075B                     	
  2328                           l1394:	
  2329  075B                     	bcf	status, 5	;RP0=0, select bank0
  2330  075B  1283               	bcf	status, 6	;RP1=0, select bank0
  2331  075C  1303               	movf	(sprintf@prec),w
  2332  075D  0861               	movwf	(??_sprintf+0)+0
  2333  075E  00D9               	clrf	(??_sprintf+0)+0+1
  2334  075F  01DA               	btfsc	(??_sprintf+0)+0,7
  2335  0760  1BD9               	decf	(??_sprintf+0)+0+1,f
  2336  0761  03DA               	movf	1+(??_sprintf+0)+0,w
  2337  0762  085A               	xorlw	80h
  2338  0763  3A80               	movwf	(??_sprintf+2)+0
  2339  0764  00DB               	movlw	80h
  2340  0765  3080               	subwf	(??_sprintf+2)+0,w
  2341  0766  025B               	skipz
  2342  0767  1D03               	goto	u795
  2343  0768  2F6B               	movf	(sprintf@c),w
  2344  0769  0862               	subwf	0+(??_sprintf+0)+0,w
  2345  076A  0259               u795:
  2346  076B                     
  2347                           	skipnc
  2348  076B  1803               	goto	u791
  2349  076C  2F6E               	goto	u790
  2350  076D  2F6F               u791:
  2351  076E                     	goto	l1398
  2352  076E  2F77               u790:
  2353  076F                     	line	1361
  2354                           	
  2355                           l1396:	
  2356  076F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1361:    pr
                                 ec = c;
  2357                           	bcf	status, 5	;RP0=0, select bank0
  2358  076F  1283               	bcf	status, 6	;RP1=0, select bank0
  2359  0770  1303               	movf	(sprintf@c),w
  2360  0771  0862               	movwf	(??_sprintf+0)+0
  2361  0772  00D9               	movf	(??_sprintf+0)+0,w
  2362  0773  0859               	movwf	(sprintf@prec)
  2363  0774  00E1               	goto	l1398
  2364  0775  2F77               	
  2365                           l284:	
  2366  0776                     	goto	l1398
  2367  0776  2F77               	
  2368                           l283:	
  2369  0777                     	line	1457
  2370                           	
  2371                           l1398:	
  2372  0777                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1441:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1457:    if(f
                                 lag & 0x03)
  2373                           	bcf	status, 5	;RP0=0, select bank0
  2374  0777  1283               	bcf	status, 6	;RP1=0, select bank0
  2375  0778  1303               	movf	(sprintf@flag),w
  2376  0779  085D               	andlw	03h
  2377  077A  3903               	btfsc	status,2
  2378  077B  1903               	goto	u801
  2379  077C  2F7E               	goto	u800
  2380  077D  2F7F               u801:
  2381  077E                     	goto	l1410
  2382  077E  2FC6               u800:
  2383  077F                     	line	1458
  2384                           	
  2385                           l1400:	
  2386  077F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1458:     (
                                 (*sp++ = ('-')));
  2387                           	movlw	low(02Dh)
  2388  077F  302D               	movwf	(??_sprintf+0)+0
  2389  0780  00D9               	movf	(sprintf@sp),w
  2390  0781  0860               	movwf	fsr0
  2391  0782  0084               	movf	(??_sprintf+0)+0,w
  2392  0783  0859               	bcf	status, 7	;select IRP bank0
  2393  0784  1383               	movwf	indf
  2394  0785  0080               	
  2395                           l1402:	
  2396  0786                     	movlw	low(01h)
  2397  0786  3001               	movwf	(??_sprintf+0)+0
  2398  0787  00D9               	movf	(??_sprintf+0)+0,w
  2399  0788  0859               	addwf	(sprintf@sp),f
  2400  0789  07E0               	goto	l1410
  2401  078A  2FC6               	
  2402                           l285:	
  2403  078B                     	line	1493
  2404                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1488:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   while
                                 (prec--) {
  2405                           	goto	l1410
  2406  078B  2FC6               	
  2407                           l287:	
  2408  078C                     	line	1508
  2409                           	
  2410                           l1404:	
  2411  078C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1497:    {;
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1508:     c 
                                 = (val / dpowers[prec]) % 10 + '0';
  2412                           	movlw	0Ah
  2413  078C  300A               	movwf	(___lwmod@divisor)
  2414  078D  00F8               	movlw	0
  2415  078E  3000               	movwf	((___lwmod@divisor))+1
  2416  078F  00F9               	movf	(sprintf@prec),w
  2417  0790  0861               	movwf	(??_sprintf+0)+0
  2418  0791  00D9               	addwf	(??_sprintf+0)+0,w
  2419  0792  0759               	addlw	low((((_dpowers)-__stringbase)|8000h))
  2420  0793  3E01               	movwf	fsr0
  2421  0794  0084               	fcall	stringdir
  2422  0795  120A  118A  200D  120A  118A  	movwf	(___lwdiv@divisor)
  2423  079A  00F0               	fcall	stringdir
  2424  079B  120A  118A  200D  120A  118A  	movwf	(___lwdiv@divisor+1)
  2425  07A0  00F1               	movf	(sprintf@val+1),w
  2426  07A1  085F               	movwf	(___lwdiv@dividend+1)
  2427  07A2  00F3               	movf	(sprintf@val),w
  2428  07A3  085E               	movwf	(___lwdiv@dividend)
  2429  07A4  00F2               	fcall	___lwdiv
  2430  07A5  120A  118A  24E2  120A  118A  	movf	(1+(?___lwdiv)),w
  2431  07AA  0871               	movwf	(___lwmod@dividend+1)
  2432  07AB  00FB               	movf	(0+(?___lwdiv)),w
  2433  07AC  0870               	movwf	(___lwmod@dividend)
  2434  07AD  00FA               	fcall	___lwmod
  2435  07AE  120A  118A  245D  120A  118A  	movf	(0+(?___lwmod)),w
  2436  07B3  0878               	addlw	030h
  2437  07B4  3E30               	bcf	status, 5	;RP0=0, select bank0
  2438  07B5  1283               	bcf	status, 6	;RP1=0, select bank0
  2439  07B6  1303               	movwf	(??_sprintf+1)+0
  2440  07B7  00DA               	movf	(??_sprintf+1)+0,w
  2441  07B8  085A               	movwf	(sprintf@c)
  2442  07B9  00E2               	line	1543
  2443                           	
  2444                           l1406:	
  2445  07BA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1542:    };
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1543:    ((*
                                 sp++ = (c)));
  2446                           	movf	(sprintf@c),w
  2447  07BA  0862               	movwf	(??_sprintf+0)+0
  2448  07BB  00D9               	movf	(sprintf@sp),w
  2449  07BC  0860               	movwf	fsr0
  2450  07BD  0084               	movf	(??_sprintf+0)+0,w
  2451  07BE  0859               	bcf	status, 7	;select IRP bank0
  2452  07BF  1383               	movwf	indf
  2453  07C0  0080               	
  2454                           l1408:	
  2455  07C1                     	movlw	low(01h)
  2456  07C1  3001               	movwf	(??_sprintf+0)+0
  2457  07C2  00D9               	movf	(??_sprintf+0)+0,w
  2458  07C3  0859               	addwf	(sprintf@sp),f
  2459  07C4  07E0               	goto	l1410
  2460  07C5  2FC6               	line	1544
  2461                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1544:   }
  2462                           	
  2463                           l286:	
  2464  07C6                     	line	1493
  2465                           	
  2466                           l1410:	
  2467  07C6                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  2468                           	movlw	low(-1)
  2469  07C6  30FF               	movwf	(??_sprintf+0)+0
  2470  07C7  00D9               	movf	(??_sprintf+0)+0,w
  2471  07C8  0859               	addwf	(sprintf@prec),f
  2472  07C9  07E1               		incf	(((sprintf@prec))),w
  2473  07CA  0A61               	btfss	status,2
  2474  07CB  1D03               	goto	u811
  2475  07CC  2FCE               	goto	u810
  2476  07CD  2FCF               u811:
  2477  07CE                     	goto	l1404
  2478  07CE  2F8C               u810:
  2479  07CF                     	goto	l1412
  2480  07CF  2FD1               	
  2481                           l288:	
  2482  07D0                     	goto	l1412
  2483  07D0  2FD1               	line	1552
  2484                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1552:  }
  2485                           	
  2486                           l262:	
  2487  07D1                     	line	548
  2488                           	
  2489                           l1412:	
  2490  07D1                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  2491                           	movlw	01h
  2492  07D1  3001               	addwf	(sprintf@f),f
  2493  07D2  07CE               	movlw	-01h
  2494  07D3  30FF               	addwf	(sprintf@f),w
  2495  07D4  074E               	movwf	fsr0
  2496  07D5  0084               	fcall	stringdir
  2497  07D6  120A  118A  200D  120A  118A  	movwf	(??_sprintf+0)+0
  2498  07DB  00D9               	movf	(??_sprintf+0)+0,w
  2499  07DC  0859               	movwf	(sprintf@c)
  2500  07DD  00E2               	movf	(((sprintf@c))),w
  2501  07DE  0862               	btfss	status,2
  2502  07DF  1D03               	goto	u821
  2503  07E0  2FE2               	goto	u820
  2504  07E1  2FE3               u821:
  2505  07E2                     	goto	l1338
  2506  07E2  2E68               u820:
  2507  07E3                     	goto	l1414
  2508  07E3  2FE5               	
  2509                           l289:	
  2510  07E4                     	goto	l1414
  2511  07E4  2FE5               	line	1554
  2512                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1554: alldo
                                 ne:
  2513                           	
  2514                           l272:	
  2515  07E5                     	line	1557
  2516                           	
  2517                           l1414:	
  2518  07E5                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1557:  *sp 
                                 = 0;
  2519                           	movf	(sprintf@sp),w
  2520  07E5  0860               	movwf	fsr0
  2521  07E6  0084               	bcf	status, 7	;select IRP bank0
  2522  07E7  1383               	clrf	indf
  2523  07E8  0180               	goto	l290
  2524  07E9  2FEA               	line	1559
  2525                           	
  2526                           l1416:	
  2527  07EA                     	line	1560
  2528                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1559:  retu
                                 rn 0;;	Return value of _sprintf is never used
  2529                           	
  2530                           l290:	
  2531  07EA                     	return
  2532  07EA  0008               	opt stack 0
  2533                           GLOBAL	__end_of_sprintf
  2534                           	__end_of_sprintf:
  2535  07EB                     	signat	_sprintf,4698
  2536                           	global	_isdigit
  2537                           
  2538 ;; *************** function _isdigit *****************
  2539 ;; Defined at:
  2540 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\isdigit.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;  c               1    wreg     unsigned char 
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;  c               1    1[COMMON] unsigned char 
  2545 ;; Return value:  Size  Location     Type
  2546 ;;		None               void
  2547 ;; Registers used:
  2548 ;;		wreg, status,2, status,0
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2554 ;;      Params:         0       0       0       0       0
  2555 ;;      Locals:         2       0       0       0       0
  2556 ;;      Temps:          0       0       0       0       0
  2557 ;;      Totals:         2       0       0       0       0
  2558 ;;Total ram usage:        2 bytes
  2559 ;; Hardware stack levels used:    1
  2560 ;; This function calls:
  2561 ;;		Nothing
  2562 ;; This function is called by:
  2563 ;;		_sprintf
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           psect	text2,local,class=CODE,delta=2,merge=1,group=2
  2567                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\isdigit.c"
  2568                           	line	8
  2569                           global __ptext2
  2570                           __ptext2:	;psect for function _isdigit
  2571  031A                     psect	text2
  2572                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\isdigit.c"
  2573                           	line	8
  2574                           	global	__size_of_isdigit
  2575                           	__size_of_isdigit	equ	__end_of_isdigit-_isdigit
  2576  0014                     	
  2577                           _isdigit:	
  2578  031A                     ;incstack = 0
  2579                           	opt	stack 6
  2580                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2581                           ;isdigit@c stored from wreg
  2582                           	movwf	(isdigit@c)
  2583  031A  00F1               	line	14
  2584                           	
  2585                           l1228:	
  2586  031B                     	clrf	(_isdigit$828)
  2587  031B  01F0               	
  2588                           l1230:	
  2589  031C                     	movlw	low(03Ah)
  2590  031C  303A               	subwf	(isdigit@c),w
  2591  031D  0271               	skipnc
  2592  031E  1803               	goto	u491
  2593  031F  2B21               	goto	u490
  2594  0320  2B22               u491:
  2595  0321                     	goto	l1236
  2596  0321  2B2B               u490:
  2597  0322                     	
  2598                           l1232:	
  2599  0322                     	movlw	low(030h)
  2600  0322  3030               	subwf	(isdigit@c),w
  2601  0323  0271               	skipc
  2602  0324  1C03               	goto	u501
  2603  0325  2B27               	goto	u500
  2604  0326  2B28               u501:
  2605  0327                     	goto	l1236
  2606  0327  2B2B               u500:
  2607  0328                     	
  2608                           l1234:	
  2609  0328                     	clrf	(_isdigit$828)
  2610  0328  01F0               	incf	(_isdigit$828),f
  2611  0329  0AF0               	goto	l1236
  2612  032A  2B2B               	
  2613                           l721:	
  2614  032B                     	
  2615                           l1236:	
  2616  032B                     	rrf	(_isdigit$828),w
  2617  032B  0C70               	
  2618                           	goto	l722
  2619  032C  2B2D               	
  2620                           l1238:	
  2621  032D                     	line	15
  2622                           	
  2623                           l722:	
  2624  032D                     	return
  2625  032D  0008               	opt stack 0
  2626                           GLOBAL	__end_of_isdigit
  2627                           	__end_of_isdigit:
  2628  032E                     	signat	_isdigit,4216
  2629                           	global	___lwmod
  2630                           
  2631 ;; *************** function ___lwmod *****************
  2632 ;; Defined at:
  2633 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;  divisor         2    8[COMMON] unsigned int 
  2636 ;;  dividend        2   10[COMMON] unsigned int 
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;  counter         1   13[COMMON] unsigned char 
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  2    8[COMMON] unsigned int 
  2641 ;; Registers used:
  2642 ;;		wreg, status,2, status,0
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2648 ;;      Params:         4       0       0       0       0
  2649 ;;      Locals:         1       0       0       0       0
  2650 ;;      Temps:          1       0       0       0       0
  2651 ;;      Totals:         6       0       0       0       0
  2652 ;;Total ram usage:        6 bytes
  2653 ;; Hardware stack levels used:    1
  2654 ;; This function calls:
  2655 ;;		Nothing
  2656 ;; This function is called by:
  2657 ;;		_sprintf
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           psect	text3,local,class=CODE,delta=2,merge=1,group=1
  2661                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  2662                           	line	5
  2663                           global __ptext3
  2664                           __ptext3:	;psect for function ___lwmod
  2665  045D                     psect	text3
  2666                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  2667                           	line	5
  2668                           	global	__size_of___lwmod
  2669                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  2670  0041                     	
  2671                           ___lwmod:	
  2672  045D                     ;incstack = 0
  2673                           	opt	stack 6
  2674                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2675                           	line	12
  2676                           	
  2677                           l1280:	
  2678  045D                     	movf	((___lwmod@divisor)),w
  2679  045D  0878               iorwf	((___lwmod@divisor+1)),w
  2680  045E  0479               	btfsc	status,2
  2681  045F  1903               	goto	u601
  2682  0460  2C62               	goto	u600
  2683  0461  2C63               u601:
  2684  0462                     	goto	l1298
  2685  0462  2C98               u600:
  2686  0463                     	line	13
  2687                           	
  2688                           l1282:	
  2689  0463                     	clrf	(___lwmod@counter)
  2690  0463  01FD               	incf	(___lwmod@counter),f
  2691  0464  0AFD               	line	14
  2692                           	goto	l1288
  2693  0465  2C72               	
  2694                           l571:	
  2695  0466                     	line	15
  2696                           	
  2697                           l1284:	
  2698  0466                     	movlw	01h
  2699  0466  3001               	
  2700                           u615:
  2701  0467                     	clrc
  2702  0467  1003               	rlf	(___lwmod@divisor),f
  2703  0468  0DF8               	rlf	(___lwmod@divisor+1),f
  2704  0469  0DF9               	addlw	-1
  2705  046A  3EFF               	skipz
  2706  046B  1D03               	goto	u615
  2707  046C  2C67               	line	16
  2708                           	
  2709                           l1286:	
  2710  046D                     	movlw	low(01h)
  2711  046D  3001               	movwf	(??___lwmod+0)+0
  2712  046E  00FC               	movf	(??___lwmod+0)+0,w
  2713  046F  087C               	addwf	(___lwmod@counter),f
  2714  0470  07FD               	goto	l1288
  2715  0471  2C72               	line	17
  2716                           	
  2717                           l570:	
  2718  0472                     	line	14
  2719                           	
  2720                           l1288:	
  2721  0472                     	btfss	(___lwmod@divisor+1),(15)&7
  2722  0472  1FF9               	goto	u621
  2723  0473  2C75               	goto	u620
  2724  0474  2C76               u621:
  2725  0475                     	goto	l1284
  2726  0475  2C66               u620:
  2727  0476                     	goto	l1290
  2728  0476  2C78               	
  2729                           l572:	
  2730  0477                     	goto	l1290
  2731  0477  2C78               	line	18
  2732                           	
  2733                           l573:	
  2734  0478                     	line	19
  2735                           	
  2736                           l1290:	
  2737  0478                     	movf	(___lwmod@divisor+1),w
  2738  0478  0879               	subwf	(___lwmod@dividend+1),w
  2739  0479  027B               	skipz
  2740  047A  1D03               	goto	u635
  2741  047B  2C7E               	movf	(___lwmod@divisor),w
  2742  047C  0878               	subwf	(___lwmod@dividend),w
  2743  047D  027A               u635:
  2744  047E                     	skipc
  2745  047E  1C03               	goto	u631
  2746  047F  2C81               	goto	u630
  2747  0480  2C82               u631:
  2748  0481                     	goto	l1294
  2749  0481  2C89               u630:
  2750  0482                     	line	20
  2751                           	
  2752                           l1292:	
  2753  0482                     	movf	(___lwmod@divisor),w
  2754  0482  0878               	subwf	(___lwmod@dividend),f
  2755  0483  02FA               	movf	(___lwmod@divisor+1),w
  2756  0484  0879               	skipc
  2757  0485  1C03               	decf	(___lwmod@dividend+1),f
  2758  0486  03FB               	subwf	(___lwmod@dividend+1),f
  2759  0487  02FB               	goto	l1294
  2760  0488  2C89               	
  2761                           l574:	
  2762  0489                     	line	21
  2763                           	
  2764                           l1294:	
  2765  0489                     	movlw	01h
  2766  0489  3001               	
  2767                           u645:
  2768  048A                     	clrc
  2769  048A  1003               	rrf	(___lwmod@divisor+1),f
  2770  048B  0CF9               	rrf	(___lwmod@divisor),f
  2771  048C  0CF8               	addlw	-1
  2772  048D  3EFF               	skipz
  2773  048E  1D03               	goto	u645
  2774  048F  2C8A               	line	22
  2775                           	
  2776                           l1296:	
  2777  0490                     	movlw	01h
  2778  0490  3001               	subwf	(___lwmod@counter),f
  2779  0491  02FD               	btfss	status,2
  2780  0492  1D03               	goto	u651
  2781  0493  2C95               	goto	u650
  2782  0494  2C96               u651:
  2783  0495                     	goto	l1290
  2784  0495  2C78               u650:
  2785  0496                     	goto	l1298
  2786  0496  2C98               	
  2787                           l575:	
  2788  0497                     	goto	l1298
  2789  0497  2C98               	line	23
  2790                           	
  2791                           l569:	
  2792  0498                     	line	24
  2793                           	
  2794                           l1298:	
  2795  0498                     	movf	(___lwmod@dividend+1),w
  2796  0498  087B               	movwf	(?___lwmod+1)
  2797  0499  00F9               	movf	(___lwmod@dividend),w
  2798  049A  087A               	movwf	(?___lwmod)
  2799  049B  00F8               	goto	l576
  2800  049C  2C9D               	
  2801                           l1300:	
  2802  049D                     	line	25
  2803                           	
  2804                           l576:	
  2805  049D                     	return
  2806  049D  0008               	opt stack 0
  2807                           GLOBAL	__end_of___lwmod
  2808                           	__end_of___lwmod:
  2809  049E                     	signat	___lwmod,8314
  2810                           	global	___lwdiv
  2811                           
  2812 ;; *************** function ___lwdiv *****************
  2813 ;; Defined at:
  2814 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;  divisor         2    0[COMMON] unsigned int 
  2817 ;;  dividend        2    2[COMMON] unsigned int 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  quotient        2    5[COMMON] unsigned int 
  2820 ;;  counter         1    7[COMMON] unsigned char 
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  2    0[COMMON] unsigned int 
  2823 ;; Registers used:
  2824 ;;		wreg, status,2, status,0
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2830 ;;      Params:         4       0       0       0       0
  2831 ;;      Locals:         3       0       0       0       0
  2832 ;;      Temps:          1       0       0       0       0
  2833 ;;      Totals:         8       0       0       0       0
  2834 ;;Total ram usage:        8 bytes
  2835 ;; Hardware stack levels used:    1
  2836 ;; This function calls:
  2837 ;;		Nothing
  2838 ;; This function is called by:
  2839 ;;		_sprintf
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           psect	text4,local,class=CODE,delta=2,merge=1,group=1
  2843                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  2844                           	line	5
  2845                           global __ptext4
  2846                           __ptext4:	;psect for function ___lwdiv
  2847  04E2                     psect	text4
  2848                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  2849                           	line	5
  2850                           	global	__size_of___lwdiv
  2851                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  2852  004B                     	
  2853                           ___lwdiv:	
  2854  04E2                     ;incstack = 0
  2855                           	opt	stack 6
  2856                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2857                           	line	13
  2858                           	
  2859                           l1254:	
  2860  04E2                     	clrf	(___lwdiv@quotient)
  2861  04E2  01F5               	clrf	(___lwdiv@quotient+1)
  2862  04E3  01F6               	line	14
  2863                           	
  2864                           l1256:	
  2865  04E4                     	movf	((___lwdiv@divisor)),w
  2866  04E4  0870               iorwf	((___lwdiv@divisor+1)),w
  2867  04E5  0471               	btfsc	status,2
  2868  04E6  1903               	goto	u531
  2869  04E7  2CE9               	goto	u530
  2870  04E8  2CEA               u531:
  2871  04E9                     	goto	l1276
  2872  04E9  2D27               u530:
  2873  04EA                     	line	15
  2874                           	
  2875                           l1258:	
  2876  04EA                     	clrf	(___lwdiv@counter)
  2877  04EA  01F7               	incf	(___lwdiv@counter),f
  2878  04EB  0AF7               	line	16
  2879                           	goto	l1264
  2880  04EC  2CF9               	
  2881                           l561:	
  2882  04ED                     	line	17
  2883                           	
  2884                           l1260:	
  2885  04ED                     	movlw	01h
  2886  04ED  3001               	
  2887                           u545:
  2888  04EE                     	clrc
  2889  04EE  1003               	rlf	(___lwdiv@divisor),f
  2890  04EF  0DF0               	rlf	(___lwdiv@divisor+1),f
  2891  04F0  0DF1               	addlw	-1
  2892  04F1  3EFF               	skipz
  2893  04F2  1D03               	goto	u545
  2894  04F3  2CEE               	line	18
  2895                           	
  2896                           l1262:	
  2897  04F4                     	movlw	low(01h)
  2898  04F4  3001               	movwf	(??___lwdiv+0)+0
  2899  04F5  00F4               	movf	(??___lwdiv+0)+0,w
  2900  04F6  0874               	addwf	(___lwdiv@counter),f
  2901  04F7  07F7               	goto	l1264
  2902  04F8  2CF9               	line	19
  2903                           	
  2904                           l560:	
  2905  04F9                     	line	16
  2906                           	
  2907                           l1264:	
  2908  04F9                     	btfss	(___lwdiv@divisor+1),(15)&7
  2909  04F9  1FF1               	goto	u551
  2910  04FA  2CFC               	goto	u550
  2911  04FB  2CFD               u551:
  2912  04FC                     	goto	l1260
  2913  04FC  2CED               u550:
  2914  04FD                     	goto	l1266
  2915  04FD  2CFF               	
  2916                           l562:	
  2917  04FE                     	goto	l1266
  2918  04FE  2CFF               	line	20
  2919                           	
  2920                           l563:	
  2921  04FF                     	line	21
  2922                           	
  2923                           l1266:	
  2924  04FF                     	movlw	01h
  2925  04FF  3001               	
  2926                           u565:
  2927  0500                     	clrc
  2928  0500  1003               	rlf	(___lwdiv@quotient),f
  2929  0501  0DF5               	rlf	(___lwdiv@quotient+1),f
  2930  0502  0DF6               	addlw	-1
  2931  0503  3EFF               	skipz
  2932  0504  1D03               	goto	u565
  2933  0505  2D00               	line	22
  2934                           	movf	(___lwdiv@divisor+1),w
  2935  0506  0871               	subwf	(___lwdiv@dividend+1),w
  2936  0507  0273               	skipz
  2937  0508  1D03               	goto	u575
  2938  0509  2D0C               	movf	(___lwdiv@divisor),w
  2939  050A  0870               	subwf	(___lwdiv@dividend),w
  2940  050B  0272               u575:
  2941  050C                     	skipc
  2942  050C  1C03               	goto	u571
  2943  050D  2D0F               	goto	u570
  2944  050E  2D10               u571:
  2945  050F                     	goto	l1272
  2946  050F  2D18               u570:
  2947  0510                     	line	23
  2948                           	
  2949                           l1268:	
  2950  0510                     	movf	(___lwdiv@divisor),w
  2951  0510  0870               	subwf	(___lwdiv@dividend),f
  2952  0511  02F2               	movf	(___lwdiv@divisor+1),w
  2953  0512  0871               	skipc
  2954  0513  1C03               	decf	(___lwdiv@dividend+1),f
  2955  0514  03F3               	subwf	(___lwdiv@dividend+1),f
  2956  0515  02F3               	line	24
  2957                           	
  2958                           l1270:	
  2959  0516                     	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  2960  0516  1475               	goto	l1272
  2961  0517  2D18               	line	25
  2962                           	
  2963                           l564:	
  2964  0518                     	line	26
  2965                           	
  2966                           l1272:	
  2967  0518                     	movlw	01h
  2968  0518  3001               	
  2969                           u585:
  2970  0519                     	clrc
  2971  0519  1003               	rrf	(___lwdiv@divisor+1),f
  2972  051A  0CF1               	rrf	(___lwdiv@divisor),f
  2973  051B  0CF0               	addlw	-1
  2974  051C  3EFF               	skipz
  2975  051D  1D03               	goto	u585
  2976  051E  2D19               	line	27
  2977                           	
  2978                           l1274:	
  2979  051F                     	movlw	01h
  2980  051F  3001               	subwf	(___lwdiv@counter),f
  2981  0520  02F7               	btfss	status,2
  2982  0521  1D03               	goto	u591
  2983  0522  2D24               	goto	u590
  2984  0523  2D25               u591:
  2985  0524                     	goto	l1266
  2986  0524  2CFF               u590:
  2987  0525                     	goto	l1276
  2988  0525  2D27               	
  2989                           l565:	
  2990  0526                     	goto	l1276
  2991  0526  2D27               	line	28
  2992                           	
  2993                           l559:	
  2994  0527                     	line	29
  2995                           	
  2996                           l1276:	
  2997  0527                     	movf	(___lwdiv@quotient+1),w
  2998  0527  0876               	movwf	(?___lwdiv+1)
  2999  0528  00F1               	movf	(___lwdiv@quotient),w
  3000  0529  0875               	movwf	(?___lwdiv)
  3001  052A  00F0               	goto	l566
  3002  052B  2D2C               	
  3003                           l1278:	
  3004  052C                     	line	30
  3005                           	
  3006                           l566:	
  3007  052C                     	return
  3008  052C  0008               	opt stack 0
  3009                           GLOBAL	__end_of___lwdiv
  3010                           	__end_of___lwdiv:
  3011  052D                     	signat	___lwdiv,8314
  3012                           	global	___bmul
  3013                           
  3014 ;; *************** function ___bmul *****************
  3015 ;; Defined at:
  3016 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;  multiplier      1    wreg     unsigned char 
  3019 ;;  multiplicand    1    0[COMMON] unsigned char 
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;  multiplier      1    3[COMMON] unsigned char 
  3022 ;;  product         1    2[COMMON] unsigned char 
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  1    wreg      unsigned char 
  3025 ;; Registers used:
  3026 ;;		wreg, status,2, status,0
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3032 ;;      Params:         1       0       0       0       0
  3033 ;;      Locals:         2       0       0       0       0
  3034 ;;      Temps:          1       0       0       0       0
  3035 ;;      Totals:         4       0       0       0       0
  3036 ;;Total ram usage:        4 bytes
  3037 ;; Hardware stack levels used:    1
  3038 ;; This function calls:
  3039 ;;		Nothing
  3040 ;; This function is called by:
  3041 ;;		_sprintf
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  3045                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8.c"
  3046                           	line	4
  3047                           global __ptext5
  3048                           __ptext5:	;psect for function ___bmul
  3049  0344                     psect	text5
  3050                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8.c"
  3051                           	line	4
  3052                           	global	__size_of___bmul
  3053                           	__size_of___bmul	equ	__end_of___bmul-___bmul
  3054  0019                     	
  3055                           ___bmul:	
  3056  0344                     ;incstack = 0
  3057                           	opt	stack 6
  3058                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3059                           ;___bmul@multiplier stored from wreg
  3060                           	movwf	(___bmul@multiplier)
  3061  0344  00F3               	line	6
  3062                           	
  3063                           l1240:	
  3064  0345                     	clrf	(___bmul@product)
  3065  0345  01F2               	goto	l1242
  3066  0346  2B47               	line	42
  3067                           	
  3068                           l317:	
  3069  0347                     	line	43
  3070                           	
  3071                           l1242:	
  3072  0347                     	btfss	(___bmul@multiplier),(0)&7
  3073  0347  1C73               	goto	u511
  3074  0348  2B4A               	goto	u510
  3075  0349  2B4B               u511:
  3076  034A                     	goto	l1246
  3077  034A  2B50               u510:
  3078  034B                     	line	44
  3079                           	
  3080                           l1244:	
  3081  034B                     	movf	(___bmul@multiplicand),w
  3082  034B  0870               	movwf	(??___bmul+0)+0
  3083  034C  00F1               	movf	(??___bmul+0)+0,w
  3084  034D  0871               	addwf	(___bmul@product),f
  3085  034E  07F2               	goto	l1246
  3086  034F  2B50               	
  3087                           l318:	
  3088  0350                     	line	45
  3089                           	
  3090                           l1246:	
  3091  0350                     	clrc
  3092  0350  1003               	rlf	(___bmul@multiplicand),f
  3093  0351  0DF0               
  3094                           	line	46
  3095                           	
  3096                           l1248:	
  3097  0352                     	clrc
  3098  0352  1003               	rrf	(___bmul@multiplier),f
  3099  0353  0CF3               
  3100                           	line	47
  3101                           	movf	((___bmul@multiplier)),w
  3102  0354  0873               	btfss	status,2
  3103  0355  1D03               	goto	u521
  3104  0356  2B58               	goto	u520
  3105  0357  2B59               u521:
  3106  0358                     	goto	l1242
  3107  0358  2B47               u520:
  3108  0359                     	goto	l1250
  3109  0359  2B5A               	
  3110                           l319:	
  3111  035A                     	line	50
  3112                           	
  3113                           l1250:	
  3114  035A                     	movf	(___bmul@product),w
  3115  035A  0872               	goto	l320
  3116  035B  2B5C               	
  3117                           l1252:	
  3118  035C                     	line	51
  3119                           	
  3120                           l320:	
  3121  035C                     	return
  3122  035C  0008               	opt stack 0
  3123                           GLOBAL	__end_of___bmul
  3124                           	__end_of___bmul:
  3125  035D                     	signat	___bmul,8313
  3126                           	global	_spiWrite
  3127                           
  3128 ;; *************** function _spiWrite *****************
  3129 ;; Defined at:
  3130 ;;		line 34 in file "SPPPI.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;  dat             1    wreg     unsigned char 
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;  dat             1    0[COMMON] unsigned char 
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  1    wreg      void 
  3137 ;; Registers used:
  3138 ;;		wreg
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3144 ;;      Params:         0       0       0       0       0
  3145 ;;      Locals:         1       0       0       0       0
  3146 ;;      Temps:          0       0       0       0       0
  3147 ;;      Totals:         1       0       0       0       0
  3148 ;;Total ram usage:        1 bytes
  3149 ;; Hardware stack levels used:    1
  3150 ;; This function calls:
  3151 ;;		Nothing
  3152 ;; This function is called by:
  3153 ;;		_main
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3157                           	file	"SPPPI.c"
  3158                           	line	34
  3159                           global __ptext6
  3160                           __ptext6:	;psect for function _spiWrite
  3161  02C8                     psect	text6
  3162                           	file	"SPPPI.c"
  3163                           	line	34
  3164                           	global	__size_of_spiWrite
  3165                           	__size_of_spiWrite	equ	__end_of_spiWrite-_spiWrite
  3166  0006                     	
  3167                           _spiWrite:	
  3168  02C8                     ;incstack = 0
  3169                           	opt	stack 7
  3170                           ; Regs used in _spiWrite: [wreg]
  3171                           ;spiWrite@dat stored from wreg
  3172                           	movwf	(spiWrite@dat)
  3173  02C8  00F0               	line	36
  3174                           	
  3175                           l1302:	
  3176  02C9                     ;SPPPI.c: 34: void spiWrite(char dat);SPPPI.c: 35: {;SPPPI.c: 36:     SSPBUF = dat;
  3177                           	movf	(spiWrite@dat),w
  3178  02C9  0870               	bcf	status, 5	;RP0=0, select bank0
  3179  02CA  1283               	bcf	status, 6	;RP1=0, select bank0
  3180  02CB  1303               	movwf	(19)	;volatile
  3181  02CC  0093               	line	37
  3182                           	
  3183                           l26:	
  3184  02CD                     	return
  3185  02CD  0008               	opt stack 0
  3186                           GLOBAL	__end_of_spiWrite
  3187                           	__end_of_spiWrite:
  3188  02CE                     	signat	_spiWrite,4217
  3189                           	global	_spiRead
  3190                           
  3191 ;; *************** function _spiRead *****************
  3192 ;; Defined at:
  3193 ;;		line 47 in file "SPPPI.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;		None
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;		None
  3198 ;; Return value:  Size  Location     Type
  3199 ;;                  1    wreg      unsigned char 
  3200 ;; Registers used:
  3201 ;;		wreg, status,2, status,0, pclath, cstack
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3207 ;;      Params:         0       0       0       0       0
  3208 ;;      Locals:         0       0       0       0       0
  3209 ;;      Temps:          0       0       0       0       0
  3210 ;;      Totals:         0       0       0       0       0
  3211 ;;Total ram usage:        0 bytes
  3212 ;; Hardware stack levels used:    1
  3213 ;; Hardware stack levels required when called:    1
  3214 ;; This function calls:
  3215 ;;		_spiReceiveWait
  3216 ;; This function is called by:
  3217 ;;		_main
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3221                           	line	47
  3222                           global __ptext7
  3223                           __ptext7:	;psect for function _spiRead
  3224  02DF                     psect	text7
  3225                           	file	"SPPPI.c"
  3226                           	line	47
  3227                           	global	__size_of_spiRead
  3228                           	__size_of_spiRead	equ	__end_of_spiRead-_spiRead
  3229  000A                     	
  3230                           _spiRead:	
  3231  02DF                     ;incstack = 0
  3232                           	opt	stack 6
  3233                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  3234                           	line	49
  3235                           	
  3236                           l1304:	
  3237  02DF                     ;SPPPI.c: 49:     spiReceiveWait();
  3238                           	fcall	_spiReceiveWait
  3239  02DF  120A  118A  22D6  120A  118A  	line	50
  3240                           	
  3241                           l1306:	
  3242  02E4                     ;SPPPI.c: 50:     return(SSPBUF);
  3243                           	bcf	status, 5	;RP0=0, select bank0
  3244  02E4  1283               	bcf	status, 6	;RP1=0, select bank0
  3245  02E5  1303               	movf	(19),w	;volatile
  3246  02E6  0813               	goto	l34
  3247  02E7  2AE8               	
  3248                           l1308:	
  3249  02E8                     	line	51
  3250                           	
  3251                           l34:	
  3252  02E8                     	return
  3253  02E8  0008               	opt stack 0
  3254                           GLOBAL	__end_of_spiRead
  3255                           	__end_of_spiRead:
  3256  02E9                     	signat	_spiRead,89
  3257                           	global	_spiReceiveWait
  3258                           
  3259 ;; *************** function _spiReceiveWait *****************
  3260 ;; Defined at:
  3261 ;;		line 29 in file "SPPPI.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;		None
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;		None
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  1    wreg      void 
  3268 ;; Registers used:
  3269 ;;		None
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3275 ;;      Params:         0       0       0       0       0
  3276 ;;      Locals:         0       0       0       0       0
  3277 ;;      Temps:          0       0       0       0       0
  3278 ;;      Totals:         0       0       0       0       0
  3279 ;;Total ram usage:        0 bytes
  3280 ;; Hardware stack levels used:    1
  3281 ;; This function calls:
  3282 ;;		Nothing
  3283 ;; This function is called by:
  3284 ;;		_spiRead
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3288                           	line	29
  3289                           global __ptext8
  3290                           __ptext8:	;psect for function _spiReceiveWait
  3291  02D6                     psect	text8
  3292                           	file	"SPPPI.c"
  3293                           	line	29
  3294                           	global	__size_of_spiReceiveWait
  3295                           	__size_of_spiReceiveWait	equ	__end_of_spiReceiveWait-_spiReceiveWait
  3296  0009                     	
  3297                           _spiReceiveWait:	
  3298  02D6                     ;incstack = 0
  3299                           	opt	stack 6
  3300                           ; Regs used in _spiReceiveWait: []
  3301                           	line	31
  3302                           	
  3303                           l1200:	
  3304  02D6                     ;SPPPI.c: 31:     while ( !SSPSTATbits.BF );
  3305                           	goto	l20
  3306  02D6  2AD7               	
  3307                           l21:	
  3308  02D7                     	
  3309                           l20:	
  3310  02D7                     	bsf	status, 5	;RP0=1, select bank1
  3311  02D7  1683               	bcf	status, 6	;RP1=0, select bank1
  3312  02D8  1303               	btfss	(148)^080h,0	;volatile
  3313  02D9  1C14               	goto	u481
  3314  02DA  2ADC               	goto	u480
  3315  02DB  2ADD               u481:
  3316  02DC                     	goto	l20
  3317  02DC  2AD7               u480:
  3318  02DD                     	goto	l23
  3319  02DD  2ADE               	
  3320                           l22:	
  3321  02DE                     	line	32
  3322                           	
  3323                           l23:	
  3324  02DE                     	return
  3325  02DE  0008               	opt stack 0
  3326                           GLOBAL	__end_of_spiReceiveWait
  3327                           	__end_of_spiReceiveWait:
  3328  02DF                     	signat	_spiReceiveWait,89
  3329                           	global	_setup
  3330                           
  3331 ;; *************** function _setup *****************
  3332 ;; Defined at:
  3333 ;;		line 115 in file "newmain.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;		None
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;		None
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  1    wreg      void 
  3340 ;; Registers used:
  3341 ;;		wreg, status,2, status,0, pclath, cstack
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3347 ;;      Params:         0       0       0       0       0
  3348 ;;      Locals:         0       0       0       0       0
  3349 ;;      Temps:          0       0       0       0       0
  3350 ;;      Totals:         0       0       0       0       0
  3351 ;;Total ram usage:        0 bytes
  3352 ;; Hardware stack levels used:    1
  3353 ;; Hardware stack levels required when called:    1
  3354 ;; This function calls:
  3355 ;;		_spiInit
  3356 ;; This function is called by:
  3357 ;;		_main
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3361                           	file	"newmain.c"
  3362                           	line	115
  3363                           global __ptext9
  3364                           __ptext9:	;psect for function _setup
  3365  03A0                     psect	text9
  3366                           	file	"newmain.c"
  3367                           	line	115
  3368                           	global	__size_of_setup
  3369                           	__size_of_setup	equ	__end_of_setup-_setup
  3370  002B                     	
  3371                           _setup:	
  3372  03A0                     ;incstack = 0
  3373                           	opt	stack 6
  3374                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  3375                           	line	116
  3376                           	
  3377                           l1310:	
  3378  03A0                     ;newmain.c: 116:     ANSEL = 0;
  3379                           	bsf	status, 5	;RP0=1, select bank3
  3380  03A0  1683               	bsf	status, 6	;RP1=1, select bank3
  3381  03A1  1703               	clrf	(392)^0180h	;volatile
  3382  03A2  0188               	line	117
  3383                           ;newmain.c: 117:     ANSELH = 0;
  3384                           	clrf	(393)^0180h	;volatile
  3385  03A3  0189               	line	118
  3386                           	
  3387                           l1312:	
  3388  03A4                     ;newmain.c: 118:     TRISC2 = 0;
  3389                           	bsf	status, 5	;RP0=1, select bank1
  3390  03A4  1683               	bcf	status, 6	;RP1=0, select bank1
  3391  03A5  1303               	bcf	(1082/8)^080h,(1082)&7	;volatile
  3392  03A6  1107               	line	119
  3393                           ;newmain.c: 119:     TRISD = 0x00;
  3394                           	clrf	(136)^080h	;volatile
  3395  03A7  0188               	line	120
  3396                           ;newmain.c: 120:     TRISB = 0x00;
  3397                           	clrf	(134)^080h	;volatile
  3398  03A8  0186               	line	121
  3399                           	
  3400                           l1314:	
  3401  03A9                     ;newmain.c: 121:     TRISCbits.TRISC0 = 1;
  3402                           	bsf	(135)^080h,0	;volatile
  3403  03A9  1407               	line	122
  3404                           ;newmain.c: 122:     ANSEL = 0;
  3405                           	bsf	status, 5	;RP0=1, select bank3
  3406  03AA  1683               	bsf	status, 6	;RP1=1, select bank3
  3407  03AB  1703               	clrf	(392)^0180h	;volatile
  3408  03AC  0188               	line	123
  3409                           ;newmain.c: 123:     ANSELH = 0;
  3410                           	clrf	(393)^0180h	;volatile
  3411  03AD  0189               	line	124
  3412                           ;newmain.c: 124:     PORTB = 0;
  3413                           	bcf	status, 5	;RP0=0, select bank0
  3414  03AE  1283               	bcf	status, 6	;RP1=0, select bank0
  3415  03AF  1303               	clrf	(6)	;volatile
  3416  03B0  0186               	line	125
  3417                           ;newmain.c: 125:     PORTA = 0;
  3418                           	clrf	(5)	;volatile
  3419  03B1  0185               	line	126
  3420                           ;newmain.c: 126:     PORTD = 0;
  3421                           	clrf	(8)	;volatile
  3422  03B2  0188               	line	127
  3423                           	
  3424                           l1316:	
  3425  03B3                     ;newmain.c: 127:     ANSEL = 0B11111111;
  3426                           	movlw	low(0FFh)
  3427  03B3  30FF               	bsf	status, 5	;RP0=1, select bank3
  3428  03B4  1683               	bsf	status, 6	;RP1=1, select bank3
  3429  03B5  1703               	movwf	(392)^0180h	;volatile
  3430  03B6  0088               	line	128
  3431                           	
  3432                           l1318:	
  3433  03B7                     ;newmain.c: 128:     TRISA = 0B11111111;
  3434                           	movlw	low(0FFh)
  3435  03B7  30FF               	bsf	status, 5	;RP0=1, select bank1
  3436  03B8  1683               	bcf	status, 6	;RP1=0, select bank1
  3437  03B9  1303               	movwf	(133)^080h	;volatile
  3438  03BA  0085               	line	129
  3439                           	
  3440                           l1320:	
  3441  03BB                     ;newmain.c: 129:     PORTCbits.RC2 = 1;
  3442                           	bcf	status, 5	;RP0=0, select bank0
  3443  03BB  1283               	bcf	status, 6	;RP1=0, select bank0
  3444  03BC  1303               	bsf	(7),2	;volatile
  3445  03BD  1507               	line	130
  3446                           	
  3447                           l1322:	
  3448  03BE                     ;newmain.c: 130:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE
                                 _LOW, SPI_IDLE_2_ACTIVE);
  3449                           	clrf	(spiInit@sDataSample)
  3450  03BE  01F0               	clrf	(spiInit@sClockIdle)
  3451  03BF  01F1               	clrf	(spiInit@sTransmitEdge)
  3452  03C0  01F2               	movlw	low(020h)
  3453  03C1  3020               	fcall	_spiInit
  3454  03C2  120A  118A  232E  120A  118A  	line	131
  3455                           	
  3456                           l1324:	
  3457  03C7                     ;newmain.c: 131:     PORTCbits.RC2 = 0;
  3458                           	bcf	status, 5	;RP0=0, select bank0
  3459  03C7  1283               	bcf	status, 6	;RP1=0, select bank0
  3460  03C8  1303               	bcf	(7),2	;volatile
  3461  03C9  1107               	line	132
  3462                           	
  3463                           l121:	
  3464  03CA                     	return
  3465  03CA  0008               	opt stack 0
  3466                           GLOBAL	__end_of_setup
  3467                           	__end_of_setup:
  3468  03CB                     	signat	_setup,89
  3469                           	global	_spiInit
  3470                           
  3471 ;; *************** function _spiInit *****************
  3472 ;; Defined at:
  3473 ;;		line 12 in file "SPPPI.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;  sType           1    wreg     enum E1264
  3476 ;;  sDataSample     1    0[COMMON] enum E1272
  3477 ;;  sClockIdle      1    1[COMMON] enum E1276
  3478 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;  sType           1    3[COMMON] enum E1264
  3481 ;; Return value:  Size  Location     Type
  3482 ;;                  1    wreg      void 
  3483 ;; Registers used:
  3484 ;;		wreg, status,2, status,0
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3490 ;;      Params:         3       0       0       0       0
  3491 ;;      Locals:         1       0       0       0       0
  3492 ;;      Temps:          0       0       0       0       0
  3493 ;;      Totals:         4       0       0       0       0
  3494 ;;Total ram usage:        4 bytes
  3495 ;; Hardware stack levels used:    1
  3496 ;; This function calls:
  3497 ;;		Nothing
  3498 ;; This function is called by:
  3499 ;;		_setup
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3503                           	file	"SPPPI.c"
  3504                           	line	12
  3505                           global __ptext10
  3506                           __ptext10:	;psect for function _spiInit
  3507  032E                     psect	text10
  3508                           	file	"SPPPI.c"
  3509                           	line	12
  3510                           	global	__size_of_spiInit
  3511                           	__size_of_spiInit	equ	__end_of_spiInit-_spiInit
  3512  0016                     	
  3513                           _spiInit:	
  3514  032E                     ;incstack = 0
  3515                           	opt	stack 6
  3516                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  3517                           ;spiInit@sType stored from wreg
  3518                           	movwf	(spiInit@sType)
  3519  032E  00F3               	line	14
  3520                           	
  3521                           l1190:	
  3522  032F                     ;SPPPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle s
                                 ClockIdle, Spi_Transmit_Edge sTransmitEdge);SPPPI.c: 13: {;SPPPI.c: 14:     TRISC5 = 0;

  3523                           	bsf	status, 5	;RP0=1, select bank1
  3524  032F  1683               	bcf	status, 6	;RP1=0, select bank1
  3525  0330  1303               	bcf	(1085/8)^080h,(1085)&7	;volatile
  3526  0331  1287               	line	15
  3527                           ;SPPPI.c: 15:     if(sType & 0b00000100)
  3528                           	btfss	(spiInit@sType),(2)&7
  3529  0332  1D73               	goto	u471
  3530  0333  2B35               	goto	u470
  3531  0334  2B36               u471:
  3532  0335                     	goto	l1196
  3533  0335  2B3A               u470:
  3534  0336                     	line	17
  3535                           	
  3536                           l1192:	
  3537  0336                     ;SPPPI.c: 16:     {;SPPPI.c: 17:         SSPSTAT = sTransmitEdge;
  3538                           	movf	(spiInit@sTransmitEdge),w
  3539  0336  0872               	movwf	(148)^080h	;volatile
  3540  0337  0094               	line	18
  3541                           	
  3542                           l1194:	
  3543  0338                     ;SPPPI.c: 18:         TRISC3 = 1;
  3544                           	bsf	(1083/8)^080h,(1083)&7	;volatile
  3545  0338  1587               	line	19
  3546                           ;SPPPI.c: 19:     }
  3547                           	goto	l16
  3548  0339  2B3E               	line	20
  3549                           ;SPPPI.c: 20:     else
  3550                           	
  3551                           l15:	
  3552  033A                     	line	22
  3553                           	
  3554                           l1196:	
  3555  033A                     ;SPPPI.c: 21:     {;SPPPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  3556                           	movf	(spiInit@sDataSample),w
  3557  033A  0870               	iorwf	(spiInit@sTransmitEdge),w
  3558  033B  0472               	movwf	(148)^080h	;volatile
  3559  033C  0094               	line	23
  3560                           	
  3561                           l1198:	
  3562  033D                     ;SPPPI.c: 23:         TRISC3 = 0;
  3563                           	bcf	(1083/8)^080h,(1083)&7	;volatile
  3564  033D  1187               	line	24
  3565                           ;SPPPI.c: 24:     }
  3566                           	
  3567                           l16:	
  3568  033E                     	line	26
  3569                           ;SPPPI.c: 26:     SSPCON = sType | sClockIdle;
  3570                           	movf	(spiInit@sType),w
  3571  033E  0873               	iorwf	(spiInit@sClockIdle),w
  3572  033F  0471               	bcf	status, 5	;RP0=0, select bank0
  3573  0340  1283               	bcf	status, 6	;RP1=0, select bank0
  3574  0341  1303               	movwf	(20)	;volatile
  3575  0342  0094               	line	27
  3576                           	
  3577                           l17:	
  3578  0343                     	return
  3579  0343  0008               	opt stack 0
  3580                           GLOBAL	__end_of_spiInit
  3581                           	__end_of_spiInit:
  3582  0344                     	signat	_spiInit,16505
  3583                           	global	_lcd_init
  3584                           
  3585 ;; *************** function _lcd_init *****************
  3586 ;; Defined at:
  3587 ;;		line 45 in file "LCD.c"
  3588 ;; Parameters:    Size  Location     Type
  3589 ;;		None
  3590 ;; Auto vars:     Size  Location     Type
  3591 ;;		None
  3592 ;; Return value:  Size  Location     Type
  3593 ;;                  1    wreg      void 
  3594 ;; Registers used:
  3595 ;;		wreg, status,2, status,0, pclath, cstack
  3596 ;; Tracked objects:
  3597 ;;		On entry : 0/0
  3598 ;;		On exit  : 0/0
  3599 ;;		Unchanged: 0/0
  3600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3601 ;;      Params:         0       0       0       0       0
  3602 ;;      Locals:         0       0       0       0       0
  3603 ;;      Temps:          0       0       0       0       0
  3604 ;;      Totals:         0       0       0       0       0
  3605 ;;Total ram usage:        0 bytes
  3606 ;; Hardware stack levels used:    1
  3607 ;; Hardware stack levels required when called:    3
  3608 ;; This function calls:
  3609 ;;		_lcd_cmd
  3610 ;; This function is called by:
  3611 ;;		_main
  3612 ;; This function uses a non-reentrant model
  3613 ;;
  3614                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  3615                           	file	"LCD.c"
  3616                           	line	45
  3617                           global __ptext11
  3618                           __ptext11:	;psect for function _lcd_init
  3619  035D                     psect	text11
  3620                           	file	"LCD.c"
  3621                           	line	45
  3622                           	global	__size_of_lcd_init
  3623                           	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  3624  001F                     	
  3625                           _lcd_init:	
  3626  035D                     ;incstack = 0
  3627                           	opt	stack 4
  3628                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  3629                           	line	47
  3630                           	
  3631                           l1326:	
  3632  035D                     ;LCD.c: 47:     lcd_cmd(0x38);
  3633                           	movlw	low(038h)
  3634  035D  3038               	fcall	_lcd_cmd
  3635  035E  120A  118A  2308  120A  118A  	line	48
  3636                           ;LCD.c: 48:     lcd_cmd(0x0E);
  3637                           	movlw	low(0Eh)
  3638  0363  300E               	fcall	_lcd_cmd
  3639  0364  120A  118A  2308  120A  118A  	line	49
  3640                           ;LCD.c: 49:     lcd_cmd(0x01);
  3641                           	movlw	low(01h)
  3642  0369  3001               	fcall	_lcd_cmd
  3643  036A  120A  118A  2308  120A  118A  	line	50
  3644                           ;LCD.c: 50:     lcd_cmd(0x06);
  3645                           	movlw	low(06h)
  3646  036F  3006               	fcall	_lcd_cmd
  3647  0370  120A  118A  2308  120A  118A  	line	51
  3648                           ;LCD.c: 51:     lcd_cmd(0x80);
  3649                           	movlw	low(080h)
  3650  0375  3080               	fcall	_lcd_cmd
  3651  0376  120A  118A  2308  120A  118A  	line	52
  3652                           	
  3653                           l143:	
  3654  037B                     	return
  3655  037B  0008               	opt stack 0
  3656                           GLOBAL	__end_of_lcd_init
  3657                           	__end_of_lcd_init:
  3658  037C                     	signat	_lcd_init,89
  3659                           	global	_lcd_cmd
  3660                           
  3661 ;; *************** function _lcd_cmd *****************
  3662 ;; Defined at:
  3663 ;;		line 36 in file "LCD.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;  x               1    wreg     unsigned char 
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;  x               1    7[COMMON] unsigned char 
  3668 ;; Return value:  Size  Location     Type
  3669 ;;                  1    wreg      void 
  3670 ;; Registers used:
  3671 ;;		wreg, status,2, status,0, pclath, cstack
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/0
  3674 ;;		On exit  : 0/0
  3675 ;;		Unchanged: 0/0
  3676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3677 ;;      Params:         0       0       0       0       0
  3678 ;;      Locals:         1       0       0       0       0
  3679 ;;      Temps:          0       0       0       0       0
  3680 ;;      Totals:         1       0       0       0       0
  3681 ;;Total ram usage:        1 bytes
  3682 ;; Hardware stack levels used:    1
  3683 ;; Hardware stack levels required when called:    2
  3684 ;; This function calls:
  3685 ;;		_lcd_lat
  3686 ;;		_lcd_ready
  3687 ;; This function is called by:
  3688 ;;		_lcd_init
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  3692                           	line	36
  3693                           global __ptext12
  3694                           __ptext12:	;psect for function _lcd_cmd
  3695  0308                     psect	text12
  3696                           	file	"LCD.c"
  3697                           	line	36
  3698                           	global	__size_of_lcd_cmd
  3699                           	__size_of_lcd_cmd	equ	__end_of_lcd_cmd-_lcd_cmd
  3700  0012                     	
  3701                           _lcd_cmd:	
  3702  0308                     ;incstack = 0
  3703                           	opt	stack 4
  3704                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  3705                           ;lcd_cmd@x stored from wreg
  3706                           	movwf	(lcd_cmd@x)
  3707  0308  00F7               	line	38
  3708                           	
  3709                           l1210:	
  3710  0309                     ;LCD.c: 36: void lcd_cmd(unsigned char x);LCD.c: 37: {;LCD.c: 38:     lcd_ready();
  3711                           	fcall	_lcd_ready
  3712  0309  120A  118A  23CB  120A  118A  	line	39
  3713                           	
  3714                           l1212:	
  3715  030E                     ;LCD.c: 39:     PORTB = x;
  3716                           	movf	(lcd_cmd@x),w
  3717  030E  0877               	bcf	status, 5	;RP0=0, select bank0
  3718  030F  1283               	bcf	status, 6	;RP1=0, select bank0
  3719  0310  1303               	movwf	(6)	;volatile
  3720  0311  0086               	line	40
  3721                           	
  3722                           l1214:	
  3723  0312                     ;LCD.c: 40:     PORTDbits.RD5 = 0;
  3724                           	bcf	(8),5	;volatile
  3725  0312  1288               	line	41
  3726                           	
  3727                           l1216:	
  3728  0313                     ;LCD.c: 41:     PORTDbits.RD6 = 0;
  3729                           	bcf	(8),6	;volatile
  3730  0313  1308               	line	42
  3731                           	
  3732                           l1218:	
  3733  0314                     ;LCD.c: 42:     lcd_lat();
  3734                           	fcall	_lcd_lat
  3735  0314  120A  118A  22F8  120A  118A  	line	43
  3736                           	
  3737                           l140:	
  3738  0319                     	return
  3739  0319  0008               	opt stack 0
  3740                           GLOBAL	__end_of_lcd_cmd
  3741                           	__end_of_lcd_cmd:
  3742  031A                     	signat	_lcd_cmd,4217
  3743                           	global	_lcd_ready
  3744                           
  3745 ;; *************** function _lcd_ready *****************
  3746 ;; Defined at:
  3747 ;;		line 19 in file "LCD.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;		None
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;		None
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  1    wreg      void 
  3754 ;; Registers used:
  3755 ;;		wreg, status,2, status,0, pclath, cstack
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3761 ;;      Params:         0       0       0       0       0
  3762 ;;      Locals:         0       0       0       0       0
  3763 ;;      Temps:          1       0       0       0       0
  3764 ;;      Totals:         1       0       0       0       0
  3765 ;;Total ram usage:        1 bytes
  3766 ;; Hardware stack levels used:    1
  3767 ;; Hardware stack levels required when called:    1
  3768 ;; This function calls:
  3769 ;;		_delay
  3770 ;; This function is called by:
  3771 ;;		_lcd_cmd
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  3775                           	line	19
  3776                           global __ptext13
  3777                           __ptext13:	;psect for function _lcd_ready
  3778  03CB                     psect	text13
  3779                           	file	"LCD.c"
  3780                           	line	19
  3781                           	global	__size_of_lcd_ready
  3782                           	__size_of_lcd_ready	equ	__end_of_lcd_ready-_lcd_ready
  3783  002D                     	
  3784                           _lcd_ready:	
  3785  03CB                     ;incstack = 0
  3786                           	opt	stack 4
  3787                           ; Regs used in _lcd_ready: [wreg+status,2+status,0+pclath+cstack]
  3788                           	line	21
  3789                           	
  3790                           l1168:	
  3791  03CB                     ;LCD.c: 21:     PORTB = 0xFF;
  3792                           	movlw	low(0FFh)
  3793  03CB  30FF               	bcf	status, 5	;RP0=0, select bank0
  3794  03CC  1283               	bcf	status, 6	;RP1=0, select bank0
  3795  03CD  1303               	movwf	(6)	;volatile
  3796  03CE  0086               	line	22
  3797                           	
  3798                           l1170:	
  3799  03CF                     ;LCD.c: 22:     PORTB &= 0x80;
  3800                           	movlw	low(080h)
  3801  03CF  3080               	movwf	(??_lcd_ready+0)+0
  3802  03D0  00F6               	movf	(??_lcd_ready+0)+0,w
  3803  03D1  0876               	andwf	(6),f	;volatile
  3804  03D2  0586               	line	23
  3805                           	
  3806                           l1172:	
  3807  03D3                     ;LCD.c: 23:     PORTDbits.RD5 = 0;
  3808                           	bcf	(8),5	;volatile
  3809  03D3  1288               	line	24
  3810                           	
  3811                           l1174:	
  3812  03D4                     ;LCD.c: 24:     PORTDbits.RD6 = 1;
  3813                           	bsf	(8),6	;volatile
  3814  03D4  1708               	line	25
  3815                           	
  3816                           l1176:	
  3817  03D5                     ;LCD.c: 25:     PORTDbits.RD7 = 0; delay(1); PORTDbits.RD7 = 1;
  3818                           	bcf	(8),7	;volatile
  3819  03D5  1388               	
  3820                           l1178:	
  3821  03D6                     	movlw	01h
  3822  03D6  3001               	movwf	(delay@ms)
  3823  03D7  00F0               	movlw	0
  3824  03D8  3000               	movwf	((delay@ms))+1
  3825  03D9  00F1               	fcall	_delay
  3826  03DA  120A  118A  23F8  120A  118A  	
  3827                           l1180:	
  3828  03DF                     	bcf	status, 5	;RP0=0, select bank0
  3829  03DF  1283               	bcf	status, 6	;RP1=0, select bank0
  3830  03E0  1303               	bsf	(8),7	;volatile
  3831  03E1  1788               	line	26
  3832                           	
  3833                           l1182:	
  3834  03E2                     ;LCD.c: 26:     if(PORTB == 0x80)
  3835                           		movlw	128
  3836  03E2  3080               	xorwf	((6)),w	;volatile
  3837  03E3  0606               	btfss	status,2
  3838  03E4  1D03               	goto	u461
  3839  03E5  2BE7               	goto	u460
  3840  03E6  2BE8               u461:
  3841  03E7                     	goto	l137
  3842  03E7  2BF7               u460:
  3843  03E8                     	line	28
  3844                           	
  3845                           l1184:	
  3846  03E8                     ;LCD.c: 27:     {;LCD.c: 28:         PORTDbits.RD7 = 0; delay(1); PORTDbits.RD7 = 1;
  3847                           	bcf	(8),7	;volatile
  3848  03E8  1388               	
  3849                           l1186:	
  3850  03E9                     	movlw	01h
  3851  03E9  3001               	movwf	(delay@ms)
  3852  03EA  00F0               	movlw	0
  3853  03EB  3000               	movwf	((delay@ms))+1
  3854  03EC  00F1               	fcall	_delay
  3855  03ED  120A  118A  23F8  120A  118A  	
  3856                           l1188:	
  3857  03F2                     	bcf	status, 5	;RP0=0, select bank0
  3858  03F2  1283               	bcf	status, 6	;RP1=0, select bank0
  3859  03F3  1303               	bsf	(8),7	;volatile
  3860  03F4  1788               	line	29
  3861                           ;LCD.c: 29:     }
  3862                           	goto	l137
  3863  03F5  2BF7               	line	30
  3864                           ;LCD.c: 30:     else
  3865                           	
  3866                           l135:	
  3867  03F6                     	goto	l137
  3868  03F6  2BF7               	line	33
  3869                           ;LCD.c: 31:     {;LCD.c: 33:     }
  3870                           	
  3871                           l136:	
  3872  03F7                     	line	34
  3873                           	
  3874                           l137:	
  3875  03F7                     	return
  3876  03F7  0008               	opt stack 0
  3877                           GLOBAL	__end_of_lcd_ready
  3878                           	__end_of_lcd_ready:
  3879  03F8                     	signat	_lcd_ready,89
  3880                           	global	_lcd_lat
  3881                           
  3882 ;; *************** function _lcd_lat *****************
  3883 ;; Defined at:
  3884 ;;		line 12 in file "LCD.c"
  3885 ;; Parameters:    Size  Location     Type
  3886 ;;		None
  3887 ;; Auto vars:     Size  Location     Type
  3888 ;;		None
  3889 ;; Return value:  Size  Location     Type
  3890 ;;                  1    wreg      void 
  3891 ;; Registers used:
  3892 ;;		wreg, status,2, status,0, pclath, cstack
  3893 ;; Tracked objects:
  3894 ;;		On entry : 0/0
  3895 ;;		On exit  : 0/0
  3896 ;;		Unchanged: 0/0
  3897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3898 ;;      Params:         0       0       0       0       0
  3899 ;;      Locals:         0       0       0       0       0
  3900 ;;      Temps:          0       0       0       0       0
  3901 ;;      Totals:         0       0       0       0       0
  3902 ;;Total ram usage:        0 bytes
  3903 ;; Hardware stack levels used:    1
  3904 ;; Hardware stack levels required when called:    1
  3905 ;; This function calls:
  3906 ;;		_delay
  3907 ;; This function is called by:
  3908 ;;		_lcd_cmd
  3909 ;; This function uses a non-reentrant model
  3910 ;;
  3911                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  3912                           	line	12
  3913                           global __ptext14
  3914                           __ptext14:	;psect for function _lcd_lat
  3915  02F8                     psect	text14
  3916                           	file	"LCD.c"
  3917                           	line	12
  3918                           	global	__size_of_lcd_lat
  3919                           	__size_of_lcd_lat	equ	__end_of_lcd_lat-_lcd_lat
  3920  0010                     	
  3921                           _lcd_lat:	
  3922  02F8                     ;incstack = 0
  3923                           	opt	stack 4
  3924                           ; Regs used in _lcd_lat: [wreg+status,2+status,0+pclath+cstack]
  3925                           	line	14
  3926                           	
  3927                           l1162:	
  3928  02F8                     ;LCD.c: 14:     PORTDbits.RD7 = 1;
  3929                           	bcf	status, 5	;RP0=0, select bank0
  3930  02F8  1283               	bcf	status, 6	;RP1=0, select bank0
  3931  02F9  1303               	bsf	(8),7	;volatile
  3932  02FA  1788               	line	15
  3933                           	
  3934                           l1164:	
  3935  02FB                     ;LCD.c: 15:     delay(1);
  3936                           	movlw	01h
  3937  02FB  3001               	movwf	(delay@ms)
  3938  02FC  00F0               	movlw	0
  3939  02FD  3000               	movwf	((delay@ms))+1
  3940  02FE  00F1               	fcall	_delay
  3941  02FF  120A  118A  23F8  120A  118A  	line	16
  3942                           	
  3943                           l1166:	
  3944  0304                     ;LCD.c: 16:     PORTDbits.RD7 = 0;
  3945                           	bcf	status, 5	;RP0=0, select bank0
  3946  0304  1283               	bcf	status, 6	;RP1=0, select bank0
  3947  0305  1303               	bcf	(8),7	;volatile
  3948  0306  1388               	line	17
  3949                           	
  3950                           l132:	
  3951  0307                     	return
  3952  0307  0008               	opt stack 0
  3953                           GLOBAL	__end_of_lcd_lat
  3954                           	__end_of_lcd_lat:
  3955  0308                     	signat	_lcd_lat,89
  3956                           	global	_delay
  3957                           
  3958 ;; *************** function _delay *****************
  3959 ;; Defined at:
  3960 ;;		line 54 in file "LCD.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;  ms              2    0[COMMON] unsigned int 
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;  i               2    4[COMMON] unsigned int 
  3965 ;;  j               2    2[COMMON] unsigned int 
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  1    wreg      void 
  3968 ;; Registers used:
  3969 ;;		wreg, status,2
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3975 ;;      Params:         2       0       0       0       0
  3976 ;;      Locals:         4       0       0       0       0
  3977 ;;      Temps:          0       0       0       0       0
  3978 ;;      Totals:         6       0       0       0       0
  3979 ;;Total ram usage:        6 bytes
  3980 ;; Hardware stack levels used:    1
  3981 ;; This function calls:
  3982 ;;		Nothing
  3983 ;; This function is called by:
  3984 ;;		_lcd_lat
  3985 ;;		_lcd_ready
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  3989                           	line	54
  3990                           global __ptext15
  3991                           __ptext15:	;psect for function _delay
  3992  03F8                     psect	text15
  3993                           	file	"LCD.c"
  3994                           	line	54
  3995                           	global	__size_of_delay
  3996                           	__size_of_delay	equ	__end_of_delay-_delay
  3997  0032                     	
  3998                           _delay:	
  3999  03F8                     ;incstack = 0
  4000                           	opt	stack 4
  4001                           ; Regs used in _delay: [wreg+status,2]
  4002                           	line	57
  4003                           	
  4004                           l1150:	
  4005  03F8                     ;LCD.c: 54: void delay(unsigned int ms);LCD.c: 55: {;LCD.c: 56:     unsigned int i,j;;LC
                                 D.c: 57:     for(i=0;i<=120;i++)
  4006                           	clrf	(delay@i)
  4007  03F8  01F4               	clrf	(delay@i+1)
  4008  03F9  01F5               	
  4009                           l1152:	
  4010  03FA                     	movlw	0
  4011  03FA  3000               	subwf	(delay@i+1),w
  4012  03FB  0275               	movlw	079h
  4013  03FC  3079               	skipnz
  4014  03FD  1903               	subwf	(delay@i),w
  4015  03FE  0274               	skipc
  4016  03FF  1C03               	goto	u431
  4017  0400  2C02               	goto	u430
  4018  0401  2C03               u431:
  4019  0402                     	goto	l1156
  4020  0402  2C05               u430:
  4021  0403                     	goto	l151
  4022  0403  2C29               	
  4023                           l1154:	
  4024  0404                     	goto	l151
  4025  0404  2C29               	
  4026                           l146:	
  4027  0405                     	line	58
  4028                           	
  4029                           l1156:	
  4030  0405                     ;LCD.c: 58:         for(j=0;j<=ms;j++);
  4031                           	clrf	(delay@j)
  4032  0405  01F2               	clrf	(delay@j+1)
  4033  0406  01F3               	goto	l148
  4034  0407  2C0E               	
  4035                           l149:	
  4036  0408                     	
  4037                           l1158:	
  4038  0408                     	movlw	01h
  4039  0408  3001               	addwf	(delay@j),f
  4040  0409  07F2               	skipnc
  4041  040A  1803               	incf	(delay@j+1),f
  4042  040B  0AF3               	movlw	0
  4043  040C  3000               	addwf	(delay@j+1),f
  4044  040D  07F3               	
  4045                           l148:	
  4046  040E                     	movf	(delay@j+1),w
  4047  040E  0873               	subwf	(delay@ms+1),w
  4048  040F  0271               	skipz
  4049  0410  1D03               	goto	u445
  4050  0411  2C14               	movf	(delay@j),w
  4051  0412  0872               	subwf	(delay@ms),w
  4052  0413  0270               u445:
  4053  0414                     	skipnc
  4054  0414  1803               	goto	u441
  4055  0415  2C17               	goto	u440
  4056  0416  2C18               u441:
  4057  0417                     	goto	l1158
  4058  0417  2C08               u440:
  4059  0418                     	goto	l1160
  4060  0418  2C19               	
  4061                           l150:	
  4062  0419                     	
  4063                           l1160:	
  4064  0419                     	movlw	01h
  4065  0419  3001               	addwf	(delay@i),f
  4066  041A  07F4               	skipnc
  4067  041B  1803               	incf	(delay@i+1),f
  4068  041C  0AF5               	movlw	0
  4069  041D  3000               	addwf	(delay@i+1),f
  4070  041E  07F5               	movlw	0
  4071  041F  3000               	subwf	(delay@i+1),w
  4072  0420  0275               	movlw	079h
  4073  0421  3079               	skipnz
  4074  0422  1903               	subwf	(delay@i),w
  4075  0423  0274               	skipc
  4076  0424  1C03               	goto	u451
  4077  0425  2C27               	goto	u450
  4078  0426  2C28               u451:
  4079  0427                     	goto	l1156
  4080  0427  2C05               u450:
  4081  0428                     	goto	l151
  4082  0428  2C29               	
  4083                           l147:	
  4084  0429                     	line	59
  4085                           	
  4086                           l151:	
  4087  0429                     	return
  4088  0429  0008               	opt stack 0
  4089                           GLOBAL	__end_of_delay
  4090                           	__end_of_delay:
  4091  042A                     	signat	_delay,4217
  4092                           	global	_LCD_STRING
  4093                           
  4094 ;; *************** function _LCD_STRING *****************
  4095 ;; Defined at:
  4096 ;;		line 98 in file "LCD.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;  a               2    2[COMMON] PTR unsigned char 
  4099 ;;		 -> valor(16), valor1(16), STR_2(16), STR_1(12), 
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;  n               2    7[COMMON] int 
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  1    wreg      void 
  4104 ;; Registers used:
  4105 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4111 ;;      Params:         2       0       0       0       0
  4112 ;;      Locals:         2       0       0       0       0
  4113 ;;      Temps:          3       0       0       0       0
  4114 ;;      Totals:         7       0       0       0       0
  4115 ;;Total ram usage:        7 bytes
  4116 ;; Hardware stack levels used:    1
  4117 ;; Hardware stack levels required when called:    1
  4118 ;; This function calls:
  4119 ;;		_LCD_CHAR
  4120 ;; This function is called by:
  4121 ;;		_main
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  4125                           	line	98
  4126                           global __ptext16
  4127                           __ptext16:	;psect for function _LCD_STRING
  4128  049E                     psect	text16
  4129                           	file	"LCD.c"
  4130                           	line	98
  4131                           	global	__size_of_LCD_STRING
  4132                           	__size_of_LCD_STRING	equ	__end_of_LCD_STRING-_LCD_STRING
  4133  0044                     	
  4134                           _LCD_STRING:	
  4135  049E                     ;incstack = 0
  4136                           	opt	stack 6
  4137                           ; Regs used in _LCD_STRING: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4138                           	line	101
  4139                           	
  4140                           l1328:	
  4141  049E                     ;LCD.c: 98: void LCD_STRING(char *a);LCD.c: 99: {;LCD.c: 100:     int n;;LCD.c: 101:    
                                  for(n = 0; a[n] != '\0'; n++){
  4142                           	clrf	(LCD_STRING@n)
  4143  049E  01F7               	clrf	(LCD_STRING@n+1)
  4144  049F  01F8               	goto	l1334
  4145  04A0  2CC4               	
  4146                           l167:	
  4147  04A1                     	line	102
  4148                           	
  4149                           l1330:	
  4150  04A1                     ;LCD.c: 102:         LCD_CHAR(a[n]);
  4151                           	movf	(LCD_STRING@n),w
  4152  04A1  0877               	addwf	(LCD_STRING@a),w
  4153  04A2  0772               	movwf	(??_LCD_STRING+1)+0
  4154  04A3  00F5               	movf	(LCD_STRING@a+1),w
  4155  04A4  0873               	movwf	(??_LCD_STRING+0)+0
  4156  04A5  00F4               	skipnc
  4157  04A6  1803               	incf	(??_LCD_STRING+0)+0,f
  4158  04A7  0AF4               	btfss	(LCD_STRING@n),7
  4159  04A8  1FF7               	goto	u660
  4160  04A9  2CAB               	decf	(??_LCD_STRING+0)+0,f
  4161  04AA  03F4               u660:
  4162  04AB                     	movf	(??_LCD_STRING+0)+0,w
  4163  04AB  0874               	movwf	0+((??_LCD_STRING+1)+0)+1
  4164  04AC  00F6               	movf	1+(??_LCD_STRING+1)+0,w
  4165  04AD  0876               	bcf	status, 5	;RP0=0, select bank0
  4166  04AE  1283               	bcf	status, 6	;RP1=0, select bank0
  4167  04AF  1303               	movwf	btemp+1
  4168  04B0  00FF               	movf	0+(??_LCD_STRING+1)+0,w
  4169  04B1  0875               	movwf	fsr0
  4170  04B2  0084               	fcall	stringtab
  4171  04B3  120A  118A  2003  120A  118A  	fcall	_LCD_CHAR
  4172  04B8  120A  118A  22E9  120A  118A  	line	103
  4173                           	
  4174                           l1332:	
  4175  04BD                     ;LCD.c: 103:     }
  4176                           	movlw	01h
  4177  04BD  3001               	addwf	(LCD_STRING@n),f
  4178  04BE  07F7               	skipnc
  4179  04BF  1803               	incf	(LCD_STRING@n+1),f
  4180  04C0  0AF8               	movlw	0
  4181  04C1  3000               	addwf	(LCD_STRING@n+1),f
  4182  04C2  07F8               	goto	l1334
  4183  04C3  2CC4               	
  4184                           l166:	
  4185  04C4                     	
  4186                           l1334:	
  4187  04C4                     	movf	(LCD_STRING@n),w
  4188  04C4  0877               	addwf	(LCD_STRING@a),w
  4189  04C5  0772               	movwf	(??_LCD_STRING+1)+0
  4190  04C6  00F5               	movf	(LCD_STRING@a+1),w
  4191  04C7  0873               	movwf	(??_LCD_STRING+0)+0
  4192  04C8  00F4               	skipnc
  4193  04C9  1803               	incf	(??_LCD_STRING+0)+0,f
  4194  04CA  0AF4               	btfss	(LCD_STRING@n),7
  4195  04CB  1FF7               	goto	u670
  4196  04CC  2CCE               	decf	(??_LCD_STRING+0)+0,f
  4197  04CD  03F4               u670:
  4198  04CE                     	movf	(??_LCD_STRING+0)+0,w
  4199  04CE  0874               	movwf	0+((??_LCD_STRING+1)+0)+1
  4200  04CF  00F6               	movf	1+(??_LCD_STRING+1)+0,w
  4201  04D0  0876               	bcf	status, 5	;RP0=0, select bank0
  4202  04D1  1283               	bcf	status, 6	;RP1=0, select bank0
  4203  04D2  1303               	movwf	btemp+1
  4204  04D3  00FF               	movf	0+(??_LCD_STRING+1)+0,w
  4205  04D4  0875               	movwf	fsr0
  4206  04D5  0084               	fcall	stringtab
  4207  04D6  120A  118A  2003  120A  118A  	xorlw	0
  4208  04DB  3A00               	skipz
  4209  04DC  1D03               	goto	u681
  4210  04DD  2CDF               	goto	u680
  4211  04DE  2CE0               u681:
  4212  04DF                     	goto	l1330
  4213  04DF  2CA1               u680:
  4214  04E0                     	goto	l169
  4215  04E0  2CE1               	
  4216                           l168:	
  4217  04E1                     	line	104
  4218                           	
  4219                           l169:	
  4220  04E1                     	return
  4221  04E1  0008               	opt stack 0
  4222                           GLOBAL	__end_of_LCD_STRING
  4223                           	__end_of_LCD_STRING:
  4224  04E2                     	signat	_LCD_STRING,4217
  4225                           	global	_LCD_CHAR
  4226                           
  4227 ;; *************** function _LCD_CHAR *****************
  4228 ;; Defined at:
  4229 ;;		line 88 in file "LCD.c"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;  a               1    wreg     unsigned char 
  4232 ;; Auto vars:     Size  Location     Type
  4233 ;;  a               1    1[COMMON] unsigned char 
  4234 ;; Return value:  Size  Location     Type
  4235 ;;                  1    wreg      void 
  4236 ;; Registers used:
  4237 ;;		wreg
  4238 ;; Tracked objects:
  4239 ;;		On entry : 0/0
  4240 ;;		On exit  : 0/0
  4241 ;;		Unchanged: 0/0
  4242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4243 ;;      Params:         0       0       0       0       0
  4244 ;;      Locals:         1       0       0       0       0
  4245 ;;      Temps:          1       0       0       0       0
  4246 ;;      Totals:         2       0       0       0       0
  4247 ;;Total ram usage:        2 bytes
  4248 ;; Hardware stack levels used:    1
  4249 ;; This function calls:
  4250 ;;		Nothing
  4251 ;; This function is called by:
  4252 ;;		_LCD_STRING
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  4256                           	line	88
  4257                           global __ptext17
  4258                           __ptext17:	;psect for function _LCD_CHAR
  4259  02E9                     psect	text17
  4260                           	file	"LCD.c"
  4261                           	line	88
  4262                           	global	__size_of_LCD_CHAR
  4263                           	__size_of_LCD_CHAR	equ	__end_of_LCD_CHAR-_LCD_CHAR
  4264  000F                     	
  4265                           _LCD_CHAR:	
  4266  02E9                     ;incstack = 0
  4267                           	opt	stack 6
  4268                           ; Regs used in _LCD_CHAR: [wreg]
  4269                           ;LCD_CHAR@a stored from wreg
  4270                           	movwf	(LCD_CHAR@a)
  4271  02E9  00F1               	line	90
  4272                           	
  4273                           l1220:	
  4274  02EA                     ;LCD.c: 88: void LCD_CHAR(char a);LCD.c: 89: {;LCD.c: 90:     PORTDbits.RD5 = 1;
  4275                           	bcf	status, 5	;RP0=0, select bank0
  4276  02EA  1283               	bcf	status, 6	;RP1=0, select bank0
  4277  02EB  1303               	bsf	(8),5	;volatile
  4278  02EC  1688               	line	92
  4279                           	
  4280                           l1222:	
  4281  02ED                     ;LCD.c: 92:     PORTB = a;
  4282                           	movf	(LCD_CHAR@a),w
  4283  02ED  0871               	movwf	(6)	;volatile
  4284  02EE  0086               	line	93
  4285                           	
  4286                           l1224:	
  4287  02EF                     ;LCD.c: 93:     PORTDbits.RD7 = 1;
  4288                           	bsf	(8),7	;volatile
  4289  02EF  1788               	line	94
  4290                           ;LCD.c: 94:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4291                           	opt asmopt_push
  4292                           opt asmopt_off
  4293                           	movlw	13
  4294  02F0  300D               movwf	((??_LCD_CHAR+0)+0),f
  4295  02F1  00F0               	u927:
  4296  02F2                     decfsz	(??_LCD_CHAR+0)+0,f
  4297  02F2  0BF0               	goto	u927
  4298  02F3  2AF2               opt asmopt_pop
  4299                           
  4300                           	line	95
  4301                           	
  4302                           l1226:	
  4303  02F4                     ;LCD.c: 95:     PORTDbits.RD7 = 0;
  4304                           	bcf	status, 5	;RP0=0, select bank0
  4305  02F4  1283               	bcf	status, 6	;RP1=0, select bank0
  4306  02F5  1303               	bcf	(8),7	;volatile
  4307  02F6  1388               	line	96
  4308                           	
  4309                           l163:	
  4310  02F7                     	return
  4311  02F7  0008               	opt stack 0
  4312                           GLOBAL	__end_of_LCD_CHAR
  4313                           	__end_of_LCD_CHAR:
  4314  02F8                     	signat	_LCD_CHAR,4217
  4315                           	global	_LCD_CURSOR
  4316                           
  4317 ;; *************** function _LCD_CURSOR *****************
  4318 ;; Defined at:
  4319 ;;		line 71 in file "LCD.c"
  4320 ;; Parameters:    Size  Location     Type
  4321 ;;  a               2    4[COMMON] int 
  4322 ;;  b               2    6[COMMON] int 
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;  d               2    8[COMMON] int 
  4325 ;; Return value:  Size  Location     Type
  4326 ;;                  1    wreg      void 
  4327 ;; Registers used:
  4328 ;;		wreg, status,2, status,0, pclath, cstack
  4329 ;; Tracked objects:
  4330 ;;		On entry : 0/0
  4331 ;;		On exit  : 0/0
  4332 ;;		Unchanged: 0/0
  4333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4334 ;;      Params:         4       0       0       0       0
  4335 ;;      Locals:         2       0       0       0       0
  4336 ;;      Temps:          0       0       0       0       0
  4337 ;;      Totals:         6       0       0       0       0
  4338 ;;Total ram usage:        6 bytes
  4339 ;; Hardware stack levels used:    1
  4340 ;; Hardware stack levels required when called:    1
  4341 ;; This function calls:
  4342 ;;		_LCD_DATO
  4343 ;; This function is called by:
  4344 ;;		_main
  4345 ;; This function uses a non-reentrant model
  4346 ;;
  4347                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  4348                           	line	71
  4349                           global __ptext18
  4350                           __ptext18:	;psect for function _LCD_CURSOR
  4351  042A                     psect	text18
  4352                           	file	"LCD.c"
  4353                           	line	71
  4354                           	global	__size_of_LCD_CURSOR
  4355                           	__size_of_LCD_CURSOR	equ	__end_of_LCD_CURSOR-_LCD_CURSOR
  4356  0033                     	
  4357                           _LCD_CURSOR:	
  4358  042A                     ;incstack = 0
  4359                           	opt	stack 6
  4360                           ; Regs used in _LCD_CURSOR: [wreg+status,2+status,0+pclath+cstack]
  4361                           	line	74
  4362                           	
  4363                           l1422:	
  4364  042A                     ;LCD.c: 71: void LCD_CURSOR(int a, int b);LCD.c: 72: {;LCD.c: 73:     int d;;LCD.c: 74: 
                                  if(a == 1)
  4365                           		decf	((LCD_CURSOR@a)),w
  4366  042A  0374               iorwf	((LCD_CURSOR@a+1)),w
  4367  042B  0475               	btfss	status,2
  4368  042C  1D03               	goto	u831
  4369  042D  2C2F               	goto	u830
  4370  042E  2C30               u831:
  4371  042F                     	goto	l1428
  4372  042F  2C42               u830:
  4373  0430                     	line	76
  4374                           	
  4375                           l1424:	
  4376  0430                     ;LCD.c: 75:  {;LCD.c: 76:         d = 0x80 + b - 1;
  4377                           	movf	(LCD_CURSOR@b),w
  4378  0430  0876               	addlw	low(07Fh)
  4379  0431  3E7F               	movwf	(LCD_CURSOR@d)
  4380  0432  00F8               	movf	(LCD_CURSOR@b+1),w
  4381  0433  0877               	skipnc
  4382  0434  1803               	addlw	1
  4383  0435  3E01               	addlw	high(07Fh)
  4384  0436  3E00               	movwf	1+(LCD_CURSOR@d)
  4385  0437  00F9               	line	77
  4386                           	
  4387                           l1426:	
  4388  0438                     ;LCD.c: 77:   LCD_DATO(d);
  4389                           	movf	(LCD_CURSOR@d+1),w
  4390  0438  0879               	movwf	(LCD_DATO@var+1)
  4391  0439  00F1               	movf	(LCD_CURSOR@d),w
  4392  043A  0878               	movwf	(LCD_DATO@var)
  4393  043B  00F0               	fcall	_LCD_DATO
  4394  043C  120A  118A  237C  120A  118A  	line	78
  4395                           ;LCD.c: 78:  }
  4396                           	goto	l160
  4397  0441  2C5C               	line	79
  4398                           ;LCD.c: 79:  else if(a == 2)
  4399                           	
  4400                           l157:	
  4401  0442                     	
  4402                           l1428:	
  4403  0442                     		movlw	2
  4404  0442  3002               	xorwf	((LCD_CURSOR@a)),w
  4405  0443  0674               iorwf	((LCD_CURSOR@a+1)),w
  4406  0444  0475               	btfss	status,2
  4407  0445  1D03               	goto	u841
  4408  0446  2C48               	goto	u840
  4409  0447  2C49               u841:
  4410  0448                     	goto	l160
  4411  0448  2C5C               u840:
  4412  0449                     	line	81
  4413                           	
  4414                           l1430:	
  4415  0449                     ;LCD.c: 80:  {;LCD.c: 81:   d = 0xC0 + b - 1;
  4416                           	movf	(LCD_CURSOR@b),w
  4417  0449  0876               	addlw	low(0BFh)
  4418  044A  3EBF               	movwf	(LCD_CURSOR@d)
  4419  044B  00F8               	movf	(LCD_CURSOR@b+1),w
  4420  044C  0877               	skipnc
  4421  044D  1803               	addlw	1
  4422  044E  3E01               	addlw	high(0BFh)
  4423  044F  3E00               	movwf	1+(LCD_CURSOR@d)
  4424  0450  00F9               	line	82
  4425                           	
  4426                           l1432:	
  4427  0451                     ;LCD.c: 82:   LCD_DATO(d);
  4428                           	movf	(LCD_CURSOR@d+1),w
  4429  0451  0879               	movwf	(LCD_DATO@var+1)
  4430  0452  00F1               	movf	(LCD_CURSOR@d),w
  4431  0453  0878               	movwf	(LCD_DATO@var)
  4432  0454  00F0               	fcall	_LCD_DATO
  4433  0455  120A  118A  237C  120A  118A  	goto	l160
  4434  045A  2C5C               	line	83
  4435                           ;LCD.c: 83:  }
  4436                           	
  4437                           l159:	
  4438  045B                     	goto	l160
  4439  045B  2C5C               	
  4440                           l158:	
  4441  045C                     	line	84
  4442                           	
  4443                           l160:	
  4444  045C                     	return
  4445  045C  0008               	opt stack 0
  4446                           GLOBAL	__end_of_LCD_CURSOR
  4447                           	__end_of_LCD_CURSOR:
  4448  045D                     	signat	_LCD_CURSOR,8313
  4449                           	global	_LCD_DATO
  4450                           
  4451 ;; *************** function _LCD_DATO *****************
  4452 ;; Defined at:
  4453 ;;		line 61 in file "LCD.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;  var             2    0[COMMON] int 
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;		None
  4458 ;; Return value:  Size  Location     Type
  4459 ;;                  1    wreg      void 
  4460 ;; Registers used:
  4461 ;;		wreg
  4462 ;; Tracked objects:
  4463 ;;		On entry : 0/0
  4464 ;;		On exit  : 0/0
  4465 ;;		Unchanged: 0/0
  4466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4467 ;;      Params:         2       0       0       0       0
  4468 ;;      Locals:         0       0       0       0       0
  4469 ;;      Temps:          2       0       0       0       0
  4470 ;;      Totals:         4       0       0       0       0
  4471 ;;Total ram usage:        4 bytes
  4472 ;; Hardware stack levels used:    1
  4473 ;; This function calls:
  4474 ;;		Nothing
  4475 ;; This function is called by:
  4476 ;;		_main
  4477 ;;		_LCD_CURSOR
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  4481                           	line	61
  4482                           global __ptext19
  4483                           __ptext19:	;psect for function _LCD_DATO
  4484  037C                     psect	text19
  4485                           	file	"LCD.c"
  4486                           	line	61
  4487                           	global	__size_of_LCD_DATO
  4488                           	__size_of_LCD_DATO	equ	__end_of_LCD_DATO-_LCD_DATO
  4489  0024                     	
  4490                           _LCD_DATO:	
  4491  037C                     ;incstack = 0
  4492                           	opt	stack 7
  4493                           ; Regs used in _LCD_DATO: [wreg]
  4494                           	line	62
  4495                           	
  4496                           l1202:	
  4497  037C                     ;LCD.c: 62:     PORTDbits.RD5 = 0;
  4498                           	bcf	status, 5	;RP0=0, select bank0
  4499  037C  1283               	bcf	status, 6	;RP1=0, select bank0
  4500  037D  1303               	bcf	(8),5	;volatile
  4501  037E  1288               	line	63
  4502                           	
  4503                           l1204:	
  4504  037F                     ;LCD.c: 63:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4505                           	opt asmopt_push
  4506                           opt asmopt_off
  4507                           movlw	7
  4508  037F  3007               movwf	((??_LCD_DATO+0)+0+1),f
  4509  0380  00F3               	movlw	125
  4510  0381  307D               movwf	((??_LCD_DATO+0)+0),f
  4511  0382  00F2               	u937:
  4512  0383                     decfsz	((??_LCD_DATO+0)+0),f
  4513  0383  0BF2               	goto	u937
  4514  0384  2B83               	decfsz	((??_LCD_DATO+0)+0+1),f
  4515  0385  0BF3               	goto	u937
  4516  0386  2B83               opt asmopt_pop
  4517                           
  4518                           	line	64
  4519                           	
  4520                           l1206:	
  4521  0387                     ;LCD.c: 64:     PORTDbits.RD7 = 1;
  4522                           	bcf	status, 5	;RP0=0, select bank0
  4523  0387  1283               	bcf	status, 6	;RP1=0, select bank0
  4524  0388  1303               	bsf	(8),7	;volatile
  4525  0389  1788               	line	65
  4526                           ;LCD.c: 65:     PORTB = var;
  4527                           	movf	(LCD_DATO@var),w
  4528  038A  0870               	movwf	(6)	;volatile
  4529  038B  0086               	line	66
  4530                           ;LCD.c: 66:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4531                           	opt asmopt_push
  4532                           opt asmopt_off
  4533                           movlw	7
  4534  038C  3007               movwf	((??_LCD_DATO+0)+0+1),f
  4535  038D  00F3               	movlw	125
  4536  038E  307D               movwf	((??_LCD_DATO+0)+0),f
  4537  038F  00F2               	u947:
  4538  0390                     decfsz	((??_LCD_DATO+0)+0),f
  4539  0390  0BF2               	goto	u947
  4540  0391  2B90               	decfsz	((??_LCD_DATO+0)+0+1),f
  4541  0392  0BF3               	goto	u947
  4542  0393  2B90               opt asmopt_pop
  4543                           
  4544                           	line	67
  4545                           	
  4546                           l1208:	
  4547  0394                     ;LCD.c: 67:     PORTDbits.RD7 = 0;
  4548                           	bcf	status, 5	;RP0=0, select bank0
  4549  0394  1283               	bcf	status, 6	;RP1=0, select bank0
  4550  0395  1303               	bcf	(8),7	;volatile
  4551  0396  1388               	line	68
  4552                           ;LCD.c: 68:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4553                           	opt asmopt_push
  4554                           opt asmopt_off
  4555                           movlw	7
  4556  0397  3007               movwf	((??_LCD_DATO+0)+0+1),f
  4557  0398  00F3               	movlw	125
  4558  0399  307D               movwf	((??_LCD_DATO+0)+0),f
  4559  039A  00F2               	u957:
  4560  039B                     decfsz	((??_LCD_DATO+0)+0),f
  4561  039B  0BF2               	goto	u957
  4562  039C  2B9B               	decfsz	((??_LCD_DATO+0)+0+1),f
  4563  039D  0BF3               	goto	u957
  4564  039E  2B9B               opt asmopt_pop
  4565                           
  4566                           	line	69
  4567                           	
  4568                           l154:	
  4569  039F                     	return
  4570  039F  0008               	opt stack 0
  4571                           GLOBAL	__end_of_LCD_DATO
  4572                           	__end_of_LCD_DATO:
  4573  03A0                     	signat	_LCD_DATO,4217
  4574                           global	___latbits
  4575                           ___latbits	equ	2
  4576  0002                     	global	btemp
  4577                           	btemp set 07Eh
  4578  007E                     
  4579                           	DABS	1,126,2	;btemp
  4580                           	global	wtemp0
  4581                           	wtemp0 set btemp+0
  4582  007E                     	end


Data Sizes:
    Strings     73
    Constant    10
    Data        0
    BSS         62
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     24      70
    BANK1            80      0      16
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 28
		 -> STR_4(CODE[28]), STR_3(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> valor(BANK0[16]), valor1(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_STRING@a	PTR unsigned char  size(2) Largest target is 16
		 -> valor(BANK0[16]), valor1(BANK1[16]), STR_2(CODE[16]), STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_spiInit
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_ready
    _lcd_ready->_delay
    _lcd_lat->_delay
    _LCD_STRING->_LCD_CHAR
    _LCD_CURSOR->_LCD_DATO

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4355
                                             21 BANK0      3     3      0
                         _LCD_CURSOR
                           _LCD_DATO
                         _LCD_STRING
                           _lcd_init
                              _setup
                            _spiRead
                           _spiWrite
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             29    18     11    1805
                                              0 BANK0     21    10     11
                             ___bmul
                            ___lwdiv
                            ___lwmod
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     662
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0     662
                                              7 COMMON     1     1      0
                            _lcd_lat
                          _lcd_ready
 ---------------------------------------------------------------------------------
 (3) _lcd_ready                                            1     1      0     320
                                              6 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _lcd_lat                                              0     0      0     320
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                6     4      2     320
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _LCD_STRING                                           7     5      2     416
                                              2 COMMON     7     5      2
                           _LCD_CHAR
 ---------------------------------------------------------------------------------
 (2) _LCD_CHAR                                             2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_CURSOR                                           6     2      4     764
                                              4 COMMON     6     2      4
                           _LCD_DATO
 ---------------------------------------------------------------------------------
 (1) _LCD_DATO                                             4     2      2     326
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_CURSOR
     _LCD_DATO
   _LCD_DATO
   _LCD_STRING
     _LCD_CHAR
   _lcd_init
     _lcd_cmd
       _lcd_lat
         _delay
       _lcd_ready
         _delay
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite
   _sprintf
     ___bmul
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      64       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      46       5       87.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      10       7       20.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      64      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun May 10 17:07:09 2020

             LCD_CURSOR@a 0074               LCD_CURSOR@b 0076               LCD_CURSOR@d 0078  
                       _A 0032                         _B 0030                         _C 002E  
                       _D 002C                         _E 002A                         _a 003C  
                       _b 003A                         _c 0038                         _d 0036  
                       _e 0034                         pc 0002            ___bmul@product 0072  
             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        _A1 0028  
                      _B1 0026                        _C1 0024                        _D1 0022  
                      _E1 0020                        l20 02D7                        l21 02D7  
                      l22 02DE                        l15 033A                        l23 02DE  
                      l16 033E                        l17 0343                        l34 02E8  
                      l26 02CD                        fsr 0004                       l121 03CA  
                     l115 056A                       l132 0307                       l140 0319  
                     l116 065C                       l117 065D                       l150 0419  
                     l118 065D                       l151 0429                       l135 03F6  
                     l143 037B                       l160 045C                       l136 03F7  
                     l320 035C                       l137 03F7                       l154 039F  
                     l146 0405                       l163 02F7                       l147 0429  
                     l148 040E                       l157 0442                       l149 0408  
                     l317 0347                       l158 045C                       l166 04C4  
                     l318 0350                       l262 07D1                       l270 06C9  
                     l159 045B                       l167 04A1                       l319 035A  
                     l271 06C4                       l263 0668                       l168 04E1  
                     l272 07E5                       l280 0744                       l264 067A  
                     l169 04E1                       l281 0739                       l273 06C5  
                     l265 06BF                       l290 07EA                       l282 075B  
                     l274 06C6                       l266 06AD                       l283 0777  
                     l275 06E8                       l267 068D                       l284 0776  
                     l276 06C7                       l268 06BE                       l285 078B  
                     l277 0702                       l269 06C3                       l286 07C6  
                     l278 0712                       l287 078C                       l279 071C  
                     l560 04F9                       l288 07D0                       l561 04ED  
                     l721 032B                       l289 07E4                       l562 04FE  
                     l570 0472                       l722 032D                       l563 04FF  
                     l571 0466                       l564 0518                       l572 0477  
                     l565 0526                       l573 0478                       l566 052C  
                     l574 0489                       l559 0527                       l575 0497  
                     l576 049D                       l569 0498                       u500 0328  
                     u501 0327                       u430 0403                       u510 034B  
                     u431 0402                       u511 034A                       u440 0418  
                     u520 0359                       u600 0463                       u441 0417  
                     u521 0358                       u601 0462                       u450 0428  
                     u530 04EA              __CFG_CPD$OFF 0000                       u451 0427  
                     u531 04E9                       u460 03E8                       u620 0476  
                     u700 0687                       u445 0414                       u461 03E7  
                     u621 0475                       u701 0686                       u470 0336  
                     u550 04FD                       u630 0482                       u710 06BD  
                     u471 0335                       u551 04FC                       u631 0481  
                     u615 0467                       u711 06BC                       u480 02DD  
                     u800 077F                       u720 06F8                       u481 02DC  
                     u545 04EE                       u801 077E                       u721 06F7  
                     u570 0510                       u650 0496                       u490 0322  
                     u810 07CF                       u730 0707                       u571 050F  
                     u651 0495                       u635 047E                       u491 0321  
                     u811 07CE                       u731 0706                       u660 04AB  
                     u820 07E3                       u740 070D                       u565 0500  
                     u645 048A                       u821 07E2                       u741 070C  
                     u830 0430                       u670 04CE                       u590 0525  
                     u750 071A                       u831 042F                       u591 0524  
                     u575 050C                       u751 0719                       u840 0449  
                     u680 04E0                       u760 0737                       u841 0448  
                     u681 04DF                       u585 0519                       u761 0736  
                     u770 0743                       u690 066E                       u771 0742  
                     u691 066D                       u907 063A                       u780 0754  
                     u781 0753                       u765 0733                       u917 0657  
                     u790 076F                       u927 02F2                       u791 076E  
                     u937 0383                       u785 0750                       u857 055A  
                     u947 0390                       u795 076B                       u867 05C6  
                     u957 039B                       u877 05E3                       u887 0600  
                     u897 061D                       fsr0 0004                       indf 0000  
             LCD_STRING@a 0072               LCD_STRING@n 0077              __CFG_LVP$OFF 0000  
                    l1200 02D6                      l1202 037C                      l1210 0309  
                    l1204 037F                      l1220 02EA                      l1212 030E  
                    l1300 049D                      l1206 0387                      l1222 02ED  
                    l1150 03F8                      l1214 0312                      l1310 03A0  
                    l1302 02C9                      l1230 031C                      l1208 0394  
                    l1224 02EF                      l1160 0419                      l1152 03FA  
                    l1216 0313                      l1320 03BB                      l1312 03A4  
                    l1304 02DF                      l1240 0345                      l1232 0322  
                    l1400 077F                      l1226 02F4                      l1330 04A1  
                    l1154 0404                      l1162 02F8                      l1170 03CF  
                    l1218 0314                      l1322 03BE                      l1314 03A9  
                    l1306 02E4                      l1250 035A                      l1242 0347  
                    l1234 0328                      l1402 0786                      l1410 07C6  
                    l1332 04BD                      l1156 0405                      l1164 02FB  
                    l1180 03DF                      l1172 03D3                      l1324 03C7  
                    l1316 03B3                      l1308 02E8                      l1252 035C  
                    l1244 034B                      l1260 04ED                      l1236 032B  
                    l1228 031B                      l1404 078C                      l1340 066E  
                    l1412 07D1                      l1430 0449                      l1422 042A  
                    l1334 04C4                      l1158 0408                      l1166 0304  
                    l1182 03E2                      l1174 03D4                      l1326 035D  
                    l1190 032F                      l1318 03B7                      l1246 0350  
                    l1270 0516                      l1262 04F4                      l1254 04E2  
                    l1238 032D                      l1406 07BA                      l1414 07E5  
                    l1350 068B                      l1342 0675                      l1432 0451  
                    l1424 0430                      l1328 049E                      l1184 03E8  
                    l1176 03D5                      l1168 03CB                      l1192 0336  
                    l1248 0352                      l1272 0518                      l1264 04F9  
                    l1256 04E4                      l1280 045D                      l1416 07EA  
                    l1408 07C1                      l1360 06C8                      l1352 068D  
                    l1344 067A                      l1336 0663                      l1440 0552  
                    l1426 0438                      l1186 03E9                      l1178 03D6  
                    l1194 0338                      l1274 051F                      l1266 04FF  
                    l1258 04EA                      l1290 0478                      l1282 0463  
                    l1370 06F8                      l1362 06C9                      l1354 06A8  
                    l1346 067B                      l1338 0668                      l1450 058C  
                    l1442 0560                      l1434 052D                      l1428 0442  
                    l1188 03F2                      l1196 033A                      l1268 0510  
                    l1276 0527                      l1292 0482                      l1284 0466  
                    l1380 0712                      l1372 06FC                      l1508 06DD  
                    l1364 06E8                      l1356 06AD                      l1348 0687  
                    l1460 05D0                      l1452 05AC                      l1444 056A  
                    l1436 0537                      l1198 033D                      l1278 052C  
                    l1294 0489                      l1286 046D                      l1382 071B  
                    l1390 0744                      l1374 0702                      l1366 06F0  
                    l1358 06BF                      l1470 0604                      l1462 05DD  
                    l1454 05B9                      l1446 0576                      l1438 0540  
                    l1296 0490                      l1288 0472                      l1392 0754  
                    l1384 071C                      l1376 0707                      l1368 06F4  
                    l1480 0634                      l1472 060A                      l1464 05E7  
                    l1456 05C2                      l1448 0583                      l1298 0498  
                    l1394 075B                      l1386 0738                      l1378 070D  
                    l1482 063E                      l1474 0617                      l1466 05ED  
                    l1458 05CA                      l1396 076F                      l1388 0739  
                    l1484 0644                      l1476 0621                      l1468 05FA  
                    l1398 0777                      l1486 0651                      l1478 0627  
                    STR_1 005A                      STR_2 004A                      STR_3 0039  
                    STR_4 001D              __CFG_WRT$OFF 0000                      _main 052D  
                    btemp 007E                      start 0000             __CFG_IESO$OFF 0000  
       ___bmul@multiplier 0073          __end_of_LCD_CHAR 02F8          __end_of_LCD_DATO 03A0  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
         __end_of___lwdiv 052D           __end_of___lwmod 049E                     _PORTA 0005  
                   _PORTB 0006                     _PORTD 0008                     _TRISA 0085  
                   _TRISB 0086                     _TRISD 0088       __size_of_LCD_CURSOR 0033  
          __CFG_FCMEN$OFF 0000           __end_of_lcd_cmd 031A           __end_of_lcd_lat 0308  
                   _delay 03F8       __size_of_LCD_STRING 0044           __end_of_dpowers 001D  
         __end_of_isdigit 032E                     _valor 003E                     _setup 03A0  
          __CFG_BOREN$OFF 0000                     pclath 000A           __end_of_spiInit 0344  
         __end_of_spiRead 02E9                     status 0003                     wtemp0 007E  
         __end_of_sprintf 07EB            __CFG_MCLRE$OFF 0000           __initialization 07EB  
            __end_of_main 0660                    ??_main 0063                    ?_delay 0070  
                  ?_setup 0070                    _ANSELH 0189                    _TRISC2 043A  
                  _TRISC3 043B                    _TRISC5 043D                    _SSPCON 0014  
                  _SSPBUF 0013            __CFG_PWRTE$OFF 0000          __end_of_lcd_init 037C  
                  ___bmul 0344                 ??___lwdiv 0074                 ??___lwmod 007C  
                  delay@i 0074                    delay@j 0072                    _valor1 00A0  
               ??_lcd_cmd 0077                 ??_lcd_lat 0076                 ??_isdigit 0070  
        __end_of_spiWrite 02CE                 ??_spiInit 0073                 ??_spiRead 0070  
               ??_sprintf 0059                 LCD_CHAR@a 0071                 ?_LCD_CHAR 0070  
               ?_LCD_DATO 0070   __end_of__initialization 07FC              ??_LCD_CURSOR 0078  
     ___bmul@multiplicand 0070              ??_LCD_STRING 0074            __pcstackCOMMON 0070  
           __end_of_delay 042A             __end_of_setup 03CB        __end_of_LCD_CURSOR 045D  
      __size_of_lcd_ready 002D                   ??_delay 0072        __end_of_LCD_STRING 04E2  
                 ??_setup 0074                __pbssBANK0 0020                __pbssBANK1 00A0  
              ??_LCD_CHAR 0070                ??_LCD_DATO 0072                __pmaintext 052D  
                 ?___bmul 0070   __size_of_spiReceiveWait 0009                 ?_lcd_init 0070  
                 _SSPSTAT 0094                __stringtab 0003         __end_of_lcd_ready 03F8  
               ?_spiWrite 0070           __size_of___bmul 0019                   ___lwdiv 04E2  
                 ___lwmod 045D                   __ptext1 0660                   __ptext2 031A  
                 __ptext3 045D                   __ptext4 04E2                   __ptext5 0344  
                 __ptext6 02C8                   __ptext7 02DF                   __ptext8 02D6  
                 __ptext9 03A0                   _lcd_cmd 0308                   _lcd_lat 02F8  
                 _dpowers 0013                   _isdigit 031A                   delay@ms 0070  
                 _spiInit 032E                   _spiRead 02DF                   _sprintf 0660  
                 clrloop0 02CF                ??_lcd_init 0078      end_of_initialization 07FC  
              ??_spiWrite 0070                 _PORTCbits 0007                 _PORTDbits 0008  
               _TRISCbits 0087               spiWrite@dat 0070         __size_of_LCD_CHAR 000F  
       __size_of_LCD_DATO 0024            _spiReceiveWait 02D6            __end_of___bmul 035D  
     start_initialization 07EB  __CFG_FOSC$INTRC_NOCLKOUT 0000    __end_of_spiReceiveWait 02DF  
                ??___bmul 0071                 ___latbits 0002             __pcstackBANK0 004E  
       __size_of_lcd_init 001F               sprintf@flag 005D               sprintf@prec 0061  
        ___lwdiv@dividend 0072           ?_spiReceiveWait 0070                  ?___lwdiv 0070  
                ?___lwmod 0078         __size_of_spiWrite 0006                 _lcd_ready 03CB  
               __pstrings 0003                  ?_lcd_cmd 0070                  ?_lcd_lat 0070  
                ?_isdigit 0070                  ?_spiInit 0070                  ?_spiRead 0070  
        ___lwdiv@quotient 0075            __size_of_delay 0032                  ?_sprintf 004E  
          __size_of_setup 002B                  _LCD_CHAR 02E9                  _LCD_DATO 037C  
    spiInit@sTransmitEdge 0072                 clear_ram0 02CE        spiInit@sDataSample 0070  
              ?_lcd_ready 0070               __stringbase 0012          __size_of___lwdiv 004B  
        __size_of___lwmod 0041        __end_of__stringtab 0013               _isdigit$828 0070  
        __size_of_lcd_cmd 0012          __size_of_lcd_lat 0010                sprintf@val 005E  
        __size_of_isdigit 0014           ___lwdiv@divisor 0070           ___lwdiv@counter 0077  
                __ptext10 032E                  __ptext11 035D                  __ptext12 0308  
                __ptext13 03CB                  __ptext14 02F8                  __ptext15 03F8  
                __ptext16 049E                  __ptext17 02E9                  __ptext18 042A  
                __ptext19 037C          __size_of_spiInit 0016          __size_of_spiRead 000A  
       __CFG_BOR4V$BOR40V 0000                  _lcd_init 035D          __size_of_sprintf 018B  
           __size_of_main 0133                _LCD_CURSOR 042A                _LCD_STRING 049E  
                _spiWrite 02C8              spiInit@sType 0073                  lcd_cmd@x 0077  
       spiInit@sClockIdle 0071               ??_lcd_ready 0076                  isdigit@c 0071  
               sprintf@ap 005C                 sprintf@sp 0060          ___lwmod@dividend 007A  
        ??_spiReceiveWait 0070                 stringcode 000D                  sprintf@c 0062  
                sprintf@f 004E           ___lwmod@divisor 0078           ___lwmod@counter 007D  
                stringdir 000D                  stringtab 0003               LCD_DATO@var 0070  
             ?_LCD_CURSOR 0074               ?_LCD_STRING 0072  
