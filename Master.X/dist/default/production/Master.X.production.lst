

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Mar 12 05:38:14 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     	FNCALL	_main,_I2C_Master_Init
  1024                           	FNCALL	_main,_I2C_Master_Read
  1025                           	FNCALL	_main,_I2C_Master_Start
  1026                           	FNCALL	_main,_I2C_Master_Stop
  1027                           	FNCALL	_main,_I2C_Master_Write
  1028                           	FNCALL	_main,_LCD_CURSOR
  1029                           	FNCALL	_main,_LCD_DATO
  1030                           	FNCALL	_main,_LCD_STRING
  1031                           	FNCALL	_main,_MPU6050_Init
  1032                           	FNCALL	_main,_config
  1033                           	FNCALL	_main,_delay
  1034                           	FNCALL	_main,_lcd_init
  1035                           	FNCALL	_main,_mandar
  1036                           	FNCALL	_lcd_init,_lcd_cmd
  1037                           	FNCALL	_lcd_cmd,_lcd_lat
  1038                           	FNCALL	_lcd_cmd,_lcd_ready
  1039                           	FNCALL	_lcd_ready,_delay
  1040                           	FNCALL	_lcd_lat,_delay
  1041                           	FNCALL	_MPU6050_Init,_I2C_Master_Stop
  1042                           	FNCALL	_MPU6050_Init,_I2C_Master_Write
  1043                           	FNCALL	_MPU6050_Init,_I2C_Start
  1044                           	FNCALL	_I2C_Start,_I2C_Master_Wait
  1045                           	FNCALL	_I2C_Start,_I2C_Master_Write
  1046                           	FNCALL	_I2C_Master_Write,_I2C_Master_Wait
  1047                           	FNCALL	_I2C_Master_Stop,_I2C_Master_Wait
  1048                           	FNCALL	_LCD_STRING,_LCD_CHAR
  1049                           	FNCALL	_LCD_CURSOR,_LCD_DATO
  1050                           	FNCALL	_I2C_Master_Start,_I2C_Master_Wait
  1051                           	FNCALL	_I2C_Master_Read,_I2C_Master_Wait
  1052                           	FNCALL	_I2C_Master_Init,___lldiv
  1053                           	FNROOT	_main
  1054                           	global	_ala
  1055                           	global	_mot3
  1056                           	global	_mot2
  1057                           	global	_mot1
  1058                           	global	_valor4
  1059                           	global	_valor3
  1060                           	global	_valor2
  1061                           	global	_valor1
  1062                           	global	_TXREG
  1063                           _TXREG	set	0x19
  1064  0019                     	global	_RCSTAbits
  1065                           _RCSTAbits	set	0x18
  1066  0018                     	global	_PORTB
  1067                           _PORTB	set	0x6
  1068  0006                     	global	_PORTDbits
  1069                           _PORTDbits	set	0x8
  1070  0008                     	global	_SSPBUF
  1071                           _SSPBUF	set	0x13
  1072  0013                     	global	_SSPCON
  1073                           _SSPCON	set	0x14
  1074  0014                     	global	_SSPIF
  1075                           _SSPIF	set	0x63
  1076  0063                     	global	_PEIE
  1077                           _PEIE	set	0x5E
  1078  005E                     	global	_GIE
  1079                           _GIE	set	0x5F
  1080  005F                     	global	_SPBRGH
  1081                           _SPBRGH	set	0x9A
  1082  009A                     	global	_SPBRG
  1083                           _SPBRG	set	0x99
  1084  0099                     	global	_TXSTAbits
  1085                           _TXSTAbits	set	0x98
  1086  0098                     	global	_TRISB
  1087                           _TRISB	set	0x86
  1088  0086                     	global	_TRISD
  1089                           _TRISD	set	0x88
  1090  0088                     	global	_SSPCON2bits
  1091                           _SSPCON2bits	set	0x91
  1092  0091                     	global	_TRISCbits
  1093                           _TRISCbits	set	0x87
  1094  0087                     	global	_SSPSTAT
  1095                           _SSPSTAT	set	0x94
  1096  0094                     	global	_SSPADD
  1097                           _SSPADD	set	0x93
  1098  0093                     	global	_SSPCON2
  1099                           _SSPCON2	set	0x91
  1100  0091                     	global	_BF
  1101                           _BF	set	0x4A0
  1102  04A0                     	global	_RCEN
  1103                           _RCEN	set	0x48B
  1104  048B                     	global	_ACKEN
  1105                           _ACKEN	set	0x48C
  1106  048C                     	global	_ACKDT
  1107                           _ACKDT	set	0x48D
  1108  048D                     	global	_SEN
  1109                           _SEN	set	0x488
  1110  0488                     	global	_SSPIE
  1111                           _SSPIE	set	0x463
  1112  0463                     	global	_TRISC4
  1113                           _TRISC4	set	0x43C
  1114  043C                     	global	_TRISC3
  1115                           _TRISC3	set	0x43B
  1116  043B                     	global	_BAUDCTLbits
  1117                           _BAUDCTLbits	set	0x187
  1118  0187                     psect	strings,class=STRING,delta=2,noexec
  1119                           global __pstrings
  1120                           __pstrings:
  1121  0003                     stringtab:
  1122  0003                     	global    __stringtab
  1123                           __stringtab:
  1124  0003                     ;	String table - string pointers are 1 byte each
  1125                           stringcode:stringdir:
  1126  0003                     movlw high(stringdir)
      + 0003                     stringdir:	
  1127  0003  3000               movwf pclath
  1128  0004  008A               movf fsr,w
  1129  0005  0804               incf fsr
  1130  0006  0A84               	addwf pc
  1131  0007  0782               	global __stringbase
  1132                           __stringbase:
  1133  0008                     	retlw	0
  1134  0008  3400               psect	strings
  1135                           	global    __end_of__stringtab
  1136                           __end_of__stringtab:
  1137  0009                     	
  1138                           STR_3:	
  1139  0009                     	retlw	32	;' '
  1140  0009  3420               	retlw	86	;'V'
  1141  000A  3456               	retlw	49	;'1'
  1142  000B  3431               	retlw	32	;' '
  1143  000C  3420               	retlw	32	;' '
  1144  000D  3420               	retlw	32	;' '
  1145  000E  3420               	retlw	32	;' '
  1146  000F  3420               	retlw	86	;'V'
  1147  0010  3456               	retlw	50	;'2'
  1148  0011  3432               	retlw	32	;' '
  1149  0012  3420               	retlw	32	;' '
  1150  0013  3420               	retlw	32	;' '
  1151  0014  3420               	retlw	32	;' '
  1152  0015  3420               	retlw	32	;' '
  1153  0016  3420               	retlw	86	;'V'
  1154  0017  3456               	retlw	51	;'3'
  1155  0018  3433               	retlw	0
  1156  0019  3400               psect	strings
  1157                           	
  1158                           STR_2:	
  1159  001A                     	retlw	69	;'E'
  1160  001A  3445               	retlw	83	;'S'
  1161  001B  3453               	retlw	84	;'T'
  1162  001C  3454               	retlw	82	;'R'
  1163  001D  3452               	retlw	65	;'A'
  1164  001E  3441               	retlw	68	;'D'
  1165  001F  3444               	retlw	65	;'A'
  1166  0020  3441               	retlw	32	;' '
  1167  0021  3420               	retlw	32	;' '
  1168  0022  3420               	retlw	35	;'#'
  1169  0023  3423               	retlw	49	;'1'
  1170  0024  3431               	retlw	55	;'7'
  1171  0025  3437               	retlw	48	;'0'
  1172  0026  3430               	retlw	55	;'7'
  1173  0027  3437               	retlw	56	;'8'
  1174  0028  3438               	retlw	0
  1175  0029  3400               psect	strings
  1176                           	
  1177                           STR_1:	
  1178  002A                     	retlw	74	;'J'
  1179  002A  344A               	retlw	79	;'O'
  1180  002B  344F               	retlw	83	;'S'
  1181  002C  3453               	retlw	69	;'E'
  1182  002D  3445               	retlw	32	;' '
  1183  002E  3420               	retlw	74	;'J'
  1184  002F  344A               	retlw	65	;'A'
  1185  0030  3441               	retlw	86	;'V'
  1186  0031  3456               	retlw	73	;'I'
  1187  0032  3449               	retlw	69	;'E'
  1188  0033  3445               	retlw	82	;'R'
  1189  0034  3452               	retlw	0
  1190  0035  3400               psect	strings
  1191                           ; #config settings
  1192                           global __CFG_FOSC$INTRC_NOCLKOUT
  1193                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1194  0000                     global __CFG_WDTE$OFF
  1195                           __CFG_WDTE$OFF equ 0x0
  1196  0000                     global __CFG_PWRTE$OFF
  1197                           __CFG_PWRTE$OFF equ 0x0
  1198  0000                     global __CFG_MCLRE$OFF
  1199                           __CFG_MCLRE$OFF equ 0x0
  1200  0000                     global __CFG_CP$OFF
  1201                           __CFG_CP$OFF equ 0x0
  1202  0000                     global __CFG_CPD$OFF
  1203                           __CFG_CPD$OFF equ 0x0
  1204  0000                     global __CFG_BOREN$OFF
  1205                           __CFG_BOREN$OFF equ 0x0
  1206  0000                     global __CFG_IESO$OFF
  1207                           __CFG_IESO$OFF equ 0x0
  1208  0000                     global __CFG_FCMEN$OFF
  1209                           __CFG_FCMEN$OFF equ 0x0
  1210  0000                     global __CFG_LVP$OFF
  1211                           __CFG_LVP$OFF equ 0x0
  1212  0000                     global __CFG_BOR4V$BOR40V
  1213                           __CFG_BOR4V$BOR40V equ 0x0
  1214  0000                     global __CFG_WRT$OFF
  1215                           __CFG_WRT$OFF equ 0x0
  1216  0000                     	file	"C:\Users\JOSJAV~1\AppData\Local\Temp\sd20."
  1217                           	line	#
  1218                           psect cinit,class=CODE,delta=2
  1219                           global start_initialization
  1220                           start_initialization:
  1221  07F3                     
  1222                           global __initialization
  1223                           __initialization:
  1224  07F3                     psect	bssBANK0,class=BANK0,space=1,noexec
  1225                           global __pbssBANK0
  1226                           __pbssBANK0:
  1227  0020                     _valor:
  1228  0020                            ds      16
  1229  0020                     
  1230                           _ala:
  1231  0030                            ds      2
  1232  0030                     
  1233                           _mot3:
  1234  0032                            ds      2
  1235  0032                     
  1236                           _mot2:
  1237  0034                            ds      2
  1238  0034                     
  1239                           _mot1:
  1240  0036                            ds      2
  1241  0036                     
  1242                           _valor4:
  1243  0038                            ds      2
  1244  0038                     
  1245                           _valor3:
  1246  003A                            ds      2
  1247  003A                     
  1248                           _valor2:
  1249  003C                            ds      2
  1250  003C                     
  1251                           _valor1:
  1252  003E                            ds      2
  1253  003E                     
  1254                           	file	"C:\Users\JOSJAV~1\AppData\Local\Temp\sd20."
  1255                           	line	#
  1256                           psect clrtext,class=CODE,delta=2
  1257                           global clear_ram0
  1258                           ;	Called with FSR containing the base address, and
  1259                           ;	W with the last address+1
  1260                           clear_ram0:
  1261  029B                     	clrwdt			;clear the watchdog before getting into this loop
  1262  029B  0064               clrloop0:
  1263  029C                     	clrf	indf		;clear RAM location pointed to by FSR
  1264  029C  0180               	incf	fsr,f		;increment pointer
  1265  029D  0A84               	xorwf	fsr,w		;XOR with final address
  1266  029E  0604               	btfsc	status,2	;have we reached the end yet?
  1267  029F  1903               	retlw	0		;all done for this memory range, return
  1268  02A0  3400               	xorwf	fsr,w		;XOR again to restore value
  1269  02A1  0604               	goto	clrloop0		;do the next byte
  1270  02A2  2A9C               
  1271                           ; Clear objects allocated to BANK0
  1272                           psect cinit,class=CODE,delta=2,merge=1
  1273                           	bcf	status, 7	;select IRP bank0
  1274  07F3  1383               	movlw	low(__pbssBANK0)
  1275  07F4  3020               	movwf	fsr
  1276  07F5  0084               	movlw	low((__pbssBANK0)+020h)
  1277  07F6  3040               	fcall	clear_ram0
  1278  07F7  120A  118A  229B  120A  118A  psect cinit,class=CODE,delta=2,merge=1
  1279                           global end_of_initialization,__end_of__initialization
  1280                           
  1281                           ;End of C runtime variable initialization code
  1282                           
  1283                           end_of_initialization:
  1284  07FC                     __end_of__initialization:
  1285  07FC                     clrf status
  1286  07FC  0183               ljmp _main	;jump to C main() function
  1287  07FD  120A  118A  2DB3   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1288                           global __pcstackCOMMON
  1289                           __pcstackCOMMON:
  1290  0070                     ?_delay:	; 1 bytes @ 0x0
  1291  0070                     ?_MPU6050_Init:	; 1 bytes @ 0x0
  1292  0070                     ?_config:	; 1 bytes @ 0x0
  1293  0070                     ??_config:	; 1 bytes @ 0x0
  1294  0070                     ?_mandar:	; 1 bytes @ 0x0
  1295  0070                     ?_I2C_Master_Wait:	; 1 bytes @ 0x0
  1296  0070                     ??_I2C_Master_Wait:	; 1 bytes @ 0x0
  1297  0070                     ?_I2C_Master_Start:	; 1 bytes @ 0x0
  1298  0070                     ??_I2C_Master_Start:	; 1 bytes @ 0x0
  1299  0070                     ?_I2C_Master_Stop:	; 1 bytes @ 0x0
  1300  0070                     ??_I2C_Master_Stop:	; 1 bytes @ 0x0
  1301  0070                     ?_I2C_Master_Write:	; 1 bytes @ 0x0
  1302  0070                     ?_I2C_Start:	; 1 bytes @ 0x0
  1303  0070                     ?_lcd_lat:	; 1 bytes @ 0x0
  1304  0070                     ?_lcd_ready:	; 1 bytes @ 0x0
  1305  0070                     ?_lcd_cmd:	; 1 bytes @ 0x0
  1306  0070                     ?_lcd_init:	; 1 bytes @ 0x0
  1307  0070                     ?_LCD_DATO:	; 1 bytes @ 0x0
  1308  0070                     ?_LCD_CHAR:	; 1 bytes @ 0x0
  1309  0070                     ??_LCD_CHAR:	; 1 bytes @ 0x0
  1310  0070                     ?_LCD_STRING:	; 1 bytes @ 0x0
  1311  0070                     ?_main:	; 1 bytes @ 0x0
  1312  0070                     	global	?_I2C_Master_Read
  1313                           ?_I2C_Master_Read:	; 2 bytes @ 0x0
  1314  0070                     	global	?___lldiv
  1315                           ?___lldiv:	; 4 bytes @ 0x0
  1316  0070                     	global	I2C_Master_Write@d
  1317                           I2C_Master_Write@d:	; 2 bytes @ 0x0
  1318  0070                     	global	I2C_Master_Read@a
  1319                           I2C_Master_Read@a:	; 2 bytes @ 0x0
  1320  0070                     	global	delay@ms
  1321                           delay@ms:	; 2 bytes @ 0x0
  1322  0070                     	global	LCD_DATO@var
  1323                           LCD_DATO@var:	; 2 bytes @ 0x0
  1324  0070                     	global	mandar@dato
  1325                           mandar@dato:	; 2 bytes @ 0x0
  1326  0070                     	global	___lldiv@divisor
  1327                           ___lldiv@divisor:	; 4 bytes @ 0x0
  1328  0070                     	ds	1
  1329  0070                     	global	LCD_CHAR@a
  1330                           LCD_CHAR@a:	; 1 bytes @ 0x1
  1331  0071                     	ds	1
  1332  0071                     ??_delay:	; 1 bytes @ 0x2
  1333  0072                     ??_mandar:	; 1 bytes @ 0x2
  1334  0072                     ??_I2C_Master_Write:	; 1 bytes @ 0x2
  1335  0072                     ??_I2C_Master_Read:	; 1 bytes @ 0x2
  1336  0072                     ??_I2C_Start:	; 1 bytes @ 0x2
  1337  0072                     ??_LCD_DATO:	; 1 bytes @ 0x2
  1338  0072                     ??_LCD_STRING:	; 1 bytes @ 0x2
  1339  0072                     	global	delay@j
  1340                           delay@j:	; 2 bytes @ 0x2
  1341  0072                     	global	LCD_STRING@n
  1342                           LCD_STRING@n:	; 2 bytes @ 0x2
  1343  0072                     	ds	2
  1344  0072                     ?_LCD_CURSOR:	; 1 bytes @ 0x4
  1345  0074                     	global	I2C_Start@add
  1346                           I2C_Start@add:	; 1 bytes @ 0x4
  1347  0074                     	global	LCD_STRING@a
  1348                           LCD_STRING@a:	; 1 bytes @ 0x4
  1349  0074                     	global	I2C_Master_Read@temp
  1350                           I2C_Master_Read@temp:	; 2 bytes @ 0x4
  1351  0074                     	global	delay@i
  1352                           delay@i:	; 2 bytes @ 0x4
  1353  0074                     	global	LCD_CURSOR@a
  1354                           LCD_CURSOR@a:	; 2 bytes @ 0x4
  1355  0074                     	global	___lldiv@dividend
  1356                           ___lldiv@dividend:	; 4 bytes @ 0x4
  1357  0074                     	ds	1
  1358  0074                     ??_MPU6050_Init:	; 1 bytes @ 0x5
  1359  0075                     	ds	1
  1360  0075                     ??_lcd_lat:	; 1 bytes @ 0x6
  1361  0076                     ??_lcd_ready:	; 1 bytes @ 0x6
  1362  0076                     	global	LCD_CURSOR@b
  1363                           LCD_CURSOR@b:	; 2 bytes @ 0x6
  1364  0076                     	ds	1
  1365  0076                     ??_lcd_cmd:	; 1 bytes @ 0x7
  1366  0077                     	global	lcd_cmd@x
  1367                           lcd_cmd@x:	; 1 bytes @ 0x7
  1368  0077                     	ds	1
  1369  0077                     ??_lcd_init:	; 1 bytes @ 0x8
  1370  0078                     ??_LCD_CURSOR:	; 1 bytes @ 0x8
  1371  0078                     ??___lldiv:	; 1 bytes @ 0x8
  1372  0078                     	global	LCD_CURSOR@d
  1373                           LCD_CURSOR@d:	; 2 bytes @ 0x8
  1374  0078                     	ds	1
  1375  0078                     	global	___lldiv@quotient
  1376                           ___lldiv@quotient:	; 4 bytes @ 0x9
  1377  0079                     	ds	4
  1378  0079                     	global	___lldiv@counter
  1379                           ___lldiv@counter:	; 1 bytes @ 0xD
  1380  007D                     	ds	1
  1381  007D                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1382                           global __pcstackBANK0
  1383                           __pcstackBANK0:
  1384  0040                     ?_I2C_Master_Init:	; 1 bytes @ 0x0
  1385  0040                     	global	I2C_Master_Init@c
  1386                           I2C_Master_Init@c:	; 4 bytes @ 0x0
  1387  0040                     	ds	4
  1388  0040                     ??_I2C_Master_Init:	; 1 bytes @ 0x4
  1389  0044                     	ds	4
  1390  0044                     ??_main:	; 1 bytes @ 0x8
  1391  0048                     	ds	2
  1392  0048                     ;!
  1393                           ;!Data Sizes:
  1394                           ;!    Strings     45
  1395                           ;!    Constant    0
  1396                           ;!    Data        0
  1397                           ;!    BSS         32
  1398                           ;!    Persistent  0
  1399                           ;!    Stack       0
  1400                           ;!
  1401                           ;!Auto Spaces:
  1402                           ;!    Space          Size  Autos    Used
  1403                           ;!    COMMON           14     14      14
  1404                           ;!    BANK0            80     10      42
  1405                           ;!    BANK1            80      0       0
  1406                           ;!    BANK3            96      0       0
  1407                           ;!    BANK2            96      0       0
  1408                           
  1409                           ;!
  1410                           ;!Pointer List with Targets:
  1411                           ;!
  1412                           ;!    LCD_STRING@a	PTR unsigned char  size(1) Largest target is 17
  1413                           ;!		 -> STR_3(CODE[17]), STR_2(CODE[16]), STR_1(CODE[12]), 
  1414                           ;!
  1415                           
  1416                           
  1417                           ;!
  1418                           ;!Critical Paths under _main in COMMON
  1419                           ;!
  1420                           ;!    _lcd_init->_lcd_cmd
  1421                           ;!    _lcd_cmd->_lcd_ready
  1422                           ;!    _lcd_ready->_delay
  1423                           ;!    _lcd_lat->_delay
  1424                           ;!    _MPU6050_Init->_I2C_Start
  1425                           ;!    _I2C_Start->_I2C_Master_Write
  1426                           ;!    _LCD_STRING->_LCD_CHAR
  1427                           ;!    _LCD_CURSOR->_LCD_DATO
  1428                           ;!    _I2C_Master_Init->___lldiv
  1429                           ;!
  1430                           ;!Critical Paths under _main in BANK0
  1431                           ;!
  1432                           ;!    _main->_I2C_Master_Init
  1433                           ;!
  1434                           ;!Critical Paths under _main in BANK1
  1435                           ;!
  1436                           ;!    None.
  1437                           ;!
  1438                           ;!Critical Paths under _main in BANK3
  1439                           ;!
  1440                           ;!    None.
  1441                           ;!
  1442                           ;!Critical Paths under _main in BANK2
  1443                           ;!
  1444                           ;!    None.
  1445                           
  1446 ;;
  1447 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1448 ;;
  1449                           
  1450                           ;!
  1451                           ;!Call Graph Tables:
  1452                           ;!
  1453                           ;! ---------------------------------------------------------------------------------
  1454                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1455                           ;! ---------------------------------------------------------------------------------
  1456                           ;! (0) _main                                                 2     2      0    9462
  1457                           ;!                                              8 BANK0      2     2      0
  1458                           ;!                    _I2C_Master_Init
  1459                           ;!                    _I2C_Master_Read
  1460                           ;!                   _I2C_Master_Start
  1461                           ;!                    _I2C_Master_Stop
  1462                           ;!                   _I2C_Master_Write
  1463                           ;!                         _LCD_CURSOR
  1464                           ;!                           _LCD_DATO
  1465                           ;!                         _LCD_STRING
  1466                           ;!                       _MPU6050_Init
  1467                           ;!                             _config
  1468                           ;!                              _delay
  1469                           ;!                           _lcd_init
  1470                           ;!                             _mandar
  1471                           ;! ---------------------------------------------------------------------------------
  1472                           ;! (1) _mandar                                               2     0      2     782
  1473                           ;!                                              0 COMMON     2     0      2
  1474                           ;! ---------------------------------------------------------------------------------
  1475                           ;! (1) _lcd_init                                             0     0      0     814
  1476                           ;!                            _lcd_cmd
  1477                           ;! ---------------------------------------------------------------------------------
  1478                           ;! (2) _lcd_cmd                                              1     1      0     814
  1479                           ;!                                              7 COMMON     1     1      0
  1480                           ;!                            _lcd_lat
  1481                           ;!                          _lcd_ready
  1482                           ;! ---------------------------------------------------------------------------------
  1483                           ;! (3) _lcd_ready                                            1     1      0     396
  1484                           ;!                                              6 COMMON     1     1      0
  1485                           ;!                              _delay
  1486                           ;! ---------------------------------------------------------------------------------
  1487                           ;! (3) _lcd_lat                                              0     0      0     396
  1488                           ;!                              _delay
  1489                           ;! ---------------------------------------------------------------------------------
  1490                           ;! (4) _delay                                                6     4      2     396
  1491                           ;!                                              0 COMMON     6     4      2
  1492                           ;! ---------------------------------------------------------------------------------
  1493                           ;! (1) _config                                               0     0      0       0
  1494                           ;! ---------------------------------------------------------------------------------
  1495                           ;! (1) _MPU6050_Init                                         0     0      0    3714
  1496                           ;!                    _I2C_Master_Stop
  1497                           ;!                   _I2C_Master_Write
  1498                           ;!                          _I2C_Start
  1499                           ;! ---------------------------------------------------------------------------------
  1500                           ;! (2) _I2C_Start                                            3     3      0    1868
  1501                           ;!                                              2 COMMON     3     3      0
  1502                           ;!                    _I2C_Master_Wait
  1503                           ;!                   _I2C_Master_Write
  1504                           ;! ---------------------------------------------------------------------------------
  1505                           ;! (3) _I2C_Master_Write                                     2     0      2    1846
  1506                           ;!                                              0 COMMON     2     0      2
  1507                           ;!                    _I2C_Master_Wait
  1508                           ;! ---------------------------------------------------------------------------------
  1509                           ;! (2) _I2C_Master_Stop                                      0     0      0       0
  1510                           ;!                    _I2C_Master_Wait
  1511                           ;! ---------------------------------------------------------------------------------
  1512                           ;! (1) _LCD_STRING                                           3     3      0     211
  1513                           ;!                                              2 COMMON     3     3      0
  1514                           ;!                           _LCD_CHAR
  1515                           ;! ---------------------------------------------------------------------------------
  1516                           ;! (2) _LCD_CHAR                                             2     2      0      22
  1517                           ;!                                              0 COMMON     2     2      0
  1518                           ;! ---------------------------------------------------------------------------------
  1519                           ;! (1) _LCD_CURSOR                                           6     2      4     612
  1520                           ;!                                              4 COMMON     6     2      4
  1521                           ;!                           _LCD_DATO
  1522                           ;! ---------------------------------------------------------------------------------
  1523                           ;! (1) _LCD_DATO                                             4     2      2     326
  1524                           ;!                                              0 COMMON     4     2      2
  1525                           ;! ---------------------------------------------------------------------------------
  1526                           ;! (1) _I2C_Master_Start                                     0     0      0       0
  1527                           ;!                    _I2C_Master_Wait
  1528                           ;! ---------------------------------------------------------------------------------
  1529                           ;! (1) _I2C_Master_Read                                      6     4      2     349
  1530                           ;!                                              0 COMMON     6     4      2
  1531                           ;!                    _I2C_Master_Wait
  1532                           ;! ---------------------------------------------------------------------------------
  1533                           ;! (4) _I2C_Master_Wait                                      0     0      0       0
  1534                           ;! ---------------------------------------------------------------------------------
  1535                           ;! (1) _I2C_Master_Init                                      8     4      4     412
  1536                           ;!                                              0 BANK0      8     4      4
  1537                           ;!                            ___lldiv
  1538                           ;! ---------------------------------------------------------------------------------
  1539                           ;! (2) ___lldiv                                             14     6      8     314
  1540                           ;!                                              0 COMMON    14     6      8
  1541                           ;! ---------------------------------------------------------------------------------
  1542                           ;! Estimated maximum stack depth 4
  1543                           ;! ---------------------------------------------------------------------------------
  1544                           ;!
  1545                           ;! Call Graph Graphs:
  1546                           ;!
  1547                           ;! _main (ROOT)
  1548                           ;!   _I2C_Master_Init
  1549                           ;!     ___lldiv
  1550                           ;!   _I2C_Master_Read
  1551                           ;!     _I2C_Master_Wait
  1552                           ;!   _I2C_Master_Start
  1553                           ;!     _I2C_Master_Wait
  1554                           ;!   _I2C_Master_Stop
  1555                           ;!     _I2C_Master_Wait
  1556                           ;!   _I2C_Master_Write
  1557                           ;!     _I2C_Master_Wait
  1558                           ;!   _LCD_CURSOR
  1559                           ;!     _LCD_DATO
  1560                           ;!   _LCD_DATO
  1561                           ;!   _LCD_STRING
  1562                           ;!     _LCD_CHAR
  1563                           ;!   _MPU6050_Init
  1564                           ;!     _I2C_Master_Stop
  1565                           ;!       _I2C_Master_Wait
  1566                           ;!     _I2C_Master_Write
  1567                           ;!       _I2C_Master_Wait
  1568                           ;!     _I2C_Start
  1569                           ;!       _I2C_Master_Wait
  1570                           ;!       _I2C_Master_Write
  1571                           ;!         _I2C_Master_Wait
  1572                           ;!   _config
  1573                           ;!   _delay
  1574                           ;!   _lcd_init
  1575                           ;!     _lcd_cmd
  1576                           ;!       _lcd_lat
  1577                           ;!         _delay
  1578                           ;!       _lcd_ready
  1579                           ;!         _delay
  1580                           ;!   _mandar
  1581                           ;!
  1582                           
  1583                           ;! Address spaces:
  1584                           
  1585                           ;!Name               Size   Autos  Total    Cost      Usage
  1586                           ;!BITCOMMON            E      0       0       0        0.0%
  1587                           ;!EEDATA             100      0       0       0        0.0%
  1588                           ;!NULL                 0      0       0       0        0.0%
  1589                           ;!CODE                 0      0       0       0        0.0%
  1590                           ;!COMMON               E      E       E       1      100.0%
  1591                           ;!BITSFR0              0      0       0       1        0.0%
  1592                           ;!SFR0                 0      0       0       1        0.0%
  1593                           ;!BITSFR1              0      0       0       2        0.0%
  1594                           ;!SFR1                 0      0       0       2        0.0%
  1595                           ;!STACK                0      0       0       2        0.0%
  1596                           ;!ABS                  0      0      38       3        0.0%
  1597                           ;!BITBANK0            50      0       0       4        0.0%
  1598                           ;!BITSFR3              0      0       0       4        0.0%
  1599                           ;!SFR3                 0      0       0       4        0.0%
  1600                           ;!BANK0               50      A      2A       5       52.5%
  1601                           ;!BITSFR2              0      0       0       5        0.0%
  1602                           ;!SFR2                 0      0       0       5        0.0%
  1603                           ;!BITBANK1            50      0       0       6        0.0%
  1604                           ;!BANK1               50      0       0       7        0.0%
  1605                           ;!BITBANK3            60      0       0       8        0.0%
  1606                           ;!BANK3               60      0       0       9        0.0%
  1607                           ;!BITBANK2            60      0       0      10        0.0%
  1608                           ;!BANK2               60      0       0      11        0.0%
  1609                           ;!DATA                 0      0      38      12        0.0%
  1610                           
  1611                           	global	_main
  1612                           
  1613 ;; *************** function _main *****************
  1614 ;; Defined at:
  1615 ;;		line 41 in file "Pri-Master.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;		None
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;		None
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      void 
  1622 ;; Registers used:
  1623 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1624 ;; Tracked objects:
  1625 ;;		On entry : B00/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1629 ;;      Params:         0       0       0       0       0
  1630 ;;      Locals:         0       0       0       0       0
  1631 ;;      Temps:          0       2       0       0       0
  1632 ;;      Totals:         0       2       0       0       0
  1633 ;;Total ram usage:        2 bytes
  1634 ;; Hardware stack levels required when called:    4
  1635 ;; This function calls:
  1636 ;;		_I2C_Master_Init
  1637 ;;		_I2C_Master_Read
  1638 ;;		_I2C_Master_Start
  1639 ;;		_I2C_Master_Stop
  1640 ;;		_I2C_Master_Write
  1641 ;;		_LCD_CURSOR
  1642 ;;		_LCD_DATO
  1643 ;;		_LCD_STRING
  1644 ;;		_MPU6050_Init
  1645 ;;		_config
  1646 ;;		_delay
  1647 ;;		_lcd_init
  1648 ;;		_mandar
  1649 ;; This function is called by:
  1650 ;;		Startup code after reset
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1654                           	file	"Pri-Master.c"
  1655                           	line	41
  1656                           global __pmaintext
  1657                           __pmaintext:	;psect for function _main
  1658  05B3                     psect	maintext
  1659                           	file	"Pri-Master.c"
  1660                           	line	41
  1661                           	global	__size_of_main
  1662                           	__size_of_main	equ	__end_of_main-_main
  1663  0240                     	
  1664                           _main:	
  1665  05B3                     ;incstack = 0
  1666                           	opt	stack 4
  1667                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1668                           	line	42
  1669                           	
  1670                           l1381:	
  1671  05B3                     ;Pri-Master.c: 42:         I2C_Master_Stop();
  1672                           	bsf	status, 5	;RP0=1, select bank1
  1673  05B3  1683               	bcf	status, 6	;RP1=0, select bank1
  1674  05B4  1303               	clrf	(136)^080h	;volatile
  1675  05B5  0188               	line	43
  1676                           ;Pri-Master.c: 43:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1677                           	clrf	(134)^080h	;volatile
  1678  05B6  0186               	line	44
  1679                           	
  1680                           l1383:	
  1681  05B7                     ;Pri-Master.c: 44: 
  1682                           	movlw	0
  1683  05B7  3000               	bcf	status, 5	;RP0=0, select bank0
  1684  05B8  1283               	bcf	status, 6	;RP1=0, select bank0
  1685  05B9  1303               	movwf	(I2C_Master_Init@c+3)
  1686  05BA  00C3               	movlw	01h
  1687  05BB  3001               	movwf	(I2C_Master_Init@c+2)
  1688  05BC  00C2               	movlw	086h
  1689  05BD  3086               	movwf	(I2C_Master_Init@c+1)
  1690  05BE  00C1               	movlw	0A0h
  1691  05BF  30A0               	movwf	(I2C_Master_Init@c)
  1692  05C0  00C0               
  1693                           	fcall	_I2C_Master_Init
  1694  05C1  120A  118A  2461  120A  118A  	line	45
  1695                           	
  1696                           l1385:	
  1697  05C6                     ;Pri-Master.c: 45: 
  1698                           	fcall	_MPU6050_Init
  1699  05C6  120A  118A  2506  120A  118A  	line	46
  1700                           	
  1701                           l1387:	
  1702  05CB                     ;Pri-Master.c: 46:         I2C_Master_Start();
  1703                           	fcall	_config
  1704  05CB  120A  118A  230C  120A  118A  	line	47
  1705                           	
  1706                           l1389:	
  1707  05D0                     ;Pri-Master.c: 47:         I2C_Master_Write(0x81);
  1708                           	fcall	_lcd_init
  1709  05D0  120A  118A  2336  120A  118A  	line	48
  1710                           	
  1711                           l1391:	
  1712  05D5                     ;Pri-Master.c: 48:         valor4 = I2C_Master_Read(0);
  1713                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  1714  05D5  3022               	fcall	_LCD_STRING
  1715  05D6  120A  118A  2379  120A  118A  	line	49
  1716                           	
  1717                           l1393:	
  1718  05DB                     ;Pri-Master.c: 49:         I2C_Master_Stop();
  1719                           	movlw	0C0h
  1720  05DB  30C0               	movwf	(LCD_DATO@var)
  1721  05DC  00F0               	movlw	0
  1722  05DD  3000               	movwf	((LCD_DATO@var))+1
  1723  05DE  00F1               	fcall	_LCD_DATO
  1724  05DF  120A  118A  2355  120A  118A  	line	50
  1725                           	
  1726                           l1395:	
  1727  05E4                     ;Pri-Master.c: 50:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1728                           	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  1729  05E4  3012               	fcall	_LCD_STRING
  1730  05E5  120A  118A  2379  120A  118A  	line	51
  1731                           	
  1732                           l1397:	
  1733  05EA                     ;Pri-Master.c: 51: 
  1734                           	movlw	0F4h
  1735  05EA  30F4               	movwf	(delay@ms)
  1736  05EB  00F0               	movlw	01h
  1737  05EC  3001               	movwf	((delay@ms))+1
  1738  05ED  00F1               	fcall	_delay
  1739  05EE  120A  118A  23FC  120A  118A  	line	52
  1740                           	
  1741                           l1399:	
  1742  05F3                     ;Pri-Master.c: 52: 
  1743                           	movlw	01h
  1744  05F3  3001               	movwf	(LCD_DATO@var)
  1745  05F4  00F0               	movlw	0
  1746  05F5  3000               	movwf	((LCD_DATO@var))+1
  1747  05F6  00F1               	fcall	_LCD_DATO
  1748  05F7  120A  118A  2355  120A  118A  	line	53
  1749                           	
  1750                           l1401:	
  1751  05FC                     ;Pri-Master.c: 53: 
  1752                           	movlw	01h
  1753  05FC  3001               	movwf	(LCD_CURSOR@a)
  1754  05FD  00F4               	movlw	0
  1755  05FE  3000               	movwf	((LCD_CURSOR@a))+1
  1756  05FF  00F5               	movlw	01h
  1757  0600  3001               	movwf	(LCD_CURSOR@b)
  1758  0601  00F6               	movlw	0
  1759  0602  3000               	movwf	((LCD_CURSOR@b))+1
  1760  0603  00F7               	fcall	_LCD_CURSOR
  1761  0604  120A  118A  242E  120A  118A  	line	54
  1762                           	
  1763                           l1403:	
  1764  0609                     ;Pri-Master.c: 54: 
  1765                           	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  1766  0609  3001               	fcall	_LCD_STRING
  1767  060A  120A  118A  2379  120A  118A  	goto	l1405
  1768  060F  2E10               	line	55
  1769                           ;Pri-Master.c: 55:         if (valor1 == 1){
  1770                           	
  1771                           l194:	
  1772  0610                     	line	58
  1773                           	
  1774                           l1405:	
  1775  0610                     ;Pri-Master.c: 56:             mot1 = 1;;Pri-Master.c: 58:             mot1 = 0;
  1776                           	fcall	_I2C_Master_Start
  1777  0610  120A  118A  22A3  120A  118A  	line	59
  1778                           	
  1779                           l1407:	
  1780  0615                     ;Pri-Master.c: 59:         }
  1781                           	movlw	051h
  1782  0615  3051               	movwf	(I2C_Master_Write@d)
  1783  0616  00F0               	movlw	0
  1784  0617  3000               	movwf	((I2C_Master_Write@d))+1
  1785  0618  00F1               	fcall	_I2C_Master_Write
  1786  0619  120A  118A  22B5  120A  118A  	line	60
  1787                           	
  1788                           l1409:	
  1789  061E                     ;Pri-Master.c: 60: 
  1790                           	movlw	0
  1791  061E  3000               	movwf	(I2C_Master_Read@a)
  1792  061F  00F0               	movwf	(I2C_Master_Read@a+1)
  1793  0620  00F1               	fcall	_I2C_Master_Read
  1794  0621  120A  118A  23CD  120A  118A  	movf	(1+(?_I2C_Master_Read)),w
  1795  0626  0871               	bcf	status, 5	;RP0=0, select bank0
  1796  0627  1283               	bcf	status, 6	;RP1=0, select bank0
  1797  0628  1303               	movwf	(_valor1+1)
  1798  0629  00BF               	movf	(0+(?_I2C_Master_Read)),w
  1799  062A  0870               	movwf	(_valor1)
  1800  062B  00BE               	line	61
  1801                           	
  1802                           l1411:	
  1803  062C                     ;Pri-Master.c: 61:         if (valor2 <=10){
  1804                           	fcall	_I2C_Master_Stop
  1805  062C  120A  118A  22AC  120A  118A  	line	62
  1806                           	
  1807                           l1413:	
  1808  0631                     ;Pri-Master.c: 62:           ala = 1;
  1809                           	opt asmopt_push
  1810                           opt asmopt_off
  1811                           movlw	13
  1812  0631  300D               	bcf	status, 5	;RP0=0, select bank0
  1813  0632  1283               	bcf	status, 6	;RP1=0, select bank0
  1814  0633  1303               movwf	((??_main+0)+0+1),f
  1815  0634  00C9               	movlw	251
  1816  0635  30FB               movwf	((??_main+0)+0),f
  1817  0636  00C8               	u547:
  1818  0637                     decfsz	((??_main+0)+0),f
  1819  0637  0BC8               	goto	u547
  1820  0638  2E37               	decfsz	((??_main+0)+0+1),f
  1821  0639  0BC9               	goto	u547
  1822  063A  2E37               opt asmopt_pop
  1823                           
  1824                           	line	64
  1825                           	
  1826                           l1415:	
  1827  063B                     ;Pri-Master.c: 64:           ala = 0;
  1828                           	fcall	_I2C_Master_Start
  1829  063B  120A  118A  22A3  120A  118A  	line	65
  1830                           	
  1831                           l1417:	
  1832  0640                     ;Pri-Master.c: 65:         }
  1833                           	movlw	061h
  1834  0640  3061               	movwf	(I2C_Master_Write@d)
  1835  0641  00F0               	movlw	0
  1836  0642  3000               	movwf	((I2C_Master_Write@d))+1
  1837  0643  00F1               	fcall	_I2C_Master_Write
  1838  0644  120A  118A  22B5  120A  118A  	line	66
  1839                           	
  1840                           l1419:	
  1841  0649                     ;Pri-Master.c: 66:         if (valor4 == 1 && ala != 1){
  1842                           	movlw	0
  1843  0649  3000               	movwf	(I2C_Master_Read@a)
  1844  064A  00F0               	movwf	(I2C_Master_Read@a+1)
  1845  064B  00F1               	fcall	_I2C_Master_Read
  1846  064C  120A  118A  23CD  120A  118A  	movf	(1+(?_I2C_Master_Read)),w
  1847  0651  0871               	bcf	status, 5	;RP0=0, select bank0
  1848  0652  1283               	bcf	status, 6	;RP1=0, select bank0
  1849  0653  1303               	movwf	(_valor2+1)
  1850  0654  00BD               	movf	(0+(?_I2C_Master_Read)),w
  1851  0655  0870               	movwf	(_valor2)
  1852  0656  00BC               	line	67
  1853                           	
  1854                           l1421:	
  1855  0657                     ;Pri-Master.c: 67:             mot2 = 1;
  1856                           	fcall	_I2C_Master_Stop
  1857  0657  120A  118A  22AC  120A  118A  	line	68
  1858                           	
  1859                           l1423:	
  1860  065C                     ;Pri-Master.c: 68:         }else{
  1861                           	opt asmopt_push
  1862                           opt asmopt_off
  1863                           movlw	13
  1864  065C  300D               	bcf	status, 5	;RP0=0, select bank0
  1865  065D  1283               	bcf	status, 6	;RP1=0, select bank0
  1866  065E  1303               movwf	((??_main+0)+0+1),f
  1867  065F  00C9               	movlw	251
  1868  0660  30FB               movwf	((??_main+0)+0),f
  1869  0661  00C8               	u557:
  1870  0662                     decfsz	((??_main+0)+0),f
  1871  0662  0BC8               	goto	u557
  1872  0663  2E62               	decfsz	((??_main+0)+0+1),f
  1873  0664  0BC9               	goto	u557
  1874  0665  2E62               opt asmopt_pop
  1875                           
  1876                           	line	71
  1877                           	
  1878                           l1425:	
  1879  0666                     ;Pri-Master.c: 71: 
  1880                           	fcall	_I2C_Master_Start
  1881  0666  120A  118A  22A3  120A  118A  	line	72
  1882                           	
  1883                           l1427:	
  1884  066B                     ;Pri-Master.c: 72:         if (valor3 >= 100){
  1885                           	movlw	071h
  1886  066B  3071               	movwf	(I2C_Master_Write@d)
  1887  066C  00F0               	movlw	0
  1888  066D  3000               	movwf	((I2C_Master_Write@d))+1
  1889  066E  00F1               	fcall	_I2C_Master_Write
  1890  066F  120A  118A  22B5  120A  118A  	line	73
  1891                           	
  1892                           l1429:	
  1893  0674                     ;Pri-Master.c: 73:             mot3 = 1;
  1894                           	movlw	0
  1895  0674  3000               	movwf	(I2C_Master_Read@a)
  1896  0675  00F0               	movwf	(I2C_Master_Read@a+1)
  1897  0676  00F1               	fcall	_I2C_Master_Read
  1898  0677  120A  118A  23CD  120A  118A  	movf	(1+(?_I2C_Master_Read)),w
  1899  067C  0871               	bcf	status, 5	;RP0=0, select bank0
  1900  067D  1283               	bcf	status, 6	;RP1=0, select bank0
  1901  067E  1303               	movwf	(_valor3+1)
  1902  067F  00BB               	movf	(0+(?_I2C_Master_Read)),w
  1903  0680  0870               	movwf	(_valor3)
  1904  0681  00BA               	line	74
  1905                           	
  1906                           l1431:	
  1907  0682                     ;Pri-Master.c: 74:         }else{
  1908                           	fcall	_I2C_Master_Stop
  1909  0682  120A  118A  22AC  120A  118A  	line	75
  1910                           	
  1911                           l1433:	
  1912  0687                     ;Pri-Master.c: 75:             mot3 = 0;
  1913                           	opt asmopt_push
  1914                           opt asmopt_off
  1915                           movlw	13
  1916  0687  300D               	bcf	status, 5	;RP0=0, select bank0
  1917  0688  1283               	bcf	status, 6	;RP1=0, select bank0
  1918  0689  1303               movwf	((??_main+0)+0+1),f
  1919  068A  00C9               	movlw	251
  1920  068B  30FB               movwf	((??_main+0)+0),f
  1921  068C  00C8               	u567:
  1922  068D                     decfsz	((??_main+0)+0),f
  1923  068D  0BC8               	goto	u567
  1924  068E  2E8D               	decfsz	((??_main+0)+0+1),f
  1925  068F  0BC9               	goto	u567
  1926  0690  2E8D               opt asmopt_pop
  1927                           
  1928                           	line	78
  1929                           	
  1930                           l1435:	
  1931  0691                     ;Pri-Master.c: 78: 
  1932                           	fcall	_I2C_Master_Start
  1933  0691  120A  118A  22A3  120A  118A  	line	79
  1934                           	
  1935                           l1437:	
  1936  0696                     ;Pri-Master.c: 79:         I2C_Master_Start();
  1937                           	movlw	081h
  1938  0696  3081               	movwf	(I2C_Master_Write@d)
  1939  0697  00F0               	movlw	0
  1940  0698  3000               	movwf	((I2C_Master_Write@d))+1
  1941  0699  00F1               	fcall	_I2C_Master_Write
  1942  069A  120A  118A  22B5  120A  118A  	line	80
  1943                           	
  1944                           l1439:	
  1945  069F                     ;Pri-Master.c: 80:         I2C_Master_Write(0x50);
  1946                           	movlw	0
  1947  069F  3000               	movwf	(I2C_Master_Read@a)
  1948  06A0  00F0               	movwf	(I2C_Master_Read@a+1)
  1949  06A1  00F1               	fcall	_I2C_Master_Read
  1950  06A2  120A  118A  23CD  120A  118A  	movf	(1+(?_I2C_Master_Read)),w
  1951  06A7  0871               	bcf	status, 5	;RP0=0, select bank0
  1952  06A8  1283               	bcf	status, 6	;RP1=0, select bank0
  1953  06A9  1303               	movwf	(_valor4+1)
  1954  06AA  00B9               	movf	(0+(?_I2C_Master_Read)),w
  1955  06AB  0870               	movwf	(_valor4)
  1956  06AC  00B8               	line	81
  1957                           	
  1958                           l1441:	
  1959  06AD                     ;Pri-Master.c: 81:         I2C_Master_Write(mot1);
  1960                           	fcall	_I2C_Master_Stop
  1961  06AD  120A  118A  22AC  120A  118A  	line	82
  1962                           	
  1963                           l1443:	
  1964  06B2                     ;Pri-Master.c: 82:         I2C_Master_Stop();
  1965                           	opt asmopt_push
  1966                           opt asmopt_off
  1967                           movlw	13
  1968  06B2  300D               	bcf	status, 5	;RP0=0, select bank0
  1969  06B3  1283               	bcf	status, 6	;RP1=0, select bank0
  1970  06B4  1303               movwf	((??_main+0)+0+1),f
  1971  06B5  00C9               	movlw	251
  1972  06B6  30FB               movwf	((??_main+0)+0),f
  1973  06B7  00C8               	u577:
  1974  06B8                     decfsz	((??_main+0)+0),f
  1975  06B8  0BC8               	goto	u577
  1976  06B9  2EB8               	decfsz	((??_main+0)+0+1),f
  1977  06BA  0BC9               	goto	u577
  1978  06BB  2EB8               opt asmopt_pop
  1979                           
  1980                           	line	87
  1981                           	
  1982                           l1445:	
  1983  06BC                     ;Pri-Master.c: 87:         I2C_Master_Write(mot2);
  1984                           	bcf	status, 5	;RP0=0, select bank0
  1985  06BC  1283               	bcf	status, 6	;RP1=0, select bank0
  1986  06BD  1303               		decf	((_valor1)),w
  1987  06BE  033E               iorwf	((_valor1+1)),w
  1988  06BF  043F               	btfss	status,2
  1989  06C0  1D03               	goto	u491
  1990  06C1  2EC3               	goto	u490
  1991  06C2  2EC4               u491:
  1992  06C3                     	goto	l1449
  1993  06C3  2EC9               u490:
  1994  06C4                     	line	88
  1995                           	
  1996                           l1447:	
  1997  06C4                     ;Pri-Master.c: 88:         I2C_Master_Stop();
  1998                           	movlw	01h
  1999  06C4  3001               	movwf	(_mot1)
  2000  06C5  00B6               	movlw	0
  2001  06C6  3000               	movwf	((_mot1))+1
  2002  06C7  00B7               	line	89
  2003                           ;Pri-Master.c: 89:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2004                           	goto	l1451
  2005  06C8  2ECC               	
  2006                           l195:	
  2007  06C9                     	line	90
  2008                           	
  2009                           l1449:	
  2010  06C9                     ;Pri-Master.c: 90: 
  2011                           	clrf	(_mot1)
  2012  06C9  01B6               	clrf	(_mot1+1)
  2013  06CA  01B7               	goto	l1451
  2014  06CB  2ECC               	line	91
  2015                           ;Pri-Master.c: 91:         I2C_Master_Start();
  2016                           	
  2017                           l196:	
  2018  06CC                     	line	93
  2019                           	
  2020                           l1451:	
  2021  06CC                     ;Pri-Master.c: 93:         I2C_Master_Write(mot3);
  2022                           	movf	(_valor2+1),w
  2023  06CC  083D               	xorlw	80h
  2024  06CD  3A80               	movwf	btemp+1
  2025  06CE  00FF               	movlw	(0)^80h
  2026  06CF  3080               	subwf	btemp+1,w
  2027  06D0  027F               	skipz
  2028  06D1  1D03               	goto	u505
  2029  06D2  2ED5               	movlw	0Bh
  2030  06D3  300B               	subwf	(_valor2),w
  2031  06D4  023C               u505:
  2032  06D5                     
  2033                           	skipnc
  2034  06D5  1803               	goto	u501
  2035  06D6  2ED8               	goto	u500
  2036  06D7  2ED9               u501:
  2037  06D8                     	goto	l1455
  2038  06D8  2EE0               u500:
  2039  06D9                     	line	94
  2040                           	
  2041                           l1453:	
  2042  06D9                     ;Pri-Master.c: 94:         I2C_Master_Stop();
  2043                           	movlw	01h
  2044  06D9  3001               	bcf	status, 5	;RP0=0, select bank0
  2045  06DA  1283               	bcf	status, 6	;RP1=0, select bank0
  2046  06DB  1303               	movwf	(_ala)
  2047  06DC  00B0               	movlw	0
  2048  06DD  3000               	movwf	((_ala))+1
  2049  06DE  00B1               	line	95
  2050                           ;Pri-Master.c: 95:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2051                           	goto	l1457
  2052  06DF  2EE5               	
  2053                           l197:	
  2054  06E0                     	line	96
  2055                           	
  2056                           l1455:	
  2057  06E0                     ;Pri-Master.c: 96: 
  2058                           	bcf	status, 5	;RP0=0, select bank0
  2059  06E0  1283               	bcf	status, 6	;RP1=0, select bank0
  2060  06E1  1303               	clrf	(_ala)
  2061  06E2  01B0               	clrf	(_ala+1)
  2062  06E3  01B1               	goto	l1457
  2063  06E4  2EE5               	line	97
  2064                           ;Pri-Master.c: 97: 
  2065                           	
  2066                           l198:	
  2067  06E5                     	line	98
  2068                           	
  2069                           l1457:	
  2070  06E5                     ;Pri-Master.c: 98:         mandar(1);
  2071                           		decf	((_valor4)),w
  2072  06E5  0338               iorwf	((_valor4+1)),w
  2073  06E6  0439               	btfss	status,2
  2074  06E7  1D03               	goto	u511
  2075  06E8  2EEA               	goto	u510
  2076  06E9  2EEB               u511:
  2077  06EA                     	goto	l1463
  2078  06EA  2EF6               u510:
  2079  06EB                     	
  2080                           l1459:	
  2081  06EB                     		decf	((_ala)),w
  2082  06EB  0330               iorwf	((_ala+1)),w
  2083  06EC  0431               	btfsc	status,2
  2084  06ED  1903               	goto	u521
  2085  06EE  2EF0               	goto	u520
  2086  06EF  2EF1               u521:
  2087  06F0                     	goto	l1463
  2088  06F0  2EF6               u520:
  2089  06F1                     	line	99
  2090                           	
  2091                           l1461:	
  2092  06F1                     ;Pri-Master.c: 99:         mandar(valor1);
  2093                           	movlw	01h
  2094  06F1  3001               	movwf	(_mot2)
  2095  06F2  00B4               	movlw	0
  2096  06F3  3000               	movwf	((_mot2))+1
  2097  06F4  00B5               	line	100
  2098                           ;Pri-Master.c: 100:         mandar(2);
  2099                           	goto	l1465
  2100  06F5  2EF9               	
  2101                           l199:	
  2102  06F6                     	line	101
  2103                           	
  2104                           l1463:	
  2105  06F6                     ;Pri-Master.c: 101:         mandar(valor2);
  2106                           	clrf	(_mot2)
  2107  06F6  01B4               	clrf	(_mot2+1)
  2108  06F7  01B5               	goto	l1465
  2109  06F8  2EF9               	line	102
  2110                           ;Pri-Master.c: 102:         mandar(3);
  2111                           	
  2112                           l200:	
  2113  06F9                     	line	104
  2114                           	
  2115                           l1465:	
  2116  06F9                     ;Pri-Master.c: 104:         mandar(4);
  2117                           	movf	(_valor3+1),w
  2118  06F9  083B               	xorlw	80h
  2119  06FA  3A80               	movwf	btemp+1
  2120  06FB  00FF               	movlw	(0)^80h
  2121  06FC  3080               	subwf	btemp+1,w
  2122  06FD  027F               	skipz
  2123  06FE  1D03               	goto	u535
  2124  06FF  2F02               	movlw	064h
  2125  0700  3064               	subwf	(_valor3),w
  2126  0701  023A               u535:
  2127  0702                     
  2128                           	skipc
  2129  0702  1C03               	goto	u531
  2130  0703  2F05               	goto	u530
  2131  0704  2F06               u531:
  2132  0705                     	goto	l1469
  2133  0705  2F0D               u530:
  2134  0706                     	line	105
  2135                           	
  2136                           l1467:	
  2137  0706                     ;Pri-Master.c: 105:         mandar(valor1);
  2138                           	movlw	01h
  2139  0706  3001               	bcf	status, 5	;RP0=0, select bank0
  2140  0707  1283               	bcf	status, 6	;RP1=0, select bank0
  2141  0708  1303               	movwf	(_mot3)
  2142  0709  00B2               	movlw	0
  2143  070A  3000               	movwf	((_mot3))+1
  2144  070B  00B3               	line	106
  2145                           ;Pri-Master.c: 106:         mandar(5);
  2146                           	goto	l1471
  2147  070C  2F12               	
  2148                           l201:	
  2149  070D                     	line	107
  2150                           	
  2151                           l1469:	
  2152  070D                     ;Pri-Master.c: 107:         mandar(valor2);
  2153                           	bcf	status, 5	;RP0=0, select bank0
  2154  070D  1283               	bcf	status, 6	;RP1=0, select bank0
  2155  070E  1303               	clrf	(_mot3)
  2156  070F  01B2               	clrf	(_mot3+1)
  2157  0710  01B3               	goto	l1471
  2158  0711  2F12               	line	108
  2159                           ;Pri-Master.c: 108: 
  2160                           	
  2161                           l202:	
  2162  0712                     	line	111
  2163                           	
  2164                           l1471:	
  2165  0712                     	fcall	_I2C_Master_Start
  2166  0712  120A  118A  22A3  120A  118A  	line	112
  2167                           	
  2168                           l1473:	
  2169  0717                     	movlw	050h
  2170  0717  3050               	movwf	(I2C_Master_Write@d)
  2171  0718  00F0               	movlw	0
  2172  0719  3000               	movwf	((I2C_Master_Write@d))+1
  2173  071A  00F1               	fcall	_I2C_Master_Write
  2174  071B  120A  118A  22B5  120A  118A  	line	113
  2175                           	
  2176                           l1475:	
  2177  0720                     	bcf	status, 5	;RP0=0, select bank0
  2178  0720  1283               	bcf	status, 6	;RP1=0, select bank0
  2179  0721  1303               	movf	(_mot1+1),w
  2180  0722  0837               	movwf	(I2C_Master_Write@d+1)
  2181  0723  00F1               	movf	(_mot1),w
  2182  0724  0836               	movwf	(I2C_Master_Write@d)
  2183  0725  00F0               	fcall	_I2C_Master_Write
  2184  0726  120A  118A  22B5  120A  118A  	line	114
  2185                           	
  2186                           l1477:	
  2187  072B                     	fcall	_I2C_Master_Stop
  2188  072B  120A  118A  22AC  120A  118A  	line	115
  2189                           	
  2190                           l1479:	
  2191  0730                     	opt asmopt_push
  2192                           opt asmopt_off
  2193                           movlw	13
  2194  0730  300D               	bcf	status, 5	;RP0=0, select bank0
  2195  0731  1283               	bcf	status, 6	;RP1=0, select bank0
  2196  0732  1303               movwf	((??_main+0)+0+1),f
  2197  0733  00C9               	movlw	251
  2198  0734  30FB               movwf	((??_main+0)+0),f
  2199  0735  00C8               	u587:
  2200  0736                     decfsz	((??_main+0)+0),f
  2201  0736  0BC8               	goto	u587
  2202  0737  2F36               	decfsz	((??_main+0)+0+1),f
  2203  0738  0BC9               	goto	u587
  2204  0739  2F36               opt asmopt_pop
  2205                           
  2206                           	line	117
  2207                           	
  2208                           l1481:	
  2209  073A                     	fcall	_I2C_Master_Start
  2210  073A  120A  118A  22A3  120A  118A  	line	118
  2211                           	
  2212                           l1483:	
  2213  073F                     	movlw	060h
  2214  073F  3060               	movwf	(I2C_Master_Write@d)
  2215  0740  00F0               	movlw	0
  2216  0741  3000               	movwf	((I2C_Master_Write@d))+1
  2217  0742  00F1               	fcall	_I2C_Master_Write
  2218  0743  120A  118A  22B5  120A  118A  	line	119
  2219                           	
  2220                           l1485:	
  2221  0748                     	bcf	status, 5	;RP0=0, select bank0
  2222  0748  1283               	bcf	status, 6	;RP1=0, select bank0
  2223  0749  1303               	movf	(_mot2+1),w
  2224  074A  0835               	movwf	(I2C_Master_Write@d+1)
  2225  074B  00F1               	movf	(_mot2),w
  2226  074C  0834               	movwf	(I2C_Master_Write@d)
  2227  074D  00F0               	fcall	_I2C_Master_Write
  2228  074E  120A  118A  22B5  120A  118A  	line	120
  2229                           	
  2230                           l1487:	
  2231  0753                     	fcall	_I2C_Master_Stop
  2232  0753  120A  118A  22AC  120A  118A  	line	121
  2233                           	
  2234                           l1489:	
  2235  0758                     	opt asmopt_push
  2236                           opt asmopt_off
  2237                           movlw	13
  2238  0758  300D               	bcf	status, 5	;RP0=0, select bank0
  2239  0759  1283               	bcf	status, 6	;RP1=0, select bank0
  2240  075A  1303               movwf	((??_main+0)+0+1),f
  2241  075B  00C9               	movlw	251
  2242  075C  30FB               movwf	((??_main+0)+0),f
  2243  075D  00C8               	u597:
  2244  075E                     decfsz	((??_main+0)+0),f
  2245  075E  0BC8               	goto	u597
  2246  075F  2F5E               	decfsz	((??_main+0)+0+1),f
  2247  0760  0BC9               	goto	u597
  2248  0761  2F5E               opt asmopt_pop
  2249                           
  2250                           	line	123
  2251                           	
  2252                           l1491:	
  2253  0762                     	fcall	_I2C_Master_Start
  2254  0762  120A  118A  22A3  120A  118A  	line	124
  2255                           	
  2256                           l1493:	
  2257  0767                     	movlw	070h
  2258  0767  3070               	movwf	(I2C_Master_Write@d)
  2259  0768  00F0               	movlw	0
  2260  0769  3000               	movwf	((I2C_Master_Write@d))+1
  2261  076A  00F1               	fcall	_I2C_Master_Write
  2262  076B  120A  118A  22B5  120A  118A  	line	125
  2263                           	
  2264                           l1495:	
  2265  0770                     	bcf	status, 5	;RP0=0, select bank0
  2266  0770  1283               	bcf	status, 6	;RP1=0, select bank0
  2267  0771  1303               	movf	(_mot3+1),w
  2268  0772  0833               	movwf	(I2C_Master_Write@d+1)
  2269  0773  00F1               	movf	(_mot3),w
  2270  0774  0832               	movwf	(I2C_Master_Write@d)
  2271  0775  00F0               	fcall	_I2C_Master_Write
  2272  0776  120A  118A  22B5  120A  118A  	line	126
  2273                           	
  2274                           l1497:	
  2275  077B                     	fcall	_I2C_Master_Stop
  2276  077B  120A  118A  22AC  120A  118A  	line	127
  2277                           	
  2278                           l1499:	
  2279  0780                     	opt asmopt_push
  2280                           opt asmopt_off
  2281                           movlw	13
  2282  0780  300D               	bcf	status, 5	;RP0=0, select bank0
  2283  0781  1283               	bcf	status, 6	;RP1=0, select bank0
  2284  0782  1303               movwf	((??_main+0)+0+1),f
  2285  0783  00C9               	movlw	251
  2286  0784  30FB               movwf	((??_main+0)+0),f
  2287  0785  00C8               	u607:
  2288  0786                     decfsz	((??_main+0)+0),f
  2289  0786  0BC8               	goto	u607
  2290  0787  2F86               	decfsz	((??_main+0)+0+1),f
  2291  0788  0BC9               	goto	u607
  2292  0789  2F86               opt asmopt_pop
  2293                           
  2294                           	line	130
  2295                           	
  2296                           l1501:	
  2297  078A                     	movlw	01h
  2298  078A  3001               	movwf	(mandar@dato)
  2299  078B  00F0               	movlw	0
  2300  078C  3000               	movwf	((mandar@dato))+1
  2301  078D  00F1               	fcall	_mandar
  2302  078E  120A  118A  22BF  120A  118A  	line	131
  2303                           	
  2304                           l1503:	
  2305  0793                     	bcf	status, 5	;RP0=0, select bank0
  2306  0793  1283               	bcf	status, 6	;RP1=0, select bank0
  2307  0794  1303               	movf	(_valor1+1),w
  2308  0795  083F               	movwf	(mandar@dato+1)
  2309  0796  00F1               	movf	(_valor1),w
  2310  0797  083E               	movwf	(mandar@dato)
  2311  0798  00F0               	fcall	_mandar
  2312  0799  120A  118A  22BF  120A  118A  	line	132
  2313                           	
  2314                           l1505:	
  2315  079E                     	movlw	02h
  2316  079E  3002               	movwf	(mandar@dato)
  2317  079F  00F0               	movlw	0
  2318  07A0  3000               	movwf	((mandar@dato))+1
  2319  07A1  00F1               	fcall	_mandar
  2320  07A2  120A  118A  22BF  120A  118A  	line	133
  2321                           	
  2322                           l1507:	
  2323  07A7                     	bcf	status, 5	;RP0=0, select bank0
  2324  07A7  1283               	bcf	status, 6	;RP1=0, select bank0
  2325  07A8  1303               	movf	(_valor2+1),w
  2326  07A9  083D               	movwf	(mandar@dato+1)
  2327  07AA  00F1               	movf	(_valor2),w
  2328  07AB  083C               	movwf	(mandar@dato)
  2329  07AC  00F0               	fcall	_mandar
  2330  07AD  120A  118A  22BF  120A  118A  	line	134
  2331                           	
  2332                           l1509:	
  2333  07B2                     	movlw	03h
  2334  07B2  3003               	movwf	(mandar@dato)
  2335  07B3  00F0               	movlw	0
  2336  07B4  3000               	movwf	((mandar@dato))+1
  2337  07B5  00F1               	fcall	_mandar
  2338  07B6  120A  118A  22BF  120A  118A  	line	135
  2339                           	
  2340                           l1511:	
  2341  07BB                     	bcf	status, 5	;RP0=0, select bank0
  2342  07BB  1283               	bcf	status, 6	;RP1=0, select bank0
  2343  07BC  1303               	movf	(_valor3+1),w
  2344  07BD  083B               	movwf	(mandar@dato+1)
  2345  07BE  00F1               	movf	(_valor3),w
  2346  07BF  083A               	movwf	(mandar@dato)
  2347  07C0  00F0               	fcall	_mandar
  2348  07C1  120A  118A  22BF  120A  118A  	line	136
  2349                           	
  2350                           l1513:	
  2351  07C6                     	movlw	04h
  2352  07C6  3004               	movwf	(mandar@dato)
  2353  07C7  00F0               	movlw	0
  2354  07C8  3000               	movwf	((mandar@dato))+1
  2355  07C9  00F1               	fcall	_mandar
  2356  07CA  120A  118A  22BF  120A  118A  	line	137
  2357                           	
  2358                           l1515:	
  2359  07CF                     	bcf	status, 5	;RP0=0, select bank0
  2360  07CF  1283               	bcf	status, 6	;RP1=0, select bank0
  2361  07D0  1303               	movf	(_valor1+1),w
  2362  07D1  083F               	movwf	(mandar@dato+1)
  2363  07D2  00F1               	movf	(_valor1),w
  2364  07D3  083E               	movwf	(mandar@dato)
  2365  07D4  00F0               	fcall	_mandar
  2366  07D5  120A  118A  22BF  120A  118A  	line	138
  2367                           	
  2368                           l1517:	
  2369  07DA                     	movlw	05h
  2370  07DA  3005               	movwf	(mandar@dato)
  2371  07DB  00F0               	movlw	0
  2372  07DC  3000               	movwf	((mandar@dato))+1
  2373  07DD  00F1               	fcall	_mandar
  2374  07DE  120A  118A  22BF  120A  118A  	line	139
  2375                           	
  2376                           l1519:	
  2377  07E3                     	bcf	status, 5	;RP0=0, select bank0
  2378  07E3  1283               	bcf	status, 6	;RP1=0, select bank0
  2379  07E4  1303               	movf	(_valor2+1),w
  2380  07E5  083D               	movwf	(mandar@dato+1)
  2381  07E6  00F1               	movf	(_valor2),w
  2382  07E7  083C               	movwf	(mandar@dato)
  2383  07E8  00F0               	fcall	_mandar
  2384  07E9  120A  118A  22BF  120A  118A  	goto	l1405
  2385  07EE  2E10               	line	141
  2386                           	
  2387                           l203:	
  2388  07EF                     	goto	l1405
  2389  07EF  2E10               	
  2390                           l204:	
  2391  07F0                     	line	142
  2392                           	
  2393                           l205:	
  2394  07F0                     	global	start
  2395                           	ljmp	start
  2396  07F0  120A  118A  2800   	opt stack 0
  2397                           GLOBAL	__end_of_main
  2398                           	__end_of_main:
  2399  07F3                     	signat	_main,89
  2400                           	global	_mandar
  2401                           
  2402 ;; *************** function _mandar *****************
  2403 ;; Defined at:
  2404 ;;		line 24 in file "USART1.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  dato            2    0[COMMON] int 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;		None
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2418 ;;      Params:         2       0       0       0       0
  2419 ;;      Locals:         0       0       0       0       0
  2420 ;;      Temps:          0       0       0       0       0
  2421 ;;      Totals:         2       0       0       0       0
  2422 ;;Total ram usage:        2 bytes
  2423 ;; Hardware stack levels used:    1
  2424 ;; This function calls:
  2425 ;;		Nothing
  2426 ;; This function is called by:
  2427 ;;		_main
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2431                           	file	"USART1.c"
  2432                           	line	24
  2433                           global __ptext1
  2434                           __ptext1:	;psect for function _mandar
  2435  02BF                     psect	text1
  2436                           	file	"USART1.c"
  2437                           	line	24
  2438                           	global	__size_of_mandar
  2439                           	__size_of_mandar	equ	__end_of_mandar-_mandar
  2440  000D                     	
  2441                           _mandar:	
  2442  02BF                     ;incstack = 0
  2443                           	opt	stack 7
  2444                           ; Regs used in _mandar: [wreg]
  2445                           	line	25
  2446                           	
  2447                           l1373:	
  2448  02BF                     ;USART1.c: 25:     while (TXSTAbits.TRMT == 0){}
  2449                           	goto	l223
  2450  02BF  2AC0               	
  2451                           l224:	
  2452  02C0                     	
  2453                           l223:	
  2454  02C0                     	bsf	status, 5	;RP0=1, select bank1
  2455  02C0  1683               	bcf	status, 6	;RP1=0, select bank1
  2456  02C1  1303               	btfss	(152)^080h,1	;volatile
  2457  02C2  1C98               	goto	u481
  2458  02C3  2AC5               	goto	u480
  2459  02C4  2AC6               u481:
  2460  02C5                     	goto	l223
  2461  02C5  2AC0               u480:
  2462  02C6                     	goto	l1375
  2463  02C6  2AC7               	
  2464                           l225:	
  2465  02C7                     	line	26
  2466                           	
  2467                           l1375:	
  2468  02C7                     ;USART1.c: 26:     TXREG = dato;
  2469                           	movf	(mandar@dato),w
  2470  02C7  0870               	bcf	status, 5	;RP0=0, select bank0
  2471  02C8  1283               	bcf	status, 6	;RP1=0, select bank0
  2472  02C9  1303               	movwf	(25)	;volatile
  2473  02CA  0099               	line	27
  2474                           	
  2475                           l226:	
  2476  02CB                     	return
  2477  02CB  0008               	opt stack 0
  2478                           GLOBAL	__end_of_mandar
  2479                           	__end_of_mandar:
  2480  02CC                     	signat	_mandar,4217
  2481                           	global	_lcd_init
  2482                           
  2483 ;; *************** function _lcd_init *****************
  2484 ;; Defined at:
  2485 ;;		line 45 in file "LCD.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;		None
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;		None
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  1    wreg      void 
  2492 ;; Registers used:
  2493 ;;		wreg, status,2, status,0, pclath, cstack
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2499 ;;      Params:         0       0       0       0       0
  2500 ;;      Locals:         0       0       0       0       0
  2501 ;;      Temps:          0       0       0       0       0
  2502 ;;      Totals:         0       0       0       0       0
  2503 ;;Total ram usage:        0 bytes
  2504 ;; Hardware stack levels used:    1
  2505 ;; Hardware stack levels required when called:    3
  2506 ;; This function calls:
  2507 ;;		_lcd_cmd
  2508 ;; This function is called by:
  2509 ;;		_main
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2513                           	file	"LCD.c"
  2514                           	line	45
  2515                           global __ptext2
  2516                           __ptext2:	;psect for function _lcd_init
  2517  0336                     psect	text2
  2518                           	file	"LCD.c"
  2519                           	line	45
  2520                           	global	__size_of_lcd_init
  2521                           	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  2522  001F                     	
  2523                           _lcd_init:	
  2524  0336                     ;incstack = 0
  2525                           	opt	stack 4
  2526                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2527                           	line	47
  2528                           	
  2529                           l1337:	
  2530  0336                     ;LCD.c: 47:     lcd_cmd(0x38);
  2531                           	movlw	low(038h)
  2532  0336  3038               	fcall	_lcd_cmd
  2533  0337  120A  118A  22FA  120A  118A  	line	48
  2534                           ;LCD.c: 48:     lcd_cmd(0x0E);
  2535                           	movlw	low(0Eh)
  2536  033C  300E               	fcall	_lcd_cmd
  2537  033D  120A  118A  22FA  120A  118A  	line	49
  2538                           ;LCD.c: 49:     lcd_cmd(0x01);
  2539                           	movlw	low(01h)
  2540  0342  3001               	fcall	_lcd_cmd
  2541  0343  120A  118A  22FA  120A  118A  	line	50
  2542                           ;LCD.c: 50:     lcd_cmd(0x06);
  2543                           	movlw	low(06h)
  2544  0348  3006               	fcall	_lcd_cmd
  2545  0349  120A  118A  22FA  120A  118A  	line	51
  2546                           ;LCD.c: 51:     lcd_cmd(0x80);
  2547                           	movlw	low(080h)
  2548  034E  3080               	fcall	_lcd_cmd
  2549  034F  120A  118A  22FA  120A  118A  	line	52
  2550                           	
  2551                           l113:	
  2552  0354                     	return
  2553  0354  0008               	opt stack 0
  2554                           GLOBAL	__end_of_lcd_init
  2555                           	__end_of_lcd_init:
  2556  0355                     	signat	_lcd_init,89
  2557                           	global	_lcd_cmd
  2558                           
  2559 ;; *************** function _lcd_cmd *****************
  2560 ;; Defined at:
  2561 ;;		line 36 in file "LCD.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;  x               1    wreg     unsigned char 
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;  x               1    7[COMMON] unsigned char 
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  1    wreg      void 
  2568 ;; Registers used:
  2569 ;;		wreg, status,2, status,0, pclath, cstack
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2575 ;;      Params:         0       0       0       0       0
  2576 ;;      Locals:         1       0       0       0       0
  2577 ;;      Temps:          0       0       0       0       0
  2578 ;;      Totals:         1       0       0       0       0
  2579 ;;Total ram usage:        1 bytes
  2580 ;; Hardware stack levels used:    1
  2581 ;; Hardware stack levels required when called:    2
  2582 ;; This function calls:
  2583 ;;		_lcd_lat
  2584 ;;		_lcd_ready
  2585 ;; This function is called by:
  2586 ;;		_lcd_init
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2590                           	line	36
  2591                           global __ptext3
  2592                           __ptext3:	;psect for function _lcd_cmd
  2593  02FA                     psect	text3
  2594                           	file	"LCD.c"
  2595                           	line	36
  2596                           	global	__size_of_lcd_cmd
  2597                           	__size_of_lcd_cmd	equ	__end_of_lcd_cmd-_lcd_cmd
  2598  0012                     	
  2599                           _lcd_cmd:	
  2600  02FA                     ;incstack = 0
  2601                           	opt	stack 4
  2602                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  2603                           ;lcd_cmd@x stored from wreg
  2604                           	movwf	(lcd_cmd@x)
  2605  02FA  00F7               	line	38
  2606                           	
  2607                           l1255:	
  2608  02FB                     ;LCD.c: 36: void lcd_cmd(unsigned char x);LCD.c: 37: {;LCD.c: 38:     lcd_ready();
  2609                           	fcall	_lcd_ready
  2610  02FB  120A  118A  23A0  120A  118A  	line	39
  2611                           	
  2612                           l1257:	
  2613  0300                     ;LCD.c: 39:     PORTB = x;
  2614                           	movf	(lcd_cmd@x),w
  2615  0300  0877               	bcf	status, 5	;RP0=0, select bank0
  2616  0301  1283               	bcf	status, 6	;RP1=0, select bank0
  2617  0302  1303               	movwf	(6)	;volatile
  2618  0303  0086               	line	40
  2619                           	
  2620                           l1259:	
  2621  0304                     ;LCD.c: 40:     PORTDbits.RD5 = 0;
  2622                           	bcf	(8),5	;volatile
  2623  0304  1288               	line	41
  2624                           	
  2625                           l1261:	
  2626  0305                     ;LCD.c: 41:     PORTDbits.RD6 = 0;
  2627                           	bcf	(8),6	;volatile
  2628  0305  1308               	line	42
  2629                           	
  2630                           l1263:	
  2631  0306                     ;LCD.c: 42:     lcd_lat();
  2632                           	fcall	_lcd_lat
  2633  0306  120A  118A  22EA  120A  118A  	line	43
  2634                           	
  2635                           l110:	
  2636  030B                     	return
  2637  030B  0008               	opt stack 0
  2638                           GLOBAL	__end_of_lcd_cmd
  2639                           	__end_of_lcd_cmd:
  2640  030C                     	signat	_lcd_cmd,4217
  2641                           	global	_lcd_ready
  2642                           
  2643 ;; *************** function _lcd_ready *****************
  2644 ;; Defined at:
  2645 ;;		line 19 in file "LCD.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;		None
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;		None
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  1    wreg      void 
  2652 ;; Registers used:
  2653 ;;		wreg, status,2, status,0, pclath, cstack
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2659 ;;      Params:         0       0       0       0       0
  2660 ;;      Locals:         0       0       0       0       0
  2661 ;;      Temps:          1       0       0       0       0
  2662 ;;      Totals:         1       0       0       0       0
  2663 ;;Total ram usage:        1 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; Hardware stack levels required when called:    1
  2666 ;; This function calls:
  2667 ;;		_delay
  2668 ;; This function is called by:
  2669 ;;		_lcd_cmd
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  2673                           	line	19
  2674                           global __ptext4
  2675                           __ptext4:	;psect for function _lcd_ready
  2676  03A0                     psect	text4
  2677                           	file	"LCD.c"
  2678                           	line	19
  2679                           	global	__size_of_lcd_ready
  2680                           	__size_of_lcd_ready	equ	__end_of_lcd_ready-_lcd_ready
  2681  002D                     	
  2682                           _lcd_ready:	
  2683  03A0                     ;incstack = 0
  2684                           	opt	stack 4
  2685                           ; Regs used in _lcd_ready: [wreg+status,2+status,0+pclath+cstack]
  2686                           	line	21
  2687                           	
  2688                           l1225:	
  2689  03A0                     ;LCD.c: 21:     PORTB = 0xFF;
  2690                           	movlw	low(0FFh)
  2691  03A0  30FF               	bcf	status, 5	;RP0=0, select bank0
  2692  03A1  1283               	bcf	status, 6	;RP1=0, select bank0
  2693  03A2  1303               	movwf	(6)	;volatile
  2694  03A3  0086               	line	22
  2695                           	
  2696                           l1227:	
  2697  03A4                     ;LCD.c: 22:     PORTB &= 0x80;
  2698                           	movlw	low(080h)
  2699  03A4  3080               	movwf	(??_lcd_ready+0)+0
  2700  03A5  00F6               	movf	(??_lcd_ready+0)+0,w
  2701  03A6  0876               	andwf	(6),f	;volatile
  2702  03A7  0586               	line	23
  2703                           	
  2704                           l1229:	
  2705  03A8                     ;LCD.c: 23:     PORTDbits.RD5 = 0;
  2706                           	bcf	(8),5	;volatile
  2707  03A8  1288               	line	24
  2708                           	
  2709                           l1231:	
  2710  03A9                     ;LCD.c: 24:     PORTDbits.RD6 = 1;
  2711                           	bsf	(8),6	;volatile
  2712  03A9  1708               	line	25
  2713                           	
  2714                           l1233:	
  2715  03AA                     ;LCD.c: 25:     PORTDbits.RD7 = 0; delay(1); PORTDbits.RD7 = 1;
  2716                           	bcf	(8),7	;volatile
  2717  03AA  1388               	
  2718                           l1235:	
  2719  03AB                     	movlw	01h
  2720  03AB  3001               	movwf	(delay@ms)
  2721  03AC  00F0               	movlw	0
  2722  03AD  3000               	movwf	((delay@ms))+1
  2723  03AE  00F1               	fcall	_delay
  2724  03AF  120A  118A  23FC  120A  118A  	
  2725                           l1237:	
  2726  03B4                     	bcf	status, 5	;RP0=0, select bank0
  2727  03B4  1283               	bcf	status, 6	;RP1=0, select bank0
  2728  03B5  1303               	bsf	(8),7	;volatile
  2729  03B6  1788               	line	26
  2730                           	
  2731                           l1239:	
  2732  03B7                     ;LCD.c: 26:     if(PORTB == 0x80)
  2733                           		movlw	128
  2734  03B7  3080               	xorwf	((6)),w	;volatile
  2735  03B8  0606               	btfss	status,2
  2736  03B9  1D03               	goto	u351
  2737  03BA  2BBC               	goto	u350
  2738  03BB  2BBD               u351:
  2739  03BC                     	goto	l107
  2740  03BC  2BCC               u350:
  2741  03BD                     	line	28
  2742                           	
  2743                           l1241:	
  2744  03BD                     ;LCD.c: 27:     {;LCD.c: 28:         PORTDbits.RD7 = 0; delay(1); PORTDbits.RD7 = 1;
  2745                           	bcf	(8),7	;volatile
  2746  03BD  1388               	
  2747                           l1243:	
  2748  03BE                     	movlw	01h
  2749  03BE  3001               	movwf	(delay@ms)
  2750  03BF  00F0               	movlw	0
  2751  03C0  3000               	movwf	((delay@ms))+1
  2752  03C1  00F1               	fcall	_delay
  2753  03C2  120A  118A  23FC  120A  118A  	
  2754                           l1245:	
  2755  03C7                     	bcf	status, 5	;RP0=0, select bank0
  2756  03C7  1283               	bcf	status, 6	;RP1=0, select bank0
  2757  03C8  1303               	bsf	(8),7	;volatile
  2758  03C9  1788               	line	29
  2759                           ;LCD.c: 29:     }
  2760                           	goto	l107
  2761  03CA  2BCC               	line	30
  2762                           ;LCD.c: 30:     else
  2763                           	
  2764                           l105:	
  2765  03CB                     	goto	l107
  2766  03CB  2BCC               	line	33
  2767                           ;LCD.c: 31:     {;LCD.c: 33:     }
  2768                           	
  2769                           l106:	
  2770  03CC                     	line	34
  2771                           	
  2772                           l107:	
  2773  03CC                     	return
  2774  03CC  0008               	opt stack 0
  2775                           GLOBAL	__end_of_lcd_ready
  2776                           	__end_of_lcd_ready:
  2777  03CD                     	signat	_lcd_ready,89
  2778                           	global	_lcd_lat
  2779                           
  2780 ;; *************** function _lcd_lat *****************
  2781 ;; Defined at:
  2782 ;;		line 12 in file "LCD.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;		None
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;		None
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  1    wreg      void 
  2789 ;; Registers used:
  2790 ;;		wreg, status,2, status,0, pclath, cstack
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2796 ;;      Params:         0       0       0       0       0
  2797 ;;      Locals:         0       0       0       0       0
  2798 ;;      Temps:          0       0       0       0       0
  2799 ;;      Totals:         0       0       0       0       0
  2800 ;;Total ram usage:        0 bytes
  2801 ;; Hardware stack levels used:    1
  2802 ;; Hardware stack levels required when called:    1
  2803 ;; This function calls:
  2804 ;;		_delay
  2805 ;; This function is called by:
  2806 ;;		_lcd_cmd
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  2810                           	line	12
  2811                           global __ptext5
  2812                           __ptext5:	;psect for function _lcd_lat
  2813  02EA                     psect	text5
  2814                           	file	"LCD.c"
  2815                           	line	12
  2816                           	global	__size_of_lcd_lat
  2817                           	__size_of_lcd_lat	equ	__end_of_lcd_lat-_lcd_lat
  2818  0010                     	
  2819                           _lcd_lat:	
  2820  02EA                     ;incstack = 0
  2821                           	opt	stack 4
  2822                           ; Regs used in _lcd_lat: [wreg+status,2+status,0+pclath+cstack]
  2823                           	line	14
  2824                           	
  2825                           l1219:	
  2826  02EA                     ;LCD.c: 14:     PORTDbits.RD7 = 1;
  2827                           	bcf	status, 5	;RP0=0, select bank0
  2828  02EA  1283               	bcf	status, 6	;RP1=0, select bank0
  2829  02EB  1303               	bsf	(8),7	;volatile
  2830  02EC  1788               	line	15
  2831                           	
  2832                           l1221:	
  2833  02ED                     ;LCD.c: 15:     delay(1);
  2834                           	movlw	01h
  2835  02ED  3001               	movwf	(delay@ms)
  2836  02EE  00F0               	movlw	0
  2837  02EF  3000               	movwf	((delay@ms))+1
  2838  02F0  00F1               	fcall	_delay
  2839  02F1  120A  118A  23FC  120A  118A  	line	16
  2840                           	
  2841                           l1223:	
  2842  02F6                     ;LCD.c: 16:     PORTDbits.RD7 = 0;
  2843                           	bcf	status, 5	;RP0=0, select bank0
  2844  02F6  1283               	bcf	status, 6	;RP1=0, select bank0
  2845  02F7  1303               	bcf	(8),7	;volatile
  2846  02F8  1388               	line	17
  2847                           	
  2848                           l102:	
  2849  02F9                     	return
  2850  02F9  0008               	opt stack 0
  2851                           GLOBAL	__end_of_lcd_lat
  2852                           	__end_of_lcd_lat:
  2853  02FA                     	signat	_lcd_lat,89
  2854                           	global	_delay
  2855                           
  2856 ;; *************** function _delay *****************
  2857 ;; Defined at:
  2858 ;;		line 54 in file "LCD.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;  ms              2    0[COMMON] unsigned int 
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;  i               2    4[COMMON] unsigned int 
  2863 ;;  j               2    2[COMMON] unsigned int 
  2864 ;; Return value:  Size  Location     Type
  2865 ;;                  1    wreg      void 
  2866 ;; Registers used:
  2867 ;;		wreg, status,2
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2873 ;;      Params:         2       0       0       0       0
  2874 ;;      Locals:         4       0       0       0       0
  2875 ;;      Temps:          0       0       0       0       0
  2876 ;;      Totals:         6       0       0       0       0
  2877 ;;Total ram usage:        6 bytes
  2878 ;; Hardware stack levels used:    1
  2879 ;; This function calls:
  2880 ;;		Nothing
  2881 ;; This function is called by:
  2882 ;;		_lcd_lat
  2883 ;;		_lcd_ready
  2884 ;;		_main
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  2888                           	line	54
  2889                           global __ptext6
  2890                           __ptext6:	;psect for function _delay
  2891  03FC                     psect	text6
  2892                           	file	"LCD.c"
  2893                           	line	54
  2894                           	global	__size_of_delay
  2895                           	__size_of_delay	equ	__end_of_delay-_delay
  2896  0032                     	
  2897                           _delay:	
  2898  03FC                     ;incstack = 0
  2899                           	opt	stack 4
  2900                           ; Regs used in _delay: [wreg+status,2]
  2901                           	line	57
  2902                           	
  2903                           l1203:	
  2904  03FC                     ;LCD.c: 54: void delay(unsigned int ms);LCD.c: 55: {;LCD.c: 56:     unsigned int i,j;;LC
                                 D.c: 57:     for(i=0;i<=120;i++)
  2905                           	clrf	(delay@i)
  2906  03FC  01F4               	clrf	(delay@i+1)
  2907  03FD  01F5               	
  2908                           l1205:	
  2909  03FE                     	movlw	0
  2910  03FE  3000               	subwf	(delay@i+1),w
  2911  03FF  0275               	movlw	079h
  2912  0400  3079               	skipnz
  2913  0401  1903               	subwf	(delay@i),w
  2914  0402  0274               	skipc
  2915  0403  1C03               	goto	u321
  2916  0404  2C06               	goto	u320
  2917  0405  2C07               u321:
  2918  0406                     	goto	l1209
  2919  0406  2C09               u320:
  2920  0407                     	goto	l121
  2921  0407  2C2D               	
  2922                           l1207:	
  2923  0408                     	goto	l121
  2924  0408  2C2D               	
  2925                           l116:	
  2926  0409                     	line	58
  2927                           	
  2928                           l1209:	
  2929  0409                     ;LCD.c: 58:         for(j=0;j<=ms;j++);
  2930                           	clrf	(delay@j)
  2931  0409  01F2               	clrf	(delay@j+1)
  2932  040A  01F3               	goto	l118
  2933  040B  2C12               	
  2934                           l119:	
  2935  040C                     	
  2936                           l1211:	
  2937  040C                     	movlw	01h
  2938  040C  3001               	addwf	(delay@j),f
  2939  040D  07F2               	skipnc
  2940  040E  1803               	incf	(delay@j+1),f
  2941  040F  0AF3               	movlw	0
  2942  0410  3000               	addwf	(delay@j+1),f
  2943  0411  07F3               	
  2944                           l118:	
  2945  0412                     	movf	(delay@j+1),w
  2946  0412  0873               	subwf	(delay@ms+1),w
  2947  0413  0271               	skipz
  2948  0414  1D03               	goto	u335
  2949  0415  2C18               	movf	(delay@j),w
  2950  0416  0872               	subwf	(delay@ms),w
  2951  0417  0270               u335:
  2952  0418                     	skipnc
  2953  0418  1803               	goto	u331
  2954  0419  2C1B               	goto	u330
  2955  041A  2C1C               u331:
  2956  041B                     	goto	l1211
  2957  041B  2C0C               u330:
  2958  041C                     	goto	l1213
  2959  041C  2C1D               	
  2960                           l120:	
  2961  041D                     	
  2962                           l1213:	
  2963  041D                     	movlw	01h
  2964  041D  3001               	addwf	(delay@i),f
  2965  041E  07F4               	skipnc
  2966  041F  1803               	incf	(delay@i+1),f
  2967  0420  0AF5               	movlw	0
  2968  0421  3000               	addwf	(delay@i+1),f
  2969  0422  07F5               	movlw	0
  2970  0423  3000               	subwf	(delay@i+1),w
  2971  0424  0275               	movlw	079h
  2972  0425  3079               	skipnz
  2973  0426  1903               	subwf	(delay@i),w
  2974  0427  0274               	skipc
  2975  0428  1C03               	goto	u341
  2976  0429  2C2B               	goto	u340
  2977  042A  2C2C               u341:
  2978  042B                     	goto	l1209
  2979  042B  2C09               u340:
  2980  042C                     	goto	l121
  2981  042C  2C2D               	
  2982                           l117:	
  2983  042D                     	line	59
  2984                           	
  2985                           l121:	
  2986  042D                     	return
  2987  042D  0008               	opt stack 0
  2988                           GLOBAL	__end_of_delay
  2989                           	__end_of_delay:
  2990  042E                     	signat	_delay,4217
  2991                           	global	_config
  2992                           
  2993 ;; *************** function _config *****************
  2994 ;; Defined at:
  2995 ;;		line 12 in file "USART1.c"
  2996 ;; Parameters:    Size  Location     Type
  2997 ;;		None
  2998 ;; Auto vars:     Size  Location     Type
  2999 ;;		None
  3000 ;; Return value:  Size  Location     Type
  3001 ;;                  1    wreg      void 
  3002 ;; Registers used:
  3003 ;;		wreg, status,2
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3009 ;;      Params:         0       0       0       0       0
  3010 ;;      Locals:         0       0       0       0       0
  3011 ;;      Temps:          0       0       0       0       0
  3012 ;;      Totals:         0       0       0       0       0
  3013 ;;Total ram usage:        0 bytes
  3014 ;; Hardware stack levels used:    1
  3015 ;; This function calls:
  3016 ;;		Nothing
  3017 ;; This function is called by:
  3018 ;;		_main
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3022                           	file	"USART1.c"
  3023                           	line	12
  3024                           global __ptext7
  3025                           __ptext7:	;psect for function _config
  3026  030C                     psect	text7
  3027                           	file	"USART1.c"
  3028                           	line	12
  3029                           	global	__size_of_config
  3030                           	__size_of_config	equ	__end_of_config-_config
  3031  0014                     	
  3032                           _config:	
  3033  030C                     ;incstack = 0
  3034                           	opt	stack 7
  3035                           ; Regs used in _config: [wreg+status,2]
  3036                           	line	13
  3037                           	
  3038                           l1361:	
  3039  030C                     ;USART1.c: 13:     TXSTAbits.SYNC = 0;
  3040                           	bsf	status, 5	;RP0=1, select bank1
  3041  030C  1683               	bcf	status, 6	;RP1=0, select bank1
  3042  030D  1303               	bcf	(152)^080h,4	;volatile
  3043  030E  1218               	line	14
  3044                           ;USART1.c: 14:     TXSTAbits.BRGH = 0;
  3045                           	bcf	(152)^080h,2	;volatile
  3046  030F  1118               	line	15
  3047                           ;USART1.c: 15:     BAUDCTLbits.BRG16 = 1;
  3048                           	bsf	status, 5	;RP0=1, select bank3
  3049  0310  1683               	bsf	status, 6	;RP1=1, select bank3
  3050  0311  1703               	bsf	(391)^0180h,3	;volatile
  3051  0312  1587               	line	16
  3052                           	
  3053                           l1363:	
  3054  0313                     ;USART1.c: 16:     SPBRG = 25;
  3055                           	movlw	low(019h)
  3056  0313  3019               	bsf	status, 5	;RP0=1, select bank1
  3057  0314  1683               	bcf	status, 6	;RP1=0, select bank1
  3058  0315  1303               	movwf	(153)^080h	;volatile
  3059  0316  0099               	line	17
  3060                           	
  3061                           l1365:	
  3062  0317                     ;USART1.c: 17:     SPBRGH = 0;
  3063                           	clrf	(154)^080h	;volatile
  3064  0317  019A               	line	18
  3065                           	
  3066                           l1367:	
  3067  0318                     ;USART1.c: 18:     RCSTAbits.SPEN = 1;
  3068                           	bcf	status, 5	;RP0=0, select bank0
  3069  0318  1283               	bcf	status, 6	;RP1=0, select bank0
  3070  0319  1303               	bsf	(24),7	;volatile
  3071  031A  1798               	line	19
  3072                           	
  3073                           l1369:	
  3074  031B                     ;USART1.c: 19:     RCSTAbits.CREN = 1;
  3075                           	bsf	(24),4	;volatile
  3076  031B  1618               	line	20
  3077                           	
  3078                           l1371:	
  3079  031C                     ;USART1.c: 20:     TXSTAbits.TXEN = 1;
  3080                           	bsf	status, 5	;RP0=1, select bank1
  3081  031C  1683               	bcf	status, 6	;RP1=0, select bank1
  3082  031D  1303               	bsf	(152)^080h,5	;volatile
  3083  031E  1698               	line	21
  3084                           	
  3085                           l220:	
  3086  031F                     	return
  3087  031F  0008               	opt stack 0
  3088                           GLOBAL	__end_of_config
  3089                           	__end_of_config:
  3090  0320                     	signat	_config,89
  3091                           	global	_MPU6050_Init
  3092                           
  3093 ;; *************** function _MPU6050_Init *****************
  3094 ;; Defined at:
  3095 ;;		line 16 in file "MPU6050.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;		None
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;		None
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  1    wreg      void 
  3102 ;; Registers used:
  3103 ;;		wreg, status,2, status,0, pclath, cstack
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3109 ;;      Params:         0       0       0       0       0
  3110 ;;      Locals:         0       0       0       0       0
  3111 ;;      Temps:          0       0       0       0       0
  3112 ;;      Totals:         0       0       0       0       0
  3113 ;;Total ram usage:        0 bytes
  3114 ;; Hardware stack levels used:    1
  3115 ;; Hardware stack levels required when called:    3
  3116 ;; This function calls:
  3117 ;;		_I2C_Master_Stop
  3118 ;;		_I2C_Master_Write
  3119 ;;		_I2C_Start
  3120 ;; This function is called by:
  3121 ;;		_main
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3125                           	file	"MPU6050.c"
  3126                           	line	16
  3127                           global __ptext8
  3128                           __ptext8:	;psect for function _MPU6050_Init
  3129  0506                     psect	text8
  3130                           	file	"MPU6050.c"
  3131                           	line	16
  3132                           	global	__size_of_MPU6050_Init
  3133                           	__size_of_MPU6050_Init	equ	__end_of_MPU6050_Init-_MPU6050_Init
  3134  00AD                     	
  3135                           _MPU6050_Init:	
  3136  0506                     ;incstack = 0
  3137                           	opt	stack 4
  3138                           ; Regs used in _MPU6050_Init: [wreg+status,2+status,0+pclath+cstack]
  3139                           	line	20
  3140                           	
  3141                           l1359:	
  3142  0506                     ;MPU6050.c: 20:   I2C_Start(0xD0);
  3143                           	movlw	low(0D0h)
  3144  0506  30D0               	fcall	_I2C_Start
  3145  0507  120A  118A  2320  120A  118A  	line	21
  3146                           ;MPU6050.c: 21:   I2C_Master_Write(0x19);
  3147                           	movlw	019h
  3148  050C  3019               	movwf	(I2C_Master_Write@d)
  3149  050D  00F0               	movlw	0
  3150  050E  3000               	movwf	((I2C_Master_Write@d))+1
  3151  050F  00F1               	fcall	_I2C_Master_Write
  3152  0510  120A  118A  22B5  120A  118A  	line	22
  3153                           ;MPU6050.c: 22:   I2C_Master_Write(0x07);
  3154                           	movlw	07h
  3155  0515  3007               	movwf	(I2C_Master_Write@d)
  3156  0516  00F0               	movlw	0
  3157  0517  3000               	movwf	((I2C_Master_Write@d))+1
  3158  0518  00F1               	fcall	_I2C_Master_Write
  3159  0519  120A  118A  22B5  120A  118A  	line	23
  3160                           ;MPU6050.c: 23:   I2C_Master_Stop();
  3161                           	fcall	_I2C_Master_Stop
  3162  051E  120A  118A  22AC  120A  118A  	line	26
  3163                           ;MPU6050.c: 26:   I2C_Start(0xD0);
  3164                           	movlw	low(0D0h)
  3165  0523  30D0               	fcall	_I2C_Start
  3166  0524  120A  118A  2320  120A  118A  	line	27
  3167                           ;MPU6050.c: 27:   I2C_Master_Write(0x6B);
  3168                           	movlw	06Bh
  3169  0529  306B               	movwf	(I2C_Master_Write@d)
  3170  052A  00F0               	movlw	0
  3171  052B  3000               	movwf	((I2C_Master_Write@d))+1
  3172  052C  00F1               	fcall	_I2C_Master_Write
  3173  052D  120A  118A  22B5  120A  118A  	line	28
  3174                           ;MPU6050.c: 28:   I2C_Master_Write(0x01);
  3175                           	movlw	01h
  3176  0532  3001               	movwf	(I2C_Master_Write@d)
  3177  0533  00F0               	movlw	0
  3178  0534  3000               	movwf	((I2C_Master_Write@d))+1
  3179  0535  00F1               	fcall	_I2C_Master_Write
  3180  0536  120A  118A  22B5  120A  118A  	line	29
  3181                           ;MPU6050.c: 29:   I2C_Master_Stop();
  3182                           	fcall	_I2C_Master_Stop
  3183  053B  120A  118A  22AC  120A  118A  	line	32
  3184                           ;MPU6050.c: 32:   I2C_Start(0xD0);
  3185                           	movlw	low(0D0h)
  3186  0540  30D0               	fcall	_I2C_Start
  3187  0541  120A  118A  2320  120A  118A  	line	33
  3188                           ;MPU6050.c: 33:   I2C_Master_Write(0x1A);
  3189                           	movlw	01Ah
  3190  0546  301A               	movwf	(I2C_Master_Write@d)
  3191  0547  00F0               	movlw	0
  3192  0548  3000               	movwf	((I2C_Master_Write@d))+1
  3193  0549  00F1               	fcall	_I2C_Master_Write
  3194  054A  120A  118A  22B5  120A  118A  	line	34
  3195                           ;MPU6050.c: 34:   I2C_Master_Write(0x00);
  3196                           	movlw	0
  3197  054F  3000               	movwf	(I2C_Master_Write@d)
  3198  0550  00F0               	movwf	(I2C_Master_Write@d+1)
  3199  0551  00F1               	fcall	_I2C_Master_Write
  3200  0552  120A  118A  22B5  120A  118A  	line	35
  3201                           ;MPU6050.c: 35:   I2C_Master_Stop();
  3202                           	fcall	_I2C_Master_Stop
  3203  0557  120A  118A  22AC  120A  118A  	line	38
  3204                           ;MPU6050.c: 38:   I2C_Start(0xD0);
  3205                           	movlw	low(0D0h)
  3206  055C  30D0               	fcall	_I2C_Start
  3207  055D  120A  118A  2320  120A  118A  	line	39
  3208                           ;MPU6050.c: 39:   I2C_Master_Write(0x1C);
  3209                           	movlw	01Ch
  3210  0562  301C               	movwf	(I2C_Master_Write@d)
  3211  0563  00F0               	movlw	0
  3212  0564  3000               	movwf	((I2C_Master_Write@d))+1
  3213  0565  00F1               	fcall	_I2C_Master_Write
  3214  0566  120A  118A  22B5  120A  118A  	line	40
  3215                           ;MPU6050.c: 40:   I2C_Master_Write(0x00);
  3216                           	movlw	0
  3217  056B  3000               	movwf	(I2C_Master_Write@d)
  3218  056C  00F0               	movwf	(I2C_Master_Write@d+1)
  3219  056D  00F1               	fcall	_I2C_Master_Write
  3220  056E  120A  118A  22B5  120A  118A  	line	41
  3221                           ;MPU6050.c: 41:   I2C_Master_Stop();
  3222                           	fcall	_I2C_Master_Stop
  3223  0573  120A  118A  22AC  120A  118A  	line	44
  3224                           ;MPU6050.c: 44:   I2C_Start(0xD0);
  3225                           	movlw	low(0D0h)
  3226  0578  30D0               	fcall	_I2C_Start
  3227  0579  120A  118A  2320  120A  118A  	line	45
  3228                           ;MPU6050.c: 45:   I2C_Master_Write(0x1B);
  3229                           	movlw	01Bh
  3230  057E  301B               	movwf	(I2C_Master_Write@d)
  3231  057F  00F0               	movlw	0
  3232  0580  3000               	movwf	((I2C_Master_Write@d))+1
  3233  0581  00F1               	fcall	_I2C_Master_Write
  3234  0582  120A  118A  22B5  120A  118A  	line	46
  3235                           ;MPU6050.c: 46:   I2C_Master_Write(0x18);
  3236                           	movlw	018h
  3237  0587  3018               	movwf	(I2C_Master_Write@d)
  3238  0588  00F0               	movlw	0
  3239  0589  3000               	movwf	((I2C_Master_Write@d))+1
  3240  058A  00F1               	fcall	_I2C_Master_Write
  3241  058B  120A  118A  22B5  120A  118A  	line	47
  3242                           ;MPU6050.c: 47:   I2C_Master_Stop();
  3243                           	fcall	_I2C_Master_Stop
  3244  0590  120A  118A  22AC  120A  118A  	line	50
  3245                           ;MPU6050.c: 50:   I2C_Start(0xD0);
  3246                           	movlw	low(0D0h)
  3247  0595  30D0               	fcall	_I2C_Start
  3248  0596  120A  118A  2320  120A  118A  	line	51
  3249                           ;MPU6050.c: 51:   I2C_Master_Write(0x38);
  3250                           	movlw	038h
  3251  059B  3038               	movwf	(I2C_Master_Write@d)
  3252  059C  00F0               	movlw	0
  3253  059D  3000               	movwf	((I2C_Master_Write@d))+1
  3254  059E  00F1               	fcall	_I2C_Master_Write
  3255  059F  120A  118A  22B5  120A  118A  	line	52
  3256                           ;MPU6050.c: 52:   I2C_Master_Write(0x01);
  3257                           	movlw	01h
  3258  05A4  3001               	movwf	(I2C_Master_Write@d)
  3259  05A5  00F0               	movlw	0
  3260  05A6  3000               	movwf	((I2C_Master_Write@d))+1
  3261  05A7  00F1               	fcall	_I2C_Master_Write
  3262  05A8  120A  118A  22B5  120A  118A  	line	53
  3263                           ;MPU6050.c: 53:   I2C_Master_Stop();
  3264                           	fcall	_I2C_Master_Stop
  3265  05AD  120A  118A  22AC  120A  118A  	line	54
  3266                           	
  3267                           l237:	
  3268  05B2                     	return
  3269  05B2  0008               	opt stack 0
  3270                           GLOBAL	__end_of_MPU6050_Init
  3271                           	__end_of_MPU6050_Init:
  3272  05B3                     	signat	_MPU6050_Init,89
  3273                           	global	_I2C_Start
  3274                           
  3275 ;; *************** function _I2C_Start *****************
  3276 ;; Defined at:
  3277 ;;		line 108 in file "I2C.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;  add             1    wreg     unsigned char 
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;  add             1    4[COMMON] unsigned char 
  3282 ;; Return value:  Size  Location     Type
  3283 ;;                  1    wreg      void 
  3284 ;; Registers used:
  3285 ;;		wreg, status,2, status,0, pclath, cstack
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3291 ;;      Params:         0       0       0       0       0
  3292 ;;      Locals:         1       0       0       0       0
  3293 ;;      Temps:          2       0       0       0       0
  3294 ;;      Totals:         3       0       0       0       0
  3295 ;;Total ram usage:        3 bytes
  3296 ;; Hardware stack levels used:    1
  3297 ;; Hardware stack levels required when called:    2
  3298 ;; This function calls:
  3299 ;;		_I2C_Master_Wait
  3300 ;;		_I2C_Master_Write
  3301 ;; This function is called by:
  3302 ;;		_MPU6050_Init
  3303 ;;		_MPU6050_Read
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3307                           	file	"I2C.c"
  3308                           	line	108
  3309                           global __ptext9
  3310                           __ptext9:	;psect for function _I2C_Start
  3311  0320                     psect	text9
  3312                           	file	"I2C.c"
  3313                           	line	108
  3314                           	global	__size_of_I2C_Start
  3315                           	__size_of_I2C_Start	equ	__end_of_I2C_Start-_I2C_Start
  3316  0016                     	
  3317                           _I2C_Start:	
  3318  0320                     ;incstack = 0
  3319                           	opt	stack 4
  3320                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  3321                           ;I2C_Start@add stored from wreg
  3322                           	movwf	(I2C_Start@add)
  3323  0320  00F4               	line	110
  3324                           	
  3325                           l1251:	
  3326  0321                     ;I2C.c: 108: void I2C_Start(char add);I2C.c: 109: {;I2C.c: 110:     I2C_Master_Wait();
  3327                           	fcall	_I2C_Master_Wait
  3328  0321  120A  118A  22CC  120A  118A  	line	111
  3329                           	
  3330                           l1253:	
  3331  0326                     ;I2C.c: 111:     SEN = 1;
  3332                           	bsf	status, 5	;RP0=1, select bank1
  3333  0326  1683               	bcf	status, 6	;RP1=0, select bank1
  3334  0327  1303               	bsf	(1160/8)^080h,(1160)&7	;volatile
  3335  0328  1411               	line	112
  3336                           ;I2C.c: 112:     I2C_Master_Write(add);
  3337                           	movf	(I2C_Start@add),w
  3338  0329  0874               	movwf	(??_I2C_Start+0)+0
  3339  032A  00F2               	clrf	(??_I2C_Start+0)+0+1
  3340  032B  01F3               	movf	0+(??_I2C_Start+0)+0,w
  3341  032C  0872               	movwf	(I2C_Master_Write@d)
  3342  032D  00F0               	movf	1+(??_I2C_Start+0)+0,w
  3343  032E  0873               	movwf	(I2C_Master_Write@d+1)
  3344  032F  00F1               	fcall	_I2C_Master_Write
  3345  0330  120A  118A  22B5  120A  118A  	line	113
  3346                           	
  3347                           l68:	
  3348  0335                     	return
  3349  0335  0008               	opt stack 0
  3350                           GLOBAL	__end_of_I2C_Start
  3351                           	__end_of_I2C_Start:
  3352  0336                     	signat	_I2C_Start,4217
  3353                           	global	_I2C_Master_Write
  3354                           
  3355 ;; *************** function _I2C_Master_Write *****************
  3356 ;; Defined at:
  3357 ;;		line 66 in file "I2C.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;  d               2    0[COMMON] unsigned int 
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;		None
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  1    wreg      void 
  3364 ;; Registers used:
  3365 ;;		wreg, status,2, status,0, pclath, cstack
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3371 ;;      Params:         2       0       0       0       0
  3372 ;;      Locals:         0       0       0       0       0
  3373 ;;      Temps:          0       0       0       0       0
  3374 ;;      Totals:         2       0       0       0       0
  3375 ;;Total ram usage:        2 bytes
  3376 ;; Hardware stack levels used:    1
  3377 ;; Hardware stack levels required when called:    1
  3378 ;; This function calls:
  3379 ;;		_I2C_Master_Wait
  3380 ;; This function is called by:
  3381 ;;		_I2C_Start
  3382 ;;		_main
  3383 ;;		_MPU6050_Init
  3384 ;;		_MPU6050_Read
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3388                           	line	66
  3389                           global __ptext10
  3390                           __ptext10:	;psect for function _I2C_Master_Write
  3391  02B5                     psect	text10
  3392                           	file	"I2C.c"
  3393                           	line	66
  3394                           	global	__size_of_I2C_Master_Write
  3395                           	__size_of_I2C_Master_Write	equ	__end_of_I2C_Master_Write-_I2C_Master_Write
  3396  000A                     	
  3397                           _I2C_Master_Write:	
  3398  02B5                     ;incstack = 0
  3399                           	opt	stack 4
  3400                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3401                           	line	68
  3402                           	
  3403                           l1215:	
  3404  02B5                     ;I2C.c: 66: void I2C_Master_Write(unsigned d);I2C.c: 67: {;I2C.c: 68:     I2C_Master_Wai
                                 t();
  3405                           	fcall	_I2C_Master_Wait
  3406  02B5  120A  118A  22CC  120A  118A  	line	69
  3407                           	
  3408                           l1217:	
  3409  02BA                     ;I2C.c: 69:     SSPBUF = d;
  3410                           	movf	(I2C_Master_Write@d),w
  3411  02BA  0870               	bcf	status, 5	;RP0=0, select bank0
  3412  02BB  1283               	bcf	status, 6	;RP1=0, select bank0
  3413  02BC  1303               	movwf	(19)	;volatile
  3414  02BD  0093               	line	70
  3415                           	
  3416                           l57:	
  3417  02BE                     	return
  3418  02BE  0008               	opt stack 0
  3419                           GLOBAL	__end_of_I2C_Master_Write
  3420                           	__end_of_I2C_Master_Write:
  3421  02BF                     	signat	_I2C_Master_Write,4217
  3422                           	global	_I2C_Master_Stop
  3423                           
  3424 ;; *************** function _I2C_Master_Stop *****************
  3425 ;; Defined at:
  3426 ;;		line 56 in file "I2C.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;		None
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;		None
  3431 ;; Return value:  Size  Location     Type
  3432 ;;                  1    wreg      void 
  3433 ;; Registers used:
  3434 ;;		wreg, status,2, status,0, pclath, cstack
  3435 ;; Tracked objects:
  3436 ;;		On entry : 0/0
  3437 ;;		On exit  : 0/0
  3438 ;;		Unchanged: 0/0
  3439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3440 ;;      Params:         0       0       0       0       0
  3441 ;;      Locals:         0       0       0       0       0
  3442 ;;      Temps:          0       0       0       0       0
  3443 ;;      Totals:         0       0       0       0       0
  3444 ;;Total ram usage:        0 bytes
  3445 ;; Hardware stack levels used:    1
  3446 ;; Hardware stack levels required when called:    1
  3447 ;; This function calls:
  3448 ;;		_I2C_Master_Wait
  3449 ;; This function is called by:
  3450 ;;		_main
  3451 ;;		_MPU6050_Init
  3452 ;;		_MPU6050_Read
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  3456                           	line	56
  3457                           global __ptext11
  3458                           __ptext11:	;psect for function _I2C_Master_Stop
  3459  02AC                     psect	text11
  3460                           	file	"I2C.c"
  3461                           	line	56
  3462                           	global	__size_of_I2C_Master_Stop
  3463                           	__size_of_I2C_Master_Stop	equ	__end_of_I2C_Master_Stop-_I2C_Master_Stop
  3464  0009                     	
  3465                           _I2C_Master_Stop:	
  3466  02AC                     ;incstack = 0
  3467                           	opt	stack 5
  3468                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3469                           	line	58
  3470                           	
  3471                           l1247:	
  3472  02AC                     ;I2C.c: 58:     I2C_Master_Wait();
  3473                           	fcall	_I2C_Master_Wait
  3474  02AC  120A  118A  22CC  120A  118A  	line	59
  3475                           	
  3476                           l1249:	
  3477  02B1                     ;I2C.c: 59:     SSPCON2bits.PEN = 1;
  3478                           	bsf	status, 5	;RP0=1, select bank1
  3479  02B1  1683               	bcf	status, 6	;RP1=0, select bank1
  3480  02B2  1303               	bsf	(145)^080h,2	;volatile
  3481  02B3  1511               	line	60
  3482                           	
  3483                           l54:	
  3484  02B4                     	return
  3485  02B4  0008               	opt stack 0
  3486                           GLOBAL	__end_of_I2C_Master_Stop
  3487                           	__end_of_I2C_Master_Stop:
  3488  02B5                     	signat	_I2C_Master_Stop,89
  3489                           	global	_LCD_STRING
  3490                           
  3491 ;; *************** function _LCD_STRING *****************
  3492 ;; Defined at:
  3493 ;;		line 98 in file "LCD.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;  a               1    wreg     PTR unsigned char 
  3496 ;;		 -> STR_3(17), STR_2(16), STR_1(12), 
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;  a               1    4[COMMON] PTR unsigned char 
  3499 ;;		 -> STR_3(17), STR_2(16), STR_1(12), 
  3500 ;;  n               2    2[COMMON] int 
  3501 ;; Return value:  Size  Location     Type
  3502 ;;                  1    wreg      void 
  3503 ;; Registers used:
  3504 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3505 ;; Tracked objects:
  3506 ;;		On entry : 0/0
  3507 ;;		On exit  : 0/0
  3508 ;;		Unchanged: 0/0
  3509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3510 ;;      Params:         0       0       0       0       0
  3511 ;;      Locals:         3       0       0       0       0
  3512 ;;      Temps:          0       0       0       0       0
  3513 ;;      Totals:         3       0       0       0       0
  3514 ;;Total ram usage:        3 bytes
  3515 ;; Hardware stack levels used:    1
  3516 ;; Hardware stack levels required when called:    1
  3517 ;; This function calls:
  3518 ;;		_LCD_CHAR
  3519 ;; This function is called by:
  3520 ;;		_main
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  3524                           	file	"LCD.c"
  3525                           	line	98
  3526                           global __ptext12
  3527                           __ptext12:	;psect for function _LCD_STRING
  3528  0379                     psect	text12
  3529                           	file	"LCD.c"
  3530                           	line	98
  3531                           	global	__size_of_LCD_STRING
  3532                           	__size_of_LCD_STRING	equ	__end_of_LCD_STRING-_LCD_STRING
  3533  0027                     	
  3534                           _LCD_STRING:	
  3535  0379                     ;incstack = 0
  3536                           	opt	stack 6
  3537                           ; Regs used in _LCD_STRING: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3538                           ;LCD_STRING@a stored from wreg
  3539                           	movwf	(LCD_STRING@a)
  3540  0379  00F4               	line	101
  3541                           	
  3542                           l1351:	
  3543  037A                     ;LCD.c: 98: void LCD_STRING(char *a);LCD.c: 99: {;LCD.c: 100:     int n;;LCD.c: 101:    
                                  for(n = 0; a[n] != '\0'; n++){
  3544                           	clrf	(LCD_STRING@n)
  3545  037A  01F2               	clrf	(LCD_STRING@n+1)
  3546  037B  01F3               	goto	l1357
  3547  037C  2B91               	
  3548                           l137:	
  3549  037D                     	line	102
  3550                           	
  3551                           l1353:	
  3552  037D                     ;LCD.c: 102:         LCD_CHAR(a[n]);
  3553                           	movf	(LCD_STRING@n),w
  3554  037D  0872               	addwf	(LCD_STRING@a),w
  3555  037E  0774               	movwf	fsr0
  3556  037F  0084               	fcall	stringdir
  3557  0380  120A  118A  2003  120A  118A  	fcall	_LCD_CHAR
  3558  0385  120A  118A  22DB  120A  118A  	line	103
  3559                           	
  3560                           l1355:	
  3561  038A                     ;LCD.c: 103:     }
  3562                           	movlw	01h
  3563  038A  3001               	addwf	(LCD_STRING@n),f
  3564  038B  07F2               	skipnc
  3565  038C  1803               	incf	(LCD_STRING@n+1),f
  3566  038D  0AF3               	movlw	0
  3567  038E  3000               	addwf	(LCD_STRING@n+1),f
  3568  038F  07F3               	goto	l1357
  3569  0390  2B91               	
  3570                           l136:	
  3571  0391                     	
  3572                           l1357:	
  3573  0391                     	movf	(LCD_STRING@n),w
  3574  0391  0872               	addwf	(LCD_STRING@a),w
  3575  0392  0774               	movwf	fsr0
  3576  0393  0084               	fcall	stringdir
  3577  0394  120A  118A  2003  120A  118A  	xorlw	0
  3578  0399  3A00               	skipz
  3579  039A  1D03               	goto	u471
  3580  039B  2B9D               	goto	u470
  3581  039C  2B9E               u471:
  3582  039D                     	goto	l1353
  3583  039D  2B7D               u470:
  3584  039E                     	goto	l139
  3585  039E  2B9F               	
  3586                           l138:	
  3587  039F                     	line	104
  3588                           	
  3589                           l139:	
  3590  039F                     	return
  3591  039F  0008               	opt stack 0
  3592                           GLOBAL	__end_of_LCD_STRING
  3593                           	__end_of_LCD_STRING:
  3594  03A0                     	signat	_LCD_STRING,4217
  3595                           	global	_LCD_CHAR
  3596                           
  3597 ;; *************** function _LCD_CHAR *****************
  3598 ;; Defined at:
  3599 ;;		line 88 in file "LCD.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;  a               1    wreg     unsigned char 
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;  a               1    1[COMMON] unsigned char 
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  1    wreg      void 
  3606 ;; Registers used:
  3607 ;;		wreg
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3613 ;;      Params:         0       0       0       0       0
  3614 ;;      Locals:         1       0       0       0       0
  3615 ;;      Temps:          1       0       0       0       0
  3616 ;;      Totals:         2       0       0       0       0
  3617 ;;Total ram usage:        2 bytes
  3618 ;; Hardware stack levels used:    1
  3619 ;; This function calls:
  3620 ;;		Nothing
  3621 ;; This function is called by:
  3622 ;;		_LCD_STRING
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  3626                           	line	88
  3627                           global __ptext13
  3628                           __ptext13:	;psect for function _LCD_CHAR
  3629  02DB                     psect	text13
  3630                           	file	"LCD.c"
  3631                           	line	88
  3632                           	global	__size_of_LCD_CHAR
  3633                           	__size_of_LCD_CHAR	equ	__end_of_LCD_CHAR-_LCD_CHAR
  3634  000F                     	
  3635                           _LCD_CHAR:	
  3636  02DB                     ;incstack = 0
  3637                           	opt	stack 6
  3638                           ; Regs used in _LCD_CHAR: [wreg]
  3639                           ;LCD_CHAR@a stored from wreg
  3640                           	movwf	(LCD_CHAR@a)
  3641  02DB  00F1               	line	90
  3642                           	
  3643                           l1273:	
  3644  02DC                     ;LCD.c: 88: void LCD_CHAR(char a);LCD.c: 89: {;LCD.c: 90:     PORTDbits.RD5 = 1;
  3645                           	bcf	status, 5	;RP0=0, select bank0
  3646  02DC  1283               	bcf	status, 6	;RP1=0, select bank0
  3647  02DD  1303               	bsf	(8),5	;volatile
  3648  02DE  1688               	line	92
  3649                           	
  3650                           l1275:	
  3651  02DF                     ;LCD.c: 92:     PORTB = a;
  3652                           	movf	(LCD_CHAR@a),w
  3653  02DF  0871               	movwf	(6)	;volatile
  3654  02E0  0086               	line	93
  3655                           	
  3656                           l1277:	
  3657  02E1                     ;LCD.c: 93:     PORTDbits.RD7 = 1;
  3658                           	bsf	(8),7	;volatile
  3659  02E1  1788               	line	94
  3660                           ;LCD.c: 94:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3661                           	opt asmopt_push
  3662                           opt asmopt_off
  3663                           	movlw	13
  3664  02E2  300D               movwf	((??_LCD_CHAR+0)+0),f
  3665  02E3  00F0               	u617:
  3666  02E4                     decfsz	(??_LCD_CHAR+0)+0,f
  3667  02E4  0BF0               	goto	u617
  3668  02E5  2AE4               opt asmopt_pop
  3669                           
  3670                           	line	95
  3671                           	
  3672                           l1279:	
  3673  02E6                     ;LCD.c: 95:     PORTDbits.RD7 = 0;
  3674                           	bcf	status, 5	;RP0=0, select bank0
  3675  02E6  1283               	bcf	status, 6	;RP1=0, select bank0
  3676  02E7  1303               	bcf	(8),7	;volatile
  3677  02E8  1388               	line	96
  3678                           	
  3679                           l133:	
  3680  02E9                     	return
  3681  02E9  0008               	opt stack 0
  3682                           GLOBAL	__end_of_LCD_CHAR
  3683                           	__end_of_LCD_CHAR:
  3684  02EA                     	signat	_LCD_CHAR,4217
  3685                           	global	_LCD_CURSOR
  3686                           
  3687 ;; *************** function _LCD_CURSOR *****************
  3688 ;; Defined at:
  3689 ;;		line 71 in file "LCD.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;  a               2    4[COMMON] int 
  3692 ;;  b               2    6[COMMON] int 
  3693 ;; Auto vars:     Size  Location     Type
  3694 ;;  d               2    8[COMMON] int 
  3695 ;; Return value:  Size  Location     Type
  3696 ;;                  1    wreg      void 
  3697 ;; Registers used:
  3698 ;;		wreg, status,2, status,0, pclath, cstack
  3699 ;; Tracked objects:
  3700 ;;		On entry : 0/0
  3701 ;;		On exit  : 0/0
  3702 ;;		Unchanged: 0/0
  3703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3704 ;;      Params:         4       0       0       0       0
  3705 ;;      Locals:         2       0       0       0       0
  3706 ;;      Temps:          0       0       0       0       0
  3707 ;;      Totals:         6       0       0       0       0
  3708 ;;Total ram usage:        6 bytes
  3709 ;; Hardware stack levels used:    1
  3710 ;; Hardware stack levels required when called:    1
  3711 ;; This function calls:
  3712 ;;		_LCD_DATO
  3713 ;; This function is called by:
  3714 ;;		_main
  3715 ;; This function uses a non-reentrant model
  3716 ;;
  3717                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  3718                           	line	71
  3719                           global __ptext14
  3720                           __ptext14:	;psect for function _LCD_CURSOR
  3721  042E                     psect	text14
  3722                           	file	"LCD.c"
  3723                           	line	71
  3724                           	global	__size_of_LCD_CURSOR
  3725                           	__size_of_LCD_CURSOR	equ	__end_of_LCD_CURSOR-_LCD_CURSOR
  3726  0033                     	
  3727                           _LCD_CURSOR:	
  3728  042E                     ;incstack = 0
  3729                           	opt	stack 6
  3730                           ; Regs used in _LCD_CURSOR: [wreg+status,2+status,0+pclath+cstack]
  3731                           	line	74
  3732                           	
  3733                           l1339:	
  3734  042E                     ;LCD.c: 71: void LCD_CURSOR(int a, int b);LCD.c: 72: {;LCD.c: 73:     int d;;LCD.c: 74: 
                                  if(a == 1)
  3735                           		decf	((LCD_CURSOR@a)),w
  3736  042E  0374               iorwf	((LCD_CURSOR@a+1)),w
  3737  042F  0475               	btfss	status,2
  3738  0430  1D03               	goto	u451
  3739  0431  2C33               	goto	u450
  3740  0432  2C34               u451:
  3741  0433                     	goto	l1345
  3742  0433  2C46               u450:
  3743  0434                     	line	76
  3744                           	
  3745                           l1341:	
  3746  0434                     ;LCD.c: 75:  {;LCD.c: 76:         d = 0x80 + b - 1;
  3747                           	movf	(LCD_CURSOR@b),w
  3748  0434  0876               	addlw	low(07Fh)
  3749  0435  3E7F               	movwf	(LCD_CURSOR@d)
  3750  0436  00F8               	movf	(LCD_CURSOR@b+1),w
  3751  0437  0877               	skipnc
  3752  0438  1803               	addlw	1
  3753  0439  3E01               	addlw	high(07Fh)
  3754  043A  3E00               	movwf	1+(LCD_CURSOR@d)
  3755  043B  00F9               	line	77
  3756                           	
  3757                           l1343:	
  3758  043C                     ;LCD.c: 77:   LCD_DATO(d);
  3759                           	movf	(LCD_CURSOR@d+1),w
  3760  043C  0879               	movwf	(LCD_DATO@var+1)
  3761  043D  00F1               	movf	(LCD_CURSOR@d),w
  3762  043E  0878               	movwf	(LCD_DATO@var)
  3763  043F  00F0               	fcall	_LCD_DATO
  3764  0440  120A  118A  2355  120A  118A  	line	78
  3765                           ;LCD.c: 78:  }
  3766                           	goto	l130
  3767  0445  2C60               	line	79
  3768                           ;LCD.c: 79:  else if(a == 2)
  3769                           	
  3770                           l127:	
  3771  0446                     	
  3772                           l1345:	
  3773  0446                     		movlw	2
  3774  0446  3002               	xorwf	((LCD_CURSOR@a)),w
  3775  0447  0674               iorwf	((LCD_CURSOR@a+1)),w
  3776  0448  0475               	btfss	status,2
  3777  0449  1D03               	goto	u461
  3778  044A  2C4C               	goto	u460
  3779  044B  2C4D               u461:
  3780  044C                     	goto	l130
  3781  044C  2C60               u460:
  3782  044D                     	line	81
  3783                           	
  3784                           l1347:	
  3785  044D                     ;LCD.c: 80:  {;LCD.c: 81:   d = 0xC0 + b - 1;
  3786                           	movf	(LCD_CURSOR@b),w
  3787  044D  0876               	addlw	low(0BFh)
  3788  044E  3EBF               	movwf	(LCD_CURSOR@d)
  3789  044F  00F8               	movf	(LCD_CURSOR@b+1),w
  3790  0450  0877               	skipnc
  3791  0451  1803               	addlw	1
  3792  0452  3E01               	addlw	high(0BFh)
  3793  0453  3E00               	movwf	1+(LCD_CURSOR@d)
  3794  0454  00F9               	line	82
  3795                           	
  3796                           l1349:	
  3797  0455                     ;LCD.c: 82:   LCD_DATO(d);
  3798                           	movf	(LCD_CURSOR@d+1),w
  3799  0455  0879               	movwf	(LCD_DATO@var+1)
  3800  0456  00F1               	movf	(LCD_CURSOR@d),w
  3801  0457  0878               	movwf	(LCD_DATO@var)
  3802  0458  00F0               	fcall	_LCD_DATO
  3803  0459  120A  118A  2355  120A  118A  	goto	l130
  3804  045E  2C60               	line	83
  3805                           ;LCD.c: 83:  }
  3806                           	
  3807                           l129:	
  3808  045F                     	goto	l130
  3809  045F  2C60               	
  3810                           l128:	
  3811  0460                     	line	84
  3812                           	
  3813                           l130:	
  3814  0460                     	return
  3815  0460  0008               	opt stack 0
  3816                           GLOBAL	__end_of_LCD_CURSOR
  3817                           	__end_of_LCD_CURSOR:
  3818  0461                     	signat	_LCD_CURSOR,8313
  3819                           	global	_LCD_DATO
  3820                           
  3821 ;; *************** function _LCD_DATO *****************
  3822 ;; Defined at:
  3823 ;;		line 61 in file "LCD.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;  var             2    0[COMMON] int 
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;		None
  3828 ;; Return value:  Size  Location     Type
  3829 ;;                  1    wreg      void 
  3830 ;; Registers used:
  3831 ;;		wreg
  3832 ;; Tracked objects:
  3833 ;;		On entry : 0/0
  3834 ;;		On exit  : 0/0
  3835 ;;		Unchanged: 0/0
  3836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3837 ;;      Params:         2       0       0       0       0
  3838 ;;      Locals:         0       0       0       0       0
  3839 ;;      Temps:          2       0       0       0       0
  3840 ;;      Totals:         4       0       0       0       0
  3841 ;;Total ram usage:        4 bytes
  3842 ;; Hardware stack levels used:    1
  3843 ;; This function calls:
  3844 ;;		Nothing
  3845 ;; This function is called by:
  3846 ;;		_LCD_CURSOR
  3847 ;;		_main
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  3851                           	line	61
  3852                           global __ptext15
  3853                           __ptext15:	;psect for function _LCD_DATO
  3854  0355                     psect	text15
  3855                           	file	"LCD.c"
  3856                           	line	61
  3857                           	global	__size_of_LCD_DATO
  3858                           	__size_of_LCD_DATO	equ	__end_of_LCD_DATO-_LCD_DATO
  3859  0024                     	
  3860                           _LCD_DATO:	
  3861  0355                     ;incstack = 0
  3862                           	opt	stack 7
  3863                           ; Regs used in _LCD_DATO: [wreg]
  3864                           	line	62
  3865                           	
  3866                           l1265:	
  3867  0355                     ;LCD.c: 62:     PORTDbits.RD5 = 0;
  3868                           	bcf	status, 5	;RP0=0, select bank0
  3869  0355  1283               	bcf	status, 6	;RP1=0, select bank0
  3870  0356  1303               	bcf	(8),5	;volatile
  3871  0357  1288               	line	63
  3872                           	
  3873                           l1267:	
  3874  0358                     ;LCD.c: 63:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3875                           	opt asmopt_push
  3876                           opt asmopt_off
  3877                           movlw	7
  3878  0358  3007               movwf	((??_LCD_DATO+0)+0+1),f
  3879  0359  00F3               	movlw	125
  3880  035A  307D               movwf	((??_LCD_DATO+0)+0),f
  3881  035B  00F2               	u627:
  3882  035C                     decfsz	((??_LCD_DATO+0)+0),f
  3883  035C  0BF2               	goto	u627
  3884  035D  2B5C               	decfsz	((??_LCD_DATO+0)+0+1),f
  3885  035E  0BF3               	goto	u627
  3886  035F  2B5C               opt asmopt_pop
  3887                           
  3888                           	line	64
  3889                           	
  3890                           l1269:	
  3891  0360                     ;LCD.c: 64:     PORTDbits.RD7 = 1;
  3892                           	bcf	status, 5	;RP0=0, select bank0
  3893  0360  1283               	bcf	status, 6	;RP1=0, select bank0
  3894  0361  1303               	bsf	(8),7	;volatile
  3895  0362  1788               	line	65
  3896                           ;LCD.c: 65:     PORTB = var;
  3897                           	movf	(LCD_DATO@var),w
  3898  0363  0870               	movwf	(6)	;volatile
  3899  0364  0086               	line	66
  3900                           ;LCD.c: 66:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3901                           	opt asmopt_push
  3902                           opt asmopt_off
  3903                           movlw	7
  3904  0365  3007               movwf	((??_LCD_DATO+0)+0+1),f
  3905  0366  00F3               	movlw	125
  3906  0367  307D               movwf	((??_LCD_DATO+0)+0),f
  3907  0368  00F2               	u637:
  3908  0369                     decfsz	((??_LCD_DATO+0)+0),f
  3909  0369  0BF2               	goto	u637
  3910  036A  2B69               	decfsz	((??_LCD_DATO+0)+0+1),f
  3911  036B  0BF3               	goto	u637
  3912  036C  2B69               opt asmopt_pop
  3913                           
  3914                           	line	67
  3915                           	
  3916                           l1271:	
  3917  036D                     ;LCD.c: 67:     PORTDbits.RD7 = 0;
  3918                           	bcf	status, 5	;RP0=0, select bank0
  3919  036D  1283               	bcf	status, 6	;RP1=0, select bank0
  3920  036E  1303               	bcf	(8),7	;volatile
  3921  036F  1388               	line	68
  3922                           ;LCD.c: 68:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3923                           	opt asmopt_push
  3924                           opt asmopt_off
  3925                           movlw	7
  3926  0370  3007               movwf	((??_LCD_DATO+0)+0+1),f
  3927  0371  00F3               	movlw	125
  3928  0372  307D               movwf	((??_LCD_DATO+0)+0),f
  3929  0373  00F2               	u647:
  3930  0374                     decfsz	((??_LCD_DATO+0)+0),f
  3931  0374  0BF2               	goto	u647
  3932  0375  2B74               	decfsz	((??_LCD_DATO+0)+0+1),f
  3933  0376  0BF3               	goto	u647
  3934  0377  2B74               opt asmopt_pop
  3935                           
  3936                           	line	69
  3937                           	
  3938                           l124:	
  3939  0378                     	return
  3940  0378  0008               	opt stack 0
  3941                           GLOBAL	__end_of_LCD_DATO
  3942                           	__end_of_LCD_DATO:
  3943  0379                     	signat	_LCD_DATO,4217
  3944                           	global	_I2C_Master_Start
  3945                           
  3946 ;; *************** function _I2C_Master_Start *****************
  3947 ;; Defined at:
  3948 ;;		line 40 in file "I2C.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;		None
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;		None
  3953 ;; Return value:  Size  Location     Type
  3954 ;;                  1    wreg      void 
  3955 ;; Registers used:
  3956 ;;		wreg, status,2, status,0, pclath, cstack
  3957 ;; Tracked objects:
  3958 ;;		On entry : 0/0
  3959 ;;		On exit  : 0/0
  3960 ;;		Unchanged: 0/0
  3961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3962 ;;      Params:         0       0       0       0       0
  3963 ;;      Locals:         0       0       0       0       0
  3964 ;;      Temps:          0       0       0       0       0
  3965 ;;      Totals:         0       0       0       0       0
  3966 ;;Total ram usage:        0 bytes
  3967 ;; Hardware stack levels used:    1
  3968 ;; Hardware stack levels required when called:    1
  3969 ;; This function calls:
  3970 ;;		_I2C_Master_Wait
  3971 ;; This function is called by:
  3972 ;;		_main
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  3976                           	file	"I2C.c"
  3977                           	line	40
  3978                           global __ptext16
  3979                           __ptext16:	;psect for function _I2C_Master_Start
  3980  02A3                     psect	text16
  3981                           	file	"I2C.c"
  3982                           	line	40
  3983                           	global	__size_of_I2C_Master_Start
  3984                           	__size_of_I2C_Master_Start	equ	__end_of_I2C_Master_Start-_I2C_Master_Start
  3985  0009                     	
  3986                           _I2C_Master_Start:	
  3987  02A3                     ;incstack = 0
  3988                           	opt	stack 6
  3989                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3990                           	line	42
  3991                           	
  3992                           l1317:	
  3993  02A3                     ;I2C.c: 42:     I2C_Master_Wait();
  3994                           	fcall	_I2C_Master_Wait
  3995  02A3  120A  118A  22CC  120A  118A  	line	43
  3996                           	
  3997                           l1319:	
  3998  02A8                     ;I2C.c: 43:     SSPCON2bits.SEN = 1;
  3999                           	bsf	status, 5	;RP0=1, select bank1
  4000  02A8  1683               	bcf	status, 6	;RP1=0, select bank1
  4001  02A9  1303               	bsf	(145)^080h,0	;volatile
  4002  02AA  1411               	line	44
  4003                           	
  4004                           l48:	
  4005  02AB                     	return
  4006  02AB  0008               	opt stack 0
  4007                           GLOBAL	__end_of_I2C_Master_Start
  4008                           	__end_of_I2C_Master_Start:
  4009  02AC                     	signat	_I2C_Master_Start,89
  4010                           	global	_I2C_Master_Read
  4011                           
  4012 ;; *************** function _I2C_Master_Read *****************
  4013 ;; Defined at:
  4014 ;;		line 75 in file "I2C.c"
  4015 ;; Parameters:    Size  Location     Type
  4016 ;;  a               2    0[COMMON] unsigned short 
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;  temp            2    4[COMMON] unsigned short 
  4019 ;; Return value:  Size  Location     Type
  4020 ;;                  2    0[COMMON] unsigned short 
  4021 ;; Registers used:
  4022 ;;		wreg, status,2, status,0, pclath, cstack
  4023 ;; Tracked objects:
  4024 ;;		On entry : 0/0
  4025 ;;		On exit  : 0/0
  4026 ;;		Unchanged: 0/0
  4027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4028 ;;      Params:         2       0       0       0       0
  4029 ;;      Locals:         2       0       0       0       0
  4030 ;;      Temps:          2       0       0       0       0
  4031 ;;      Totals:         6       0       0       0       0
  4032 ;;Total ram usage:        6 bytes
  4033 ;; Hardware stack levels used:    1
  4034 ;; Hardware stack levels required when called:    1
  4035 ;; This function calls:
  4036 ;;		_I2C_Master_Wait
  4037 ;; This function is called by:
  4038 ;;		_main
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  4042                           	line	75
  4043                           global __ptext17
  4044                           __ptext17:	;psect for function _I2C_Master_Read
  4045  03CD                     psect	text17
  4046                           	file	"I2C.c"
  4047                           	line	75
  4048                           	global	__size_of_I2C_Master_Read
  4049                           	__size_of_I2C_Master_Read	equ	__end_of_I2C_Master_Read-_I2C_Master_Read
  4050  002F                     	
  4051                           _I2C_Master_Read:	
  4052  03CD                     ;incstack = 0
  4053                           	opt	stack 6
  4054                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4055                           	line	78
  4056                           	
  4057                           l1321:	
  4058  03CD                     ;I2C.c: 75: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 76: {;I2C.c: 77:    
                                  unsigned short temp;;I2C.c: 78:     I2C_Master_Wait();
  4059                           	fcall	_I2C_Master_Wait
  4060  03CD  120A  118A  22CC  120A  118A  	line	79
  4061                           	
  4062                           l1323:	
  4063  03D2                     ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
  4064                           	bsf	status, 5	;RP0=1, select bank1
  4065  03D2  1683               	bcf	status, 6	;RP1=0, select bank1
  4066  03D3  1303               	bsf	(145)^080h,3	;volatile
  4067  03D4  1591               	line	80
  4068                           ;I2C.c: 80:     I2C_Master_Wait();
  4069                           	fcall	_I2C_Master_Wait
  4070  03D5  120A  118A  22CC  120A  118A  	line	81
  4071                           	
  4072                           l1325:	
  4073  03DA                     ;I2C.c: 81:     temp = SSPBUF;
  4074                           	bcf	status, 5	;RP0=0, select bank0
  4075  03DA  1283               	bcf	status, 6	;RP1=0, select bank0
  4076  03DB  1303               	movf	(19),w	;volatile
  4077  03DC  0813               	movwf	(??_I2C_Master_Read+0)+0
  4078  03DD  00F2               	clrf	(??_I2C_Master_Read+0)+0+1
  4079  03DE  01F3               	movf	0+(??_I2C_Master_Read+0)+0,w
  4080  03DF  0872               	movwf	(I2C_Master_Read@temp)
  4081  03E0  00F4               	movf	1+(??_I2C_Master_Read+0)+0,w
  4082  03E1  0873               	movwf	(I2C_Master_Read@temp+1)
  4083  03E2  00F5               	line	82
  4084                           	
  4085                           l1327:	
  4086  03E3                     ;I2C.c: 82:     I2C_Master_Wait();
  4087                           	fcall	_I2C_Master_Wait
  4088  03E3  120A  118A  22CC  120A  118A  	line	83
  4089                           	
  4090                           l1329:	
  4091  03E8                     ;I2C.c: 83:     if(a == 1){
  4092                           		decf	((I2C_Master_Read@a)),w
  4093  03E8  0370               iorwf	((I2C_Master_Read@a+1)),w
  4094  03E9  0471               	btfss	status,2
  4095  03EA  1D03               	goto	u441
  4096  03EB  2BED               	goto	u440
  4097  03EC  2BEE               u441:
  4098  03ED                     	goto	l60
  4099  03ED  2BF2               u440:
  4100  03EE                     	line	84
  4101                           	
  4102                           l1331:	
  4103  03EE                     ;I2C.c: 84:         SSPCON2bits.ACKDT = 0;
  4104                           	bsf	status, 5	;RP0=1, select bank1
  4105  03EE  1683               	bcf	status, 6	;RP1=0, select bank1
  4106  03EF  1303               	bcf	(145)^080h,5	;volatile
  4107  03F0  1291               	line	85
  4108                           ;I2C.c: 85:     }else{
  4109                           	goto	l61
  4110  03F1  2BF5               	
  4111                           l60:	
  4112  03F2                     	line	86
  4113                           ;I2C.c: 86:         SSPCON2bits.ACKDT = 1;
  4114                           	bsf	status, 5	;RP0=1, select bank1
  4115  03F2  1683               	bcf	status, 6	;RP1=0, select bank1
  4116  03F3  1303               	bsf	(145)^080h,5	;volatile
  4117  03F4  1691               	line	87
  4118                           ;I2C.c: 87:     }
  4119                           	
  4120                           l61:	
  4121  03F5                     	line	88
  4122                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
  4123                           	bsf	(145)^080h,4	;volatile
  4124  03F5  1611               	line	89
  4125                           	
  4126                           l1333:	
  4127  03F6                     ;I2C.c: 89:     return temp;
  4128                           	movf	(I2C_Master_Read@temp+1),w
  4129  03F6  0875               	movwf	(?_I2C_Master_Read+1)
  4130  03F7  00F1               	movf	(I2C_Master_Read@temp),w
  4131  03F8  0874               	movwf	(?_I2C_Master_Read)
  4132  03F9  00F0               	goto	l62
  4133  03FA  2BFB               	
  4134                           l1335:	
  4135  03FB                     	line	90
  4136                           	
  4137                           l62:	
  4138  03FB                     	return
  4139  03FB  0008               	opt stack 0
  4140                           GLOBAL	__end_of_I2C_Master_Read
  4141                           	__end_of_I2C_Master_Read:
  4142  03FC                     	signat	_I2C_Master_Read,4218
  4143                           	global	_I2C_Master_Wait
  4144                           
  4145 ;; *************** function _I2C_Master_Wait *****************
  4146 ;; Defined at:
  4147 ;;		line 33 in file "I2C.c"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;		None
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;		None
  4152 ;; Return value:  Size  Location     Type
  4153 ;;                  1    wreg      void 
  4154 ;; Registers used:
  4155 ;;		wreg, status,2
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4161 ;;      Params:         0       0       0       0       0
  4162 ;;      Locals:         0       0       0       0       0
  4163 ;;      Temps:          0       0       0       0       0
  4164 ;;      Totals:         0       0       0       0       0
  4165 ;;Total ram usage:        0 bytes
  4166 ;; Hardware stack levels used:    1
  4167 ;; This function calls:
  4168 ;;		Nothing
  4169 ;; This function is called by:
  4170 ;;		_I2C_Master_Start
  4171 ;;		_I2C_Master_Stop
  4172 ;;		_I2C_Master_Write
  4173 ;;		_I2C_Master_Read
  4174 ;;		_I2C_Start
  4175 ;;		_I2C_Master_RepeatedStart
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  4179                           	line	33
  4180                           global __ptext18
  4181                           __ptext18:	;psect for function _I2C_Master_Wait
  4182  02CC                     psect	text18
  4183                           	file	"I2C.c"
  4184                           	line	33
  4185                           	global	__size_of_I2C_Master_Wait
  4186                           	__size_of_I2C_Master_Wait	equ	__end_of_I2C_Master_Wait-_I2C_Master_Wait
  4187  000F                     	
  4188                           _I2C_Master_Wait:	
  4189  02CC                     ;incstack = 0
  4190                           	opt	stack 4
  4191                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4192                           	line	35
  4193                           	
  4194                           l1199:	
  4195  02CC                     ;I2C.c: 35:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4196                           	goto	l42
  4197  02CC  2ACD               	
  4198                           l43:	
  4199  02CD                     	
  4200                           l42:	
  4201  02CD                     	bsf	status, 5	;RP0=1, select bank1
  4202  02CD  1683               	bcf	status, 6	;RP1=0, select bank1
  4203  02CE  1303               	btfsc	(148)^080h,(2)&7	;volatile
  4204  02CF  1914               	goto	u301
  4205  02D0  2AD2               	goto	u300
  4206  02D1  2AD3               u301:
  4207  02D2                     	goto	l42
  4208  02D2  2ACD               u300:
  4209  02D3                     	
  4210                           l1201:	
  4211  02D3                     	movf	(145)^080h,w	;volatile
  4212  02D3  0811               	andlw	01Fh
  4213  02D4  391F               	btfss	status,2
  4214  02D5  1D03               	goto	u311
  4215  02D6  2AD8               	goto	u310
  4216  02D7  2AD9               u311:
  4217  02D8                     	goto	l42
  4218  02D8  2ACD               u310:
  4219  02D9                     	goto	l45
  4220  02D9  2ADA               	
  4221                           l44:	
  4222  02DA                     	line	36
  4223                           	
  4224                           l45:	
  4225  02DA                     	return
  4226  02DA  0008               	opt stack 0
  4227                           GLOBAL	__end_of_I2C_Master_Wait
  4228                           	__end_of_I2C_Master_Wait:
  4229  02DB                     	signat	_I2C_Master_Wait,89
  4230                           	global	_I2C_Master_Init
  4231                           
  4232 ;; *************** function _I2C_Master_Init *****************
  4233 ;; Defined at:
  4234 ;;		line 17 in file "I2C.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;  c               4    0[BANK0 ] const unsigned long 
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;		None
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  1    wreg      void 
  4241 ;; Registers used:
  4242 ;;		wreg, status,2, status,0, pclath, cstack
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4248 ;;      Params:         0       4       0       0       0
  4249 ;;      Locals:         0       0       0       0       0
  4250 ;;      Temps:          0       4       0       0       0
  4251 ;;      Totals:         0       8       0       0       0
  4252 ;;Total ram usage:        8 bytes
  4253 ;; Hardware stack levels used:    1
  4254 ;; Hardware stack levels required when called:    1
  4255 ;; This function calls:
  4256 ;;		___lldiv
  4257 ;; This function is called by:
  4258 ;;		_main
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  4262                           	line	17
  4263                           global __ptext19
  4264                           __ptext19:	;psect for function _I2C_Master_Init
  4265  0461                     psect	text19
  4266                           	file	"I2C.c"
  4267                           	line	17
  4268                           	global	__size_of_I2C_Master_Init
  4269                           	__size_of_I2C_Master_Init	equ	__end_of_I2C_Master_Init-_I2C_Master_Init
  4270  0038                     	
  4271                           _I2C_Master_Init:	
  4272  0461                     ;incstack = 0
  4273                           	opt	stack 6
  4274                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  4275                           	line	19
  4276                           	
  4277                           l1305:	
  4278  0461                     ;I2C.c: 17: void I2C_Master_Init(const unsigned long c);I2C.c: 18: {;I2C.c: 19:     SSPC
                                 ON = 0b00101000;
  4279                           	movlw	low(028h)
  4280  0461  3028               	bcf	status, 5	;RP0=0, select bank0
  4281  0462  1283               	bcf	status, 6	;RP1=0, select bank0
  4282  0463  1303               	movwf	(20)	;volatile
  4283  0464  0094               	line	20
  4284                           	
  4285                           l1307:	
  4286  0465                     ;I2C.c: 20:     SSPCON2 = 0;
  4287                           	bsf	status, 5	;RP0=1, select bank1
  4288  0465  1683               	bcf	status, 6	;RP1=0, select bank1
  4289  0466  1303               	clrf	(145)^080h	;volatile
  4290  0467  0191               	line	21
  4291                           	
  4292                           l1309:	
  4293  0468                     ;I2C.c: 21:     SSPADD = (4000000/(4*c))-1;
  4294                           	bcf	status, 5	;RP0=0, select bank0
  4295  0468  1283               	bcf	status, 6	;RP1=0, select bank0
  4296  0469  1303               	movf	(I2C_Master_Init@c),w
  4297  046A  0840               	movwf	(??_I2C_Master_Init+0)+0
  4298  046B  00C4               	movf	(I2C_Master_Init@c+1),w
  4299  046C  0841               	movwf	((??_I2C_Master_Init+0)+0+1)
  4300  046D  00C5               	movf	(I2C_Master_Init@c+2),w
  4301  046E  0842               	movwf	((??_I2C_Master_Init+0)+0+2)
  4302  046F  00C6               	movf	(I2C_Master_Init@c+3),w
  4303  0470  0843               	movwf	((??_I2C_Master_Init+0)+0+3)
  4304  0471  00C7               	movlw	02h
  4305  0472  3002               u435:
  4306  0473                     	clrc
  4307  0473  1003               	rlf	(??_I2C_Master_Init+0)+0,f
  4308  0474  0DC4               	rlf	(??_I2C_Master_Init+0)+1,f
  4309  0475  0DC5               	rlf	(??_I2C_Master_Init+0)+2,f
  4310  0476  0DC6               	rlf	(??_I2C_Master_Init+0)+3,f
  4311  0477  0DC7               u430:
  4312  0478                     	addlw	-1
  4313  0478  3EFF               	skipz
  4314  0479  1D03               	goto	u435
  4315  047A  2C73               	movf	3+(??_I2C_Master_Init+0)+0,w
  4316  047B  0847               	movwf	(___lldiv@divisor+3)
  4317  047C  00F3               	movf	2+(??_I2C_Master_Init+0)+0,w
  4318  047D  0846               	movwf	(___lldiv@divisor+2)
  4319  047E  00F2               	movf	1+(??_I2C_Master_Init+0)+0,w
  4320  047F  0845               	movwf	(___lldiv@divisor+1)
  4321  0480  00F1               	movf	0+(??_I2C_Master_Init+0)+0,w
  4322  0481  0844               	movwf	(___lldiv@divisor)
  4323  0482  00F0               
  4324                           	movlw	0
  4325  0483  3000               	movwf	(___lldiv@dividend+3)
  4326  0484  00F7               	movlw	03Dh
  4327  0485  303D               	movwf	(___lldiv@dividend+2)
  4328  0486  00F6               	movlw	09h
  4329  0487  3009               	movwf	(___lldiv@dividend+1)
  4330  0488  00F5               	movlw	0
  4331  0489  3000               	movwf	(___lldiv@dividend)
  4332  048A  00F4               
  4333                           	fcall	___lldiv
  4334  048B  120A  118A  2499  120A  118A  	movf	(0+(?___lldiv)),w
  4335  0490  0870               	addlw	0FFh
  4336  0491  3EFF               	bsf	status, 5	;RP0=1, select bank1
  4337  0492  1683               	bcf	status, 6	;RP1=0, select bank1
  4338  0493  1303               	movwf	(147)^080h	;volatile
  4339  0494  0093               	line	22
  4340                           	
  4341                           l1311:	
  4342  0495                     ;I2C.c: 22:     SSPSTAT = 0;
  4343                           	clrf	(148)^080h	;volatile
  4344  0495  0194               	line	23
  4345                           	
  4346                           l1313:	
  4347  0496                     ;I2C.c: 23:     TRISCbits.TRISC3 = 1;
  4348                           	bsf	(135)^080h,3	;volatile
  4349  0496  1587               	line	24
  4350                           	
  4351                           l1315:	
  4352  0497                     ;I2C.c: 24:     TRISCbits.TRISC4 = 1;
  4353                           	bsf	(135)^080h,4	;volatile
  4354  0497  1607               	line	25
  4355                           	
  4356                           l39:	
  4357  0498                     	return
  4358  0498  0008               	opt stack 0
  4359                           GLOBAL	__end_of_I2C_Master_Init
  4360                           	__end_of_I2C_Master_Init:
  4361  0499                     	signat	_I2C_Master_Init,4217
  4362                           	global	___lldiv
  4363                           
  4364 ;; *************** function ___lldiv *****************
  4365 ;; Defined at:
  4366 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4367 ;; Parameters:    Size  Location     Type
  4368 ;;  divisor         4    0[COMMON] unsigned long 
  4369 ;;  dividend        4    4[COMMON] unsigned long 
  4370 ;; Auto vars:     Size  Location     Type
  4371 ;;  quotient        4    9[COMMON] unsigned long 
  4372 ;;  counter         1   13[COMMON] unsigned char 
  4373 ;; Return value:  Size  Location     Type
  4374 ;;                  4    0[COMMON] unsigned long 
  4375 ;; Registers used:
  4376 ;;		wreg, status,2, status,0
  4377 ;; Tracked objects:
  4378 ;;		On entry : 0/0
  4379 ;;		On exit  : 0/0
  4380 ;;		Unchanged: 0/0
  4381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4382 ;;      Params:         8       0       0       0       0
  4383 ;;      Locals:         5       0       0       0       0
  4384 ;;      Temps:          1       0       0       0       0
  4385 ;;      Totals:        14       0       0       0       0
  4386 ;;Total ram usage:       14 bytes
  4387 ;; Hardware stack levels used:    1
  4388 ;; This function calls:
  4389 ;;		Nothing
  4390 ;; This function is called by:
  4391 ;;		_I2C_Master_Init
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394                           psect	text20,local,class=CODE,delta=2,merge=1,group=1
  4395                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4396                           	line	5
  4397                           global __ptext20
  4398                           __ptext20:	;psect for function ___lldiv
  4399  0499                     psect	text20
  4400                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4401                           	line	5
  4402                           	global	__size_of___lldiv
  4403                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  4404  006D                     	
  4405                           ___lldiv:	
  4406  0499                     ;incstack = 0
  4407                           	opt	stack 6
  4408                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4409                           	line	13
  4410                           	
  4411                           l1281:	
  4412  0499                     	movlw	high highword(0)
  4413  0499  3000               	movwf	(___lldiv@quotient+3)
  4414  049A  00FC               	movlw	low highword(0)
  4415  049B  3000               	movwf	(___lldiv@quotient+2)
  4416  049C  00FB               	movlw	high(0)
  4417  049D  3000               	movwf	(___lldiv@quotient+1)
  4418  049E  00FA               	movlw	low(0)
  4419  049F  3000               	movwf	(___lldiv@quotient)
  4420  04A0  00F9               
  4421                           	line	14
  4422                           	movf	(___lldiv@divisor+3),w
  4423  04A1  0873               	iorwf	(___lldiv@divisor+2),w
  4424  04A2  0472               	iorwf	(___lldiv@divisor+1),w
  4425  04A3  0471               	iorwf	(___lldiv@divisor),w
  4426  04A4  0470               	skipnz
  4427  04A5  1903               	goto	u361
  4428  04A6  2CA8               	goto	u360
  4429  04A7  2CA9               u361:
  4430  04A8                     	goto	l1301
  4431  04A8  2CFC               u360:
  4432  04A9                     	line	15
  4433                           	
  4434                           l1283:	
  4435  04A9                     	clrf	(___lldiv@counter)
  4436  04A9  01FD               	incf	(___lldiv@counter),f
  4437  04AA  0AFD               	line	16
  4438                           	goto	l1287
  4439  04AB  2CBA               	
  4440                           l357:	
  4441  04AC                     	line	17
  4442                           	
  4443                           l1285:	
  4444  04AC                     	movlw	01h
  4445  04AC  3001               	movwf	(??___lldiv+0)+0
  4446  04AD  00F8               u375:
  4447  04AE                     	clrc
  4448  04AE  1003               	rlf	(___lldiv@divisor),f
  4449  04AF  0DF0               	rlf	(___lldiv@divisor+1),f
  4450  04B0  0DF1               	rlf	(___lldiv@divisor+2),f
  4451  04B1  0DF2               	rlf	(___lldiv@divisor+3),f
  4452  04B2  0DF3               	decfsz	(??___lldiv+0)+0
  4453  04B3  0BF8               	goto	u375
  4454  04B4  2CAE               	line	18
  4455                           	movlw	low(01h)
  4456  04B5  3001               	movwf	(??___lldiv+0)+0
  4457  04B6  00F8               	movf	(??___lldiv+0)+0,w
  4458  04B7  0878               	addwf	(___lldiv@counter),f
  4459  04B8  07FD               	goto	l1287
  4460  04B9  2CBA               	line	19
  4461                           	
  4462                           l356:	
  4463  04BA                     	line	16
  4464                           	
  4465                           l1287:	
  4466  04BA                     	btfss	(___lldiv@divisor+3),(31)&7
  4467  04BA  1FF3               	goto	u381
  4468  04BB  2CBD               	goto	u380
  4469  04BC  2CBE               u381:
  4470  04BD                     	goto	l1285
  4471  04BD  2CAC               u380:
  4472  04BE                     	goto	l1289
  4473  04BE  2CC0               	
  4474                           l358:	
  4475  04BF                     	goto	l1289
  4476  04BF  2CC0               	line	20
  4477                           	
  4478                           l359:	
  4479  04C0                     	line	21
  4480                           	
  4481                           l1289:	
  4482  04C0                     	movlw	01h
  4483  04C0  3001               	movwf	(??___lldiv+0)+0
  4484  04C1  00F8               u395:
  4485  04C2                     	clrc
  4486  04C2  1003               	rlf	(___lldiv@quotient),f
  4487  04C3  0DF9               	rlf	(___lldiv@quotient+1),f
  4488  04C4  0DFA               	rlf	(___lldiv@quotient+2),f
  4489  04C5  0DFB               	rlf	(___lldiv@quotient+3),f
  4490  04C6  0DFC               	decfsz	(??___lldiv+0)+0
  4491  04C7  0BF8               	goto	u395
  4492  04C8  2CC2               	line	22
  4493                           	
  4494                           l1291:	
  4495  04C9                     	movf	(___lldiv@divisor+3),w
  4496  04C9  0873               	subwf	(___lldiv@dividend+3),w
  4497  04CA  0277               	skipz
  4498  04CB  1D03               	goto	u405
  4499  04CC  2CD7               	movf	(___lldiv@divisor+2),w
  4500  04CD  0872               	subwf	(___lldiv@dividend+2),w
  4501  04CE  0276               	skipz
  4502  04CF  1D03               	goto	u405
  4503  04D0  2CD7               	movf	(___lldiv@divisor+1),w
  4504  04D1  0871               	subwf	(___lldiv@dividend+1),w
  4505  04D2  0275               	skipz
  4506  04D3  1D03               	goto	u405
  4507  04D4  2CD7               	movf	(___lldiv@divisor),w
  4508  04D5  0870               	subwf	(___lldiv@dividend),w
  4509  04D6  0274               u405:
  4510  04D7                     	skipc
  4511  04D7  1C03               	goto	u401
  4512  04D8  2CDA               	goto	u400
  4513  04D9  2CDB               u401:
  4514  04DA                     	goto	l1297
  4515  04DA  2CEB               u400:
  4516  04DB                     	line	23
  4517                           	
  4518                           l1293:	
  4519  04DB                     	movf	(___lldiv@divisor),w
  4520  04DB  0870               	subwf	(___lldiv@dividend),f
  4521  04DC  02F4               	movf	(___lldiv@divisor+1),w
  4522  04DD  0871               	skipc
  4523  04DE  1C03               	incfsz	(___lldiv@divisor+1),w
  4524  04DF  0F71               	subwf	(___lldiv@dividend+1),f
  4525  04E0  02F5               	movf	(___lldiv@divisor+2),w
  4526  04E1  0872               	skipc
  4527  04E2  1C03               	incfsz	(___lldiv@divisor+2),w
  4528  04E3  0F72               	subwf	(___lldiv@dividend+2),f
  4529  04E4  02F6               	movf	(___lldiv@divisor+3),w
  4530  04E5  0873               	skipc
  4531  04E6  1C03               	incfsz	(___lldiv@divisor+3),w
  4532  04E7  0F73               	subwf	(___lldiv@dividend+3),f
  4533  04E8  02F7               	line	24
  4534                           	
  4535                           l1295:	
  4536  04E9                     	bsf	(___lldiv@quotient)+(0/8),(0)&7
  4537  04E9  1479               	goto	l1297
  4538  04EA  2CEB               	line	25
  4539                           	
  4540                           l360:	
  4541  04EB                     	line	26
  4542                           	
  4543                           l1297:	
  4544  04EB                     	movlw	01h
  4545  04EB  3001               u415:
  4546  04EC                     	clrc
  4547  04EC  1003               	rrf	(___lldiv@divisor+3),f
  4548  04ED  0CF3               	rrf	(___lldiv@divisor+2),f
  4549  04EE  0CF2               	rrf	(___lldiv@divisor+1),f
  4550  04EF  0CF1               	rrf	(___lldiv@divisor),f
  4551  04F0  0CF0               	addlw	-1
  4552  04F1  3EFF               	skipz
  4553  04F2  1D03               	goto	u415
  4554  04F3  2CEC               
  4555                           	line	27
  4556                           	
  4557                           l1299:	
  4558  04F4                     	movlw	01h
  4559  04F4  3001               	subwf	(___lldiv@counter),f
  4560  04F5  02FD               	btfss	status,2
  4561  04F6  1D03               	goto	u421
  4562  04F7  2CF9               	goto	u420
  4563  04F8  2CFA               u421:
  4564  04F9                     	goto	l1289
  4565  04F9  2CC0               u420:
  4566  04FA                     	goto	l1301
  4567  04FA  2CFC               	
  4568                           l361:	
  4569  04FB                     	goto	l1301
  4570  04FB  2CFC               	line	28
  4571                           	
  4572                           l355:	
  4573  04FC                     	line	29
  4574                           	
  4575                           l1301:	
  4576  04FC                     	movf	(___lldiv@quotient+3),w
  4577  04FC  087C               	movwf	(?___lldiv+3)
  4578  04FD  00F3               	movf	(___lldiv@quotient+2),w
  4579  04FE  087B               	movwf	(?___lldiv+2)
  4580  04FF  00F2               	movf	(___lldiv@quotient+1),w
  4581  0500  087A               	movwf	(?___lldiv+1)
  4582  0501  00F1               	movf	(___lldiv@quotient),w
  4583  0502  0879               	movwf	(?___lldiv)
  4584  0503  00F0               
  4585                           	goto	l362
  4586  0504  2D05               	
  4587                           l1303:	
  4588  0505                     	line	30
  4589                           	
  4590                           l362:	
  4591  0505                     	return
  4592  0505  0008               	opt stack 0
  4593                           GLOBAL	__end_of___lldiv
  4594                           	__end_of___lldiv:
  4595  0506                     	signat	___lldiv,8316
  4596                           global	___latbits
  4597                           ___latbits	equ	2
  4598  0002                     	global	btemp
  4599                           	btemp set 07Eh
  4600  007E                     
  4601                           	DABS	1,126,2	;btemp
  4602                           	global	wtemp0
  4603                           	wtemp0 set btemp+0
  4604  007E                     	end


Data Sizes:
    Strings     45
    Constant    0
    Data        0
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      42
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_STRING@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_3(CODE[17]), STR_2(CODE[16]), STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_ready
    _lcd_ready->_delay
    _lcd_lat->_delay
    _MPU6050_Init->_I2C_Start
    _I2C_Start->_I2C_Master_Write
    _LCD_STRING->_LCD_CHAR
    _LCD_CURSOR->_LCD_DATO
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    9462
                                              8 BANK0      2     2      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _LCD_CURSOR
                           _LCD_DATO
                         _LCD_STRING
                       _MPU6050_Init
                             _config
                              _delay
                           _lcd_init
                             _mandar
 ---------------------------------------------------------------------------------
 (1) _mandar                                               2     0      2     782
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     814
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0     814
                                              7 COMMON     1     1      0
                            _lcd_lat
                          _lcd_ready
 ---------------------------------------------------------------------------------
 (3) _lcd_ready                                            1     1      0     396
                                              6 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _lcd_lat                                              0     0      0     396
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                6     4      2     396
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Init                                         0     0      0    3714
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _I2C_Start
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            3     3      0    1868
                                              2 COMMON     3     3      0
                    _I2C_Master_Wait
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2    1846
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _LCD_STRING                                           3     3      0     211
                                              2 COMMON     3     3      0
                           _LCD_CHAR
 ---------------------------------------------------------------------------------
 (2) _LCD_CHAR                                             2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_CURSOR                                           6     2      4     612
                                              4 COMMON     6     2      4
                           _LCD_DATO
 ---------------------------------------------------------------------------------
 (1) _LCD_DATO                                             4     2      2     326
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     349
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _LCD_CURSOR
     _LCD_DATO
   _LCD_DATO
   _LCD_STRING
     _LCD_CHAR
   _MPU6050_Init
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Start
       _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _config
   _delay
   _lcd_init
     _lcd_cmd
       _lcd_lat
         _delay
       _lcd_ready
         _delay
   _mandar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      38       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A      2A       5       52.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      38      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Mar 12 05:38:14 2020

              LCD_CURSOR@a 0074                LCD_CURSOR@b 0076                LCD_CURSOR@d 0078  
                        pc 0002         __size_of_I2C_Start 0016                __CFG_CP$OFF 0000  
                       _BF 04A0                         l42 02CD                         l43 02CD  
                       l44 02DA                         l60 03F2                         l45 02DA  
                       l61 03F5                         l62 03FB                         l54 02B4  
                       l39 0498                         l48 02AB                         l57 02BE  
                       l68 0335                         fsr 0004                        l102 02F9  
                      l110 030B                        l120 041D                        l200 06F9  
                      l121 042D                        l105 03CB                        l113 0354  
                      l201 070D                        l130 0460                        l106 03CC  
                      l202 0712                        l107 03CC                        l203 07EF  
                      l124 0378                        l220 031F                        l116 0409  
                      l204 07F0                        l133 02E9                        l117 042D  
                      l205 07F0                        l118 0412                        l127 0446  
                      l119 040C                        l223 02C0                        l128 0460  
                      l136 0391                        l224 02C0                        l129 045F  
                      l137 037D                        l225 02C7                        l138 039F  
                      l226 02CB                        l139 039F                        l237 05B2  
                      l360 04EB                        l361 04FB                        l362 0505  
                      l194 0610                        l355 04FC                        l195 06C9  
                      l356 04BA                        l196 06CC                        l357 04AC  
                      l197 06E0                        l358 04BF                        l198 06E5  
                      l359 04C0                        l199 06F6                        _GIE 005F  
                      u300 02D3                        u301 02D2                        u310 02D9  
                      u311 02D8                        u400 04DB                        u320 0407  
                      u401 04DA                        u321 0406                        u330 041C  
                      u331 041B                        u420 04FA                        u340 042C  
                      u500 06D9                        u421 04F9                        u405 04D7  
                      u341 042B                        u501 06D8                        u430 0478  
                      u350 03BD                        u510 06EB                        u415 04EC  
                      u335 0418                        u351 03BC                        u511 06EA  
                      u360 04A9                        u440 03EE                        u520 06F1  
                      u361 04A8                        u441 03ED                        u521 06F0  
                      u505 06D5                        u450 0434                        u530 0706  
             __CFG_CPD$OFF 0000                        u435 0473                        u451 0433  
                      u531 0705                        u380 04BE                        u460 044D  
                      u381 04BD                        u461 044C                        u470 039E  
                      u375 04AE                        u471 039D                        u607 0786  
                      u535 0702                        u480 02C6                        u617 02E4  
                      u481 02C5                        u490 06C4                        u395 04C2  
                      u627 035C                        u491 06C3                        u547 0637  
                      _SEN 0488                        u637 0369                        u557 0662  
                      u647 0374                        u567 068D                        u577 06B8  
                      u587 0736                        u597 075E                        _ala 0030  
                      fsr0 0004                        indf 0000                LCD_STRING@a 0074  
              LCD_STRING@n 0072               __CFG_LVP$OFF 0000                       l1201 02D3  
                     l1211 040C                       l1203 03FC                       l1301 04FC  
                     l1213 041D                       l1205 03FE                       l1221 02ED  
                     l1303 0505                       l1311 0495                       l1215 02B5  
                     l1207 0408                       l1223 02F6                       l1231 03A9  
                     l1313 0496                       l1305 0461                       l1321 03CD  
                     l1217 02BA                       l1209 0409                       l1241 03BD  
                     l1233 03AA                       l1225 03A0                       l1401 05FC  
                     l1315 0497                       l1307 0465                       l1331 03EE  
                     l1323 03D2                       l1251 0321                       l1219 02EA  
                     l1243 03BE                       l1235 03AB                       l1227 03A4  
                     l1411 062C                       l1403 0609                       l1309 0468  
                     l1333 03F6                       l1325 03DA                       l1317 02A3  
                     l1341 0434                       l1253 0326                       l1245 03C7  
                     l1237 03B4                       l1229 03A8                       l1261 0305  
                     l1501 078A                       l1421 0657                       l1413 0631  
                     l1405 0610                       l1335 03FB                       l1327 03E3  
                     l1319 02A8                       l1271 036D                       l1343 043C  
                     l1351 037A                       l1247 02AC                       l1239 03B7  
                     l1263 0306                       l1255 02FB                       l1511 07BB  
                     l1503 0793                       l1431 0682                       l1423 065C  
                     l1415 063B                       l1407 0615                       l1281 0499  
                     l1329 03E8                       l1265 0355                       l1345 0446  
                     l1273 02DC                       l1353 037D                       l1249 02B1  
                     l1361 030C                       l1257 0300                       l1337 0336  
                     l1513 07C6                       l1505 079E                       l1441 06AD  
                     l1433 0687                       l1425 0666                       l1417 0640  
                     l1409 061E                       l1291 04C9                       l1283 04A9  
                     l1267 0358                       l1347 044D                       l1339 042E  
                     l1275 02DF                       l1355 038A                       l1371 031C  
                     l1363 0313                       l1259 0304                       l1515 07CF  
                     l1507 07A7                       l1451 06CC                       l1443 06B2  
                     l1435 0691                       l1427 066B                       l1419 0649  
                     l1293 04DB                       l1285 04AC                       l1269 0360  
                     l1349 0455                       l1277 02E1                       l1357 0391  
                     l1365 0317                       l1373 02BF                       l1517 07DA  
                     l1509 07B2                       l1461 06F1                       l1453 06D9  
                     l1445 06BC                       l1437 0696                       l1429 0674  
                     l1381 05B3                       l1295 04E9                       l1287 04BA  
                     l1199 02CC                       l1279 02E6                       l1359 0506  
                     l1367 0318                       l1375 02C7                       l1519 07E3  
                     l1471 0712                       l1463 06F6                       l1455 06E0  
                     l1447 06C4                       l1439 069F                       l1391 05D5  
                     l1383 05B7                       l1297 04EB                       l1289 04C0  
                     l1369 031B                       l1481 073A                       l1473 0717  
                     l1465 06F9                       l1457 06E5                       l1449 06C9  
                     l1393 05DB                       l1385 05C6                       l1299 04F4  
                     l1491 0762                       l1483 073F                       l1475 0720  
                     l1467 0706                       l1459 06EB                       l1395 05E4  
                     l1387 05CB                       l1493 0767                       l1485 0748  
                     l1477 072B                       l1469 070D                       l1397 05EA  
                     l1389 05D0                       l1495 0770                       l1487 0753  
                     l1479 0730                       l1399 05F3                       l1497 077B  
                     l1489 0758                       l1499 0780                       STR_1 002A  
                     STR_2 001A                       STR_3 0009                       _PEIE 005E  
                     _RCEN 048B               __CFG_WRT$OFF 0000                       _main 05B3  
                     _mot1 0036                       _mot2 0034                       _mot3 0032  
                     btemp 007E                       start 0000              __CFG_IESO$OFF 0000  
         __end_of_LCD_CHAR 02EA           __end_of_LCD_DATO 0379           ?_I2C_Master_Init 0040  
         ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070                      _ACKEN 048C                      _ACKDT 048D  
            __CFG_WDTE$OFF 0000            __end_of___lldiv 0506                      _SPBRG 0099  
                    _PORTB 0006                      _TRISB 0086                      _TRISD 0088  
                    _SSPIE 0463                      _SSPIF 0063                      _TXREG 0019  
      __size_of_LCD_CURSOR 0033             __CFG_FCMEN$OFF 0000            __end_of_lcd_cmd 030C  
          __end_of_lcd_lat 02FA                      _delay 03FC        __size_of_LCD_STRING 0027  
            ?_MPU6050_Init 0070                      _valor 0020          __end_of_I2C_Start 0336  
           __CFG_BOREN$OFF 0000                      pclath 000A                      status 0003  
                    wtemp0 007E             __CFG_MCLRE$OFF 0000            __initialization 07F3  
             __end_of_main 07F3                     ??_main 0048          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0070             ??_MPU6050_Init 0075                     ?_delay 0070  
       ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072                     _SPBRGH 009A  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013             __CFG_PWRTE$OFF 0000  
         __end_of_lcd_init 0355                  ??___lldiv 0078                     _config 030C  
                   _mandar 02BF                     delay@i 0074                     delay@j 0072  
                   _valor1 003E                     _valor2 003C                     _valor3 003A  
                   _valor4 0038                  ??_lcd_cmd 0077                  ??_lcd_lat 0076  
                LCD_CHAR@a 0071                  ?_LCD_CHAR 0070                  ?_LCD_DATO 0070  
  __end_of__initialization 07FC               ??_LCD_CURSOR 0078               ??_LCD_STRING 0072  
           __pcstackCOMMON 0070              __end_of_delay 042E         __end_of_LCD_CURSOR 0461  
       __size_of_lcd_ready 002D                    ??_delay 0072         __end_of_LCD_STRING 03A0  
               __pbssBANK0 0020                 ??_LCD_CHAR 0070                 ??_LCD_DATO 0072  
               __pmaintext 05B3       __end_of_MPU6050_Init 05B3                    ?_config 0070  
                  ?_mandar 0070                    _SSPCON2 0091                  ?_lcd_init 0070  
                  _SSPSTAT 0094                 __stringtab 0003               I2C_Start@add 0074  
                _I2C_Start 0320          __end_of_lcd_ready 03CD                    ___lldiv 0499  
          __size_of_config 0014            __size_of_mandar 000D                    __ptext1 02BF  
                  __ptext2 0336                    __ptext3 02FA                    __ptext4 03A0  
                  __ptext5 02EA                    __ptext6 03FC                    __ptext7 030C  
                  __ptext8 0506                    __ptext9 0320                    _lcd_cmd 02FA  
                  _lcd_lat 02EA                    delay@ms 0070   __size_of_I2C_Master_Init 0038  
 __size_of_I2C_Master_Read 002F   __size_of_I2C_Master_Wait 000F   __size_of_I2C_Master_Stop 0009  
                  clrloop0 029C                 ??_lcd_init 0078       end_of_initialization 07FC  
               ?_I2C_Start 0070  __size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A  
          ___lldiv@divisor 0070            ___lldiv@counter 007D                  _RCSTAbits 0018  
         I2C_Master_Init@c 0040           I2C_Master_Read@a 0070                  _PORTDbits 0008  
                _TRISCbits 0087                  _TXSTAbits 0098          __size_of_LCD_CHAR 000F  
        __size_of_LCD_DATO 0024      __size_of_MPU6050_Init 00AD                _BAUDCTLbits 0187  
               mandar@dato 0070             __end_of_config 0320             __end_of_mandar 02CC  
      start_initialization 07F3               _MPU6050_Init 0506          ??_I2C_Master_Init 0044  
        ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070  
              ??_I2C_Start 0072   __CFG_FOSC$INTRC_NOCLKOUT 0000                   ??_config 0070  
                 ??_mandar 0072                  ___latbits 0002              __pcstackBANK0 0040  
        __size_of_lcd_init 001F           _I2C_Master_Start 02A3           _I2C_Master_Write 02B5  
                 ?___lldiv 0070                  _lcd_ready 03A0                  __pstrings 0003  
                 ?_lcd_cmd 0070                   ?_lcd_lat 0070             __size_of_delay 0032  
                 _LCD_CHAR 02DB                   _LCD_DATO 0355                  clear_ram0 029B  
               ?_lcd_ready 0070                __stringbase 0008        I2C_Master_Read@temp 0074  
         __size_of___lldiv 006D         __end_of__stringtab 0009           __size_of_lcd_cmd 0012  
         __size_of_lcd_lat 0010            _I2C_Master_Init 0461            _I2C_Master_Read 03CD  
          _I2C_Master_Wait 02CC            _I2C_Master_Stop 02AC                   __ptext10 02B5  
                 __ptext11 02AC                   __ptext20 0499                   __ptext12 0379  
                 __ptext13 02DB                   __ptext14 042E                   __ptext15 0355  
                 __ptext16 02A3                   __ptext17 03CD                   __ptext18 02CC  
                 __ptext19 0461          __CFG_BOR4V$BOR40V 0000                   _lcd_init 0336  
            __size_of_main 0240                 _LCD_CURSOR 042E                 _LCD_STRING 0379  
                 lcd_cmd@x 0077                ??_lcd_ready 0076   __end_of_I2C_Master_Start 02AC  
 __end_of_I2C_Master_Write 02BF           ___lldiv@dividend 0074                  stringcode 0003  
  __end_of_I2C_Master_Init 0499    __end_of_I2C_Master_Read 03FC    __end_of_I2C_Master_Wait 02DB  
  __end_of_I2C_Master_Stop 02B5           ___lldiv@quotient 0079          I2C_Master_Write@d 0070  
                 stringdir 0003                   stringtab 0003                _SSPCON2bits 0091  
              LCD_DATO@var 0070                ?_LCD_CURSOR 0074                ?_LCD_STRING 0070  
