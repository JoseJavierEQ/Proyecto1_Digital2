

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sat May 09 20:19:19 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     	FNCALL	_main,_LCD_CURSOR
   868                           	FNCALL	_main,_LCD_DATO
   869                           	FNCALL	_main,_LCD_STRING
   870                           	FNCALL	_main,___awdiv
   871                           	FNCALL	_main,_config
   872                           	FNCALL	_main,_lcd_init
   873                           	FNCALL	_main,_mandar
   874                           	FNCALL	_main,_spiInit
   875                           	FNCALL	_main,_sprintf
   876                           	FNCALL	_sprintf,___bmul
   877                           	FNCALL	_sprintf,___lwdiv
   878                           	FNCALL	_sprintf,___lwmod
   879                           	FNCALL	_sprintf,_isdigit
   880                           	FNCALL	_lcd_init,_lcd_cmd
   881                           	FNCALL	_lcd_cmd,_lcd_lat
   882                           	FNCALL	_lcd_cmd,_lcd_ready
   883                           	FNCALL	_lcd_ready,_delay
   884                           	FNCALL	_lcd_lat,_delay
   885                           	FNCALL	_LCD_STRING,_LCD_CHAR
   886                           	FNCALL	_LCD_CURSOR,_LCD_DATO
   887                           	FNROOT	_main
   888                           	FNCALL	_isr,_spiRead
   889                           	FNCALL	_isr,_spiWrite
   890                           	FNCALL	_spiRead,_spiReceiveWait
   891                           	FNCALL	intlevel1,_isr
   892                           	global	intlevel1
   893                           	FNROOT	intlevel1
   894                           	global	_dpowers
   895                           psect	strings,class=STRING,delta=2,noexec
   896                           global __pstrings
   897                           __pstrings:
   898  0600                     stringtab:
   899  0600                     	global    __stringtab
   900                           __stringtab:
   901  0600                     ;	String table - string pointers are 1 byte each
   902                           	btfsc	(btemp+1),7
   903  0600  1BFF               	ljmp	stringcode
   904  0601  2E0A               	bcf	status,7
   905  0602  1383               	btfsc	(btemp+1),0
   906  0603  187F               	bsf	status,7
   907  0604  1783               	movf	indf,w
   908  0605  0800               	incf fsr
   909  0606  0A84               skipnz
   910  0607  1903               incf btemp+1
   911  0608  0AFF               	return
   912  0609  0008               stringcode:stringdir:
   913  060A                     movlw high(stringdir)
      + 060A                     stringdir:	
   914  060A  3006               movwf pclath
   915  060B  008A               movf fsr,w
   916  060C  0804               incf fsr
   917  060D  0A84               	addwf pc
   918  060E  0782               	global __stringbase
   919                           __stringbase:
   920  060F                     	retlw	0
   921  060F  3400               psect	strings
   922                           	global    __end_of__stringtab
   923                           __end_of__stringtab:
   924  0610                     	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
   925                           	line	358
   926                           _dpowers:
   927  0610                     	retlw	01h
   928  0610  3401               	retlw	0
   929  0611  3400               
   930                           	retlw	0Ah
   931  0612  340A               	retlw	0
   932  0613  3400               
   933                           	retlw	064h
   934  0614  3464               	retlw	0
   935  0615  3400               
   936                           	retlw	0E8h
   937  0616  34E8               	retlw	03h
   938  0617  3403               
   939                           	retlw	010h
   940  0618  3410               	retlw	027h
   941  0619  3427               
   942                           	global __end_of_dpowers
   943                           __end_of_dpowers:
   944  061A                     	global	_dpowers
   945                           	global	_lectura
   946                           	global	_B
   947                           	global	_A
   948                           	global	_E1
   949                           	global	_D1
   950                           	global	_C1
   951                           	global	_B1
   952                           	global	_A1
   953                           	global	_E
   954                           	global	_D
   955                           	global	_C
   956                           	global	_e
   957                           	global	_d
   958                           	global	_c
   959                           	global	_b
   960                           	global	_a
   961                           	global	_valor
   962                           	global	_valor1
   963                           	global	_PORTDbits
   964                           _PORTDbits	set	0x8
   965  0008                     	global	_SSPBUF
   966                           _SSPBUF	set	0x13
   967  0013                     	global	_SSPCON
   968                           _SSPCON	set	0x14
   969  0014                     	global	_RCREG
   970                           _RCREG	set	0x1A
   971  001A                     	global	_PIR1bits
   972                           _PIR1bits	set	0xC
   973  000C                     	global	_INTCONbits
   974                           _INTCONbits	set	0xB
   975  000B                     	global	_PORTD
   976                           _PORTD	set	0x8
   977  0008                     	global	_PORTA
   978                           _PORTA	set	0x5
   979  0005                     	global	_PORTB
   980                           _PORTB	set	0x6
   981  0006                     	global	_TXREG
   982                           _TXREG	set	0x19
   983  0019                     	global	_RCSTAbits
   984                           _RCSTAbits	set	0x18
   985  0018                     	global	_RCIF
   986                           _RCIF	set	0x65
   987  0065                     	global	_SSPIF
   988                           _SSPIF	set	0x63
   989  0063                     	global	_SSPSTATbits
   990                           _SSPSTATbits	set	0x94
   991  0094                     	global	_SSPSTAT
   992                           _SSPSTAT	set	0x94
   993  0094                     	global	_TRISAbits
   994                           _TRISAbits	set	0x85
   995  0085                     	global	_PIE1bits
   996                           _PIE1bits	set	0x8C
   997  008C                     	global	_TRISA
   998                           _TRISA	set	0x85
   999  0085                     	global	_TRISCbits
  1000                           _TRISCbits	set	0x87
  1001  0087                     	global	_TRISB
  1002                           _TRISB	set	0x86
  1003  0086                     	global	_TRISD
  1004                           _TRISD	set	0x88
  1005  0088                     	global	_SPBRGH
  1006                           _SPBRGH	set	0x9A
  1007  009A                     	global	_SPBRG
  1008                           _SPBRG	set	0x99
  1009  0099                     	global	_TXSTAbits
  1010                           _TXSTAbits	set	0x98
  1011  0098                     	global	_TRISC3
  1012                           _TRISC3	set	0x43B
  1013  043B                     	global	_TRISC5
  1014                           _TRISC5	set	0x43D
  1015  043D                     	global	_ANSELH
  1016                           _ANSELH	set	0x189
  1017  0189                     	global	_ANSEL
  1018                           _ANSEL	set	0x188
  1019  0188                     	global	_BAUDCTLbits
  1020                           _BAUDCTLbits	set	0x187
  1021  0187                     	
  1022                           STR_4:	
  1023  061A                     	retlw	37	;'%'
  1024  061A  3425               	retlw	46	;'.'
  1025  061B  342E               	retlw	49	;'1'
  1026  061C  3431               	retlw	100	;'d'
  1027  061D  3464               	retlw	32	;' '
  1028  061E  3420               	retlw	37	;'%'
  1029  061F  3425               	retlw	46	;'.'
  1030  0620  342E               	retlw	49	;'1'
  1031  0621  3431               	retlw	100	;'d'
  1032  0622  3464               	retlw	32	;' '
  1033  0623  3420               	retlw	32	;' '
  1034  0624  3420               	retlw	37	;'%'
  1035  0625  3425               	retlw	46	;'.'
  1036  0626  342E               	retlw	51	;'3'
  1037  0627  3433               	retlw	100	;'d'
  1038  0628  3464               	retlw	32	;' '
  1039  0629  3420               	retlw	37	;'%'
  1040  062A  3425               	retlw	46	;'.'
  1041  062B  342E               	retlw	49	;'1'
  1042  062C  3431               	retlw	100	;'d'
  1043  062D  3464               	retlw	32	;' '
  1044  062E  3420               	retlw	32	;' '
  1045  062F  3420               	retlw	32	;' '
  1046  0630  3420               	retlw	32	;' '
  1047  0631  3420               	retlw	37	;'%'
  1048  0632  3425               	retlw	46	;'.'
  1049  0633  342E               	retlw	100	;'d'
  1050  0634  3464               	retlw	0
  1051  0635  3400               psect	strings
  1052                           	
  1053                           STR_3:	
  1054  0636                     	retlw	70	;'F'
  1055  0636  3446               	retlw	32	;' '
  1056  0637  3420               	retlw	76	;'L'
  1057  0638  344C               	retlw	108	;'l'
  1058  0639  346C               	retlw	32	;' '
  1059  063A  3420               	retlw	68	;'D'
  1060  063B  3444               	retlw	105	;'i'
  1061  063C  3469               	retlw	115	;'s'
  1062  063D  3473               	retlw	32	;' '
  1063  063E  3420               	retlw	76	;'L'
  1064  063F  344C               	retlw	105	;'i'
  1065  0640  3469               	retlw	32	;' '
  1066  0641  3420               	retlw	32	;' '
  1067  0642  3420               	retlw	83	;'S'
  1068  0643  3453               	retlw	101	;'e'
  1069  0644  3465               	retlw	99	;'c'
  1070  0645  3463               	retlw	0
  1071  0646  3400               psect	strings
  1072                           	
  1073                           STR_2:	
  1074  0647                     	retlw	69	;'E'
  1075  0647  3445               	retlw	83	;'S'
  1076  0648  3453               	retlw	84	;'T'
  1077  0649  3454               	retlw	82	;'R'
  1078  064A  3452               	retlw	65	;'A'
  1079  064B  3441               	retlw	68	;'D'
  1080  064C  3444               	retlw	65	;'A'
  1081  064D  3441               	retlw	32	;' '
  1082  064E  3420               	retlw	32	;' '
  1083  064F  3420               	retlw	35	;'#'
  1084  0650  3423               	retlw	49	;'1'
  1085  0651  3431               	retlw	55	;'7'
  1086  0652  3437               	retlw	48	;'0'
  1087  0653  3430               	retlw	55	;'7'
  1088  0654  3437               	retlw	56	;'8'
  1089  0655  3438               	retlw	0
  1090  0656  3400               psect	strings
  1091                           	
  1092                           STR_1:	
  1093  0657                     	retlw	74	;'J'
  1094  0657  344A               	retlw	79	;'O'
  1095  0658  344F               	retlw	83	;'S'
  1096  0659  3453               	retlw	69	;'E'
  1097  065A  3445               	retlw	32	;' '
  1098  065B  3420               	retlw	74	;'J'
  1099  065C  344A               	retlw	65	;'A'
  1100  065D  3441               	retlw	86	;'V'
  1101  065E  3456               	retlw	73	;'I'
  1102  065F  3449               	retlw	69	;'E'
  1103  0660  3445               	retlw	82	;'R'
  1104  0661  3452               	retlw	0
  1105  0662  3400               psect	strings
  1106                           ; #config settings
  1107                           global __CFG_FOSC$INTRC_NOCLKOUT
  1108                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1109  0000                     global __CFG_WDTE$OFF
  1110                           __CFG_WDTE$OFF equ 0x0
  1111  0000                     global __CFG_PWRTE$OFF
  1112                           __CFG_PWRTE$OFF equ 0x0
  1113  0000                     global __CFG_MCLRE$OFF
  1114                           __CFG_MCLRE$OFF equ 0x0
  1115  0000                     global __CFG_CP$OFF
  1116                           __CFG_CP$OFF equ 0x0
  1117  0000                     global __CFG_CPD$OFF
  1118                           __CFG_CPD$OFF equ 0x0
  1119  0000                     global __CFG_BOREN$OFF
  1120                           __CFG_BOREN$OFF equ 0x0
  1121  0000                     global __CFG_IESO$OFF
  1122                           __CFG_IESO$OFF equ 0x0
  1123  0000                     global __CFG_FCMEN$OFF
  1124                           __CFG_FCMEN$OFF equ 0x0
  1125  0000                     global __CFG_LVP$OFF
  1126                           __CFG_LVP$OFF equ 0x0
  1127  0000                     global __CFG_BOR4V$BOR40V
  1128                           __CFG_BOR4V$BOR40V equ 0x0
  1129  0000                     global __CFG_WRT$OFF
  1130                           __CFG_WRT$OFF equ 0x0
  1131  0000                     	file	"C:\Users\JOSJAV~1\AppData\Local\Temp\s3ns."
  1132                           	line	#
  1133                           psect cinit,class=CODE,delta=2
  1134                           global start_initialization
  1135                           start_initialization:
  1136  000F                     
  1137                           global __initialization
  1138                           __initialization:
  1139  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
  1140                           global __pbssCOMMON
  1141                           __pbssCOMMON:
  1142  0070                     _lectura:
  1143  0070                            ds      2
  1144  0070                     
  1145                           _B:
  1146  0072                            ds      2
  1147  0072                     
  1148                           _A:
  1149  0074                            ds      2
  1150  0074                     
  1151                           psect	bssBANK0,class=BANK0,space=1,noexec
  1152                           global __pbssBANK0
  1153                           __pbssBANK0:
  1154  0020                     _E1:
  1155  0020                            ds      2
  1156  0020                     
  1157                           _D1:
  1158  0022                            ds      2
  1159  0022                     
  1160                           _C1:
  1161  0024                            ds      2
  1162  0024                     
  1163                           _B1:
  1164  0026                            ds      2
  1165  0026                     
  1166                           _A1:
  1167  0028                            ds      2
  1168  0028                     
  1169                           _E:
  1170  002A                            ds      2
  1171  002A                     
  1172                           _D:
  1173  002C                            ds      2
  1174  002C                     
  1175                           _C:
  1176  002E                            ds      2
  1177  002E                     
  1178                           _e:
  1179  0030                            ds      2
  1180  0030                     
  1181                           _d:
  1182  0032                            ds      2
  1183  0032                     
  1184                           _c:
  1185  0034                            ds      2
  1186  0034                     
  1187                           _b:
  1188  0036                            ds      2
  1189  0036                     
  1190                           _a:
  1191  0038                            ds      2
  1192  0038                     
  1193                           _valor:
  1194  003A                            ds      16
  1195  003A                     
  1196                           psect	bssBANK1,class=BANK1,space=1,noexec
  1197                           global __pbssBANK1
  1198                           __pbssBANK1:
  1199  00A0                     _valor1:
  1200  00A0                            ds      16
  1201  00A0                     
  1202                           	file	"C:\Users\JOSJAV~1\AppData\Local\Temp\s3ns."
  1203                           	line	#
  1204                           psect clrtext,class=CODE,delta=2
  1205                           global clear_ram0
  1206                           ;	Called with FSR containing the base address, and
  1207                           ;	W with the last address+1
  1208                           clear_ram0:
  1209  0F6A                     	clrwdt			;clear the watchdog before getting into this loop
  1210  0F6A  0064               clrloop0:
  1211  0F6B                     	clrf	indf		;clear RAM location pointed to by FSR
  1212  0F6B  0180               	incf	fsr,f		;increment pointer
  1213  0F6C  0A84               	xorwf	fsr,w		;XOR with final address
  1214  0F6D  0604               	btfsc	status,2	;have we reached the end yet?
  1215  0F6E  1903               	retlw	0		;all done for this memory range, return
  1216  0F6F  3400               	xorwf	fsr,w		;XOR again to restore value
  1217  0F70  0604               	goto	clrloop0		;do the next byte
  1218  0F71  2F6B               
  1219                           ; Clear objects allocated to COMMON
  1220                           psect cinit,class=CODE,delta=2,merge=1
  1221                           	clrf	((__pbssCOMMON)+0)&07Fh
  1222  000F  01F0               	clrf	((__pbssCOMMON)+1)&07Fh
  1223  0010  01F1               	clrf	((__pbssCOMMON)+2)&07Fh
  1224  0011  01F2               	clrf	((__pbssCOMMON)+3)&07Fh
  1225  0012  01F3               	clrf	((__pbssCOMMON)+4)&07Fh
  1226  0013  01F4               	clrf	((__pbssCOMMON)+5)&07Fh
  1227  0014  01F5               ; Clear objects allocated to BANK0
  1228                           psect cinit,class=CODE,delta=2,merge=1
  1229                           	bcf	status, 7	;select IRP bank0
  1230  0015  1383               	movlw	low(__pbssBANK0)
  1231  0016  3020               	movwf	fsr
  1232  0017  0084               	movlw	low((__pbssBANK0)+02Ah)
  1233  0018  304A               	fcall	clear_ram0
  1234  0019  120A  158A  276A  120A  118A  ; Clear objects allocated to BANK1
  1235                           psect cinit,class=CODE,delta=2,merge=1
  1236                           	movlw	low(__pbssBANK1)
  1237  001E  30A0               	movwf	fsr
  1238  001F  0084               	movlw	low((__pbssBANK1)+010h)
  1239  0020  30B0               	fcall	clear_ram0
  1240  0021  120A  158A  276A  120A  118A  psect cinit,class=CODE,delta=2,merge=1
  1241                           global end_of_initialization,__end_of__initialization
  1242                           
  1243                           ;End of C runtime variable initialization code
  1244                           
  1245                           end_of_initialization:
  1246  0026                     __end_of__initialization:
  1247  0026                     clrf status
  1248  0026  0183               ljmp _main	;jump to C main() function
  1249  0027  120A  118A  282A   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1250                           global __pcstackCOMMON
  1251                           __pcstackCOMMON:
  1252  0076                     ?_isdigit:	; 1 bit 
  1253  0076                     ?_spiRead:	; 1 bytes @ 0x0
  1254  0076                     ??_spiRead:	; 1 bytes @ 0x0
  1255  0076                     ?_spiWrite:	; 1 bytes @ 0x0
  1256  0076                     ?_lcd_init:	; 1 bytes @ 0x0
  1257  0076                     ?_config:	; 1 bytes @ 0x0
  1258  0076                     ?_isr:	; 1 bytes @ 0x0
  1259  0076                     ?_main:	; 1 bytes @ 0x0
  1260  0076                     ?_spiReceiveWait:	; 1 bytes @ 0x0
  1261  0076                     ??_spiReceiveWait:	; 1 bytes @ 0x0
  1262  0076                     ?_lcd_lat:	; 1 bytes @ 0x0
  1263  0076                     ?_lcd_ready:	; 1 bytes @ 0x0
  1264  0076                     ?_lcd_cmd:	; 1 bytes @ 0x0
  1265  0076                     ?_LCD_CHAR:	; 1 bytes @ 0x0
  1266  0076                     	global	spiWrite@dat
  1267                           spiWrite@dat:	; 2 bytes @ 0x0
  1268  0076                     	ds	2
  1269  0076                     ??_spiWrite:	; 1 bytes @ 0x2
  1270  0078                     ??_isr:	; 1 bytes @ 0x2
  1271  0078                     	ds	4
  1272  0078                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1273                           global __pcstackBANK0
  1274                           __pcstackBANK0:
  1275  004A                     ?_spiInit:	; 1 bytes @ 0x0
  1276  004A                     ?_LCD_DATO:	; 1 bytes @ 0x0
  1277  004A                     ?_delay:	; 1 bytes @ 0x0
  1278  004A                     ??_isdigit:	; 1 bytes @ 0x0
  1279  004A                     ??_config:	; 1 bytes @ 0x0
  1280  004A                     ?_mandar:	; 1 bytes @ 0x0
  1281  004A                     ??_LCD_CHAR:	; 1 bytes @ 0x0
  1282  004A                     ?___bmul:	; 1 bytes @ 0x0
  1283  004A                     	global	?___awdiv
  1284                           ?___awdiv:	; 2 bytes @ 0x0
  1285  004A                     	global	?___lwdiv
  1286                           ?___lwdiv:	; 2 bytes @ 0x0
  1287  004A                     	global	spiInit@sDataSample
  1288                           spiInit@sDataSample:	; 1 bytes @ 0x0
  1289  004A                     	global	___bmul@multiplicand
  1290                           ___bmul@multiplicand:	; 1 bytes @ 0x0
  1291  004A                     	global	_isdigit$1048
  1292                           _isdigit$1048:	; 1 bytes @ 0x0
  1293  004A                     	global	mandar@dato
  1294                           mandar@dato:	; 2 bytes @ 0x0
  1295  004A                     	global	delay@ms
  1296                           delay@ms:	; 2 bytes @ 0x0
  1297  004A                     	global	LCD_DATO@var
  1298                           LCD_DATO@var:	; 2 bytes @ 0x0
  1299  004A                     	global	___awdiv@divisor
  1300                           ___awdiv@divisor:	; 2 bytes @ 0x0
  1301  004A                     	global	___lwdiv@divisor
  1302                           ___lwdiv@divisor:	; 2 bytes @ 0x0
  1303  004A                     	ds	1
  1304  004A                     ??___bmul:	; 1 bytes @ 0x1
  1305  004B                     	global	spiInit@sClockIdle
  1306                           spiInit@sClockIdle:	; 1 bytes @ 0x1
  1307  004B                     	global	LCD_CHAR@a
  1308                           LCD_CHAR@a:	; 1 bytes @ 0x1
  1309  004B                     	global	isdigit@c
  1310                           isdigit@c:	; 1 bytes @ 0x1
  1311  004B                     	ds	1
  1312  004B                     ?_LCD_STRING:	; 1 bytes @ 0x2
  1313  004C                     ??_LCD_DATO:	; 1 bytes @ 0x2
  1314  004C                     ??_delay:	; 1 bytes @ 0x2
  1315  004C                     ??_mandar:	; 1 bytes @ 0x2
  1316  004C                     	global	spiInit@sTransmitEdge
  1317                           spiInit@sTransmitEdge:	; 1 bytes @ 0x2
  1318  004C                     	global	___bmul@product
  1319                           ___bmul@product:	; 1 bytes @ 0x2
  1320  004C                     	global	delay@j
  1321                           delay@j:	; 2 bytes @ 0x2
  1322  004C                     	global	LCD_STRING@a
  1323                           LCD_STRING@a:	; 2 bytes @ 0x2
  1324  004C                     	global	___awdiv@dividend
  1325                           ___awdiv@dividend:	; 2 bytes @ 0x2
  1326  004C                     	global	___lwdiv@dividend
  1327                           ___lwdiv@dividend:	; 2 bytes @ 0x2
  1328  004C                     	ds	1
  1329  004C                     ??_spiInit:	; 1 bytes @ 0x3
  1330  004D                     	global	spiInit@sType
  1331                           spiInit@sType:	; 1 bytes @ 0x3
  1332  004D                     	global	___bmul@multiplier
  1333                           ___bmul@multiplier:	; 1 bytes @ 0x3
  1334  004D                     	ds	1
  1335  004D                     ??_LCD_STRING:	; 1 bytes @ 0x4
  1336  004E                     ?_LCD_CURSOR:	; 1 bytes @ 0x4
  1337  004E                     ??___awdiv:	; 1 bytes @ 0x4
  1338  004E                     ??___lwdiv:	; 1 bytes @ 0x4
  1339  004E                     	global	delay@i
  1340                           delay@i:	; 2 bytes @ 0x4
  1341  004E                     	global	LCD_CURSOR@a
  1342                           LCD_CURSOR@a:	; 2 bytes @ 0x4
  1343  004E                     	ds	1
  1344  004E                     	global	___awdiv@counter
  1345                           ___awdiv@counter:	; 1 bytes @ 0x5
  1346  004F                     	global	___lwdiv@counter
  1347                           ___lwdiv@counter:	; 1 bytes @ 0x5
  1348  004F                     	ds	1
  1349  004F                     ??_lcd_lat:	; 1 bytes @ 0x6
  1350  0050                     ??_lcd_ready:	; 1 bytes @ 0x6
  1351  0050                     	global	___awdiv@sign
  1352                           ___awdiv@sign:	; 1 bytes @ 0x6
  1353  0050                     	global	LCD_CURSOR@b
  1354                           LCD_CURSOR@b:	; 2 bytes @ 0x6
  1355  0050                     	global	___lwdiv@quotient
  1356                           ___lwdiv@quotient:	; 2 bytes @ 0x6
  1357  0050                     	ds	1
  1358  0050                     ??_lcd_cmd:	; 1 bytes @ 0x7
  1359  0051                     	global	lcd_cmd@x
  1360                           lcd_cmd@x:	; 1 bytes @ 0x7
  1361  0051                     	global	LCD_STRING@n
  1362                           LCD_STRING@n:	; 2 bytes @ 0x7
  1363  0051                     	global	___awdiv@quotient
  1364                           ___awdiv@quotient:	; 2 bytes @ 0x7
  1365  0051                     	ds	1
  1366  0051                     ??_lcd_init:	; 1 bytes @ 0x8
  1367  0052                     ??_LCD_CURSOR:	; 1 bytes @ 0x8
  1368  0052                     	global	?___lwmod
  1369                           ?___lwmod:	; 2 bytes @ 0x8
  1370  0052                     	global	LCD_CURSOR@d
  1371                           LCD_CURSOR@d:	; 2 bytes @ 0x8
  1372  0052                     	global	___lwmod@divisor
  1373                           ___lwmod@divisor:	; 2 bytes @ 0x8
  1374  0052                     	ds	2
  1375  0052                     	global	___lwmod@dividend
  1376                           ___lwmod@dividend:	; 2 bytes @ 0xA
  1377  0054                     	ds	2
  1378  0054                     ??___lwmod:	; 1 bytes @ 0xC
  1379  0056                     	ds	1
  1380  0056                     	global	___lwmod@counter
  1381                           ___lwmod@counter:	; 1 bytes @ 0xD
  1382  0057                     	ds	1
  1383  0057                     	global	?_sprintf
  1384                           ?_sprintf:	; 2 bytes @ 0xE
  1385  0058                     	global	sprintf@f
  1386                           sprintf@f:	; 1 bytes @ 0xE
  1387  0058                     	ds	11
  1388  0058                     ??_sprintf:	; 1 bytes @ 0x19
  1389  0063                     	ds	3
  1390  0063                     	global	sprintf@ap
  1391                           sprintf@ap:	; 1 bytes @ 0x1C
  1392  0066                     	ds	1
  1393  0066                     	global	sprintf@flag
  1394                           sprintf@flag:	; 1 bytes @ 0x1D
  1395  0067                     	ds	1
  1396  0067                     	global	sprintf@val
  1397                           sprintf@val:	; 2 bytes @ 0x1E
  1398  0068                     	ds	2
  1399  0068                     	global	sprintf@sp
  1400                           sprintf@sp:	; 1 bytes @ 0x20
  1401  006A                     	ds	1
  1402  006A                     	global	sprintf@prec
  1403                           sprintf@prec:	; 1 bytes @ 0x21
  1404  006B                     	ds	1
  1405  006B                     	global	sprintf@c
  1406                           sprintf@c:	; 1 bytes @ 0x22
  1407  006C                     	ds	1
  1408  006C                     ??_main:	; 1 bytes @ 0x23
  1409  006D                     	ds	3
  1410  006D                     ;!
  1411                           ;!Data Sizes:
  1412                           ;!    Strings     73
  1413                           ;!    Constant    10
  1414                           ;!    Data        0
  1415                           ;!    BSS         64
  1416                           ;!    Persistent  0
  1417                           ;!    Stack       0
  1418                           ;!
  1419                           ;!Auto Spaces:
  1420                           ;!    Space          Size  Autos    Used
  1421                           ;!    COMMON           14      6      12
  1422                           ;!    BANK0            80     38      80
  1423                           ;!    BANK1            80      0      16
  1424                           ;!    BANK3            96      0       0
  1425                           ;!    BANK2            96      0       0
  1426                           
  1427                           ;!
  1428                           ;!Pointer List with Targets:
  1429                           ;!
  1430                           ;!    sprintf@f	PTR const unsigned char  size(1) Largest target is 28
  1431                           ;!		 -> STR_4(CODE[28]), STR_3(CODE[17]), 
  1432                           ;!
  1433                           ;!    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
  1434                           ;!		 -> valor(BANK0[16]), valor1(BANK1[16]), 
  1435                           ;!
  1436                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  1437                           ;!		 -> ?_sprintf(BANK0[2]), 
  1438                           ;!
  1439                           ;!    LCD_STRING@a	PTR unsigned char  size(2) Largest target is 16
  1440                           ;!		 -> valor(BANK0[16]), valor1(BANK1[16]), STR_2(CODE[16]), STR_1(CODE[12]), 
  1441                           ;!
  1442                           
  1443                           
  1444                           ;!
  1445                           ;!Critical Paths under _main in COMMON
  1446                           ;!
  1447                           ;!    None.
  1448                           ;!
  1449                           ;!Critical Paths under _isr in COMMON
  1450                           ;!
  1451                           ;!    _isr->_spiWrite
  1452                           ;!
  1453                           ;!Critical Paths under _main in BANK0
  1454                           ;!
  1455                           ;!    _main->_sprintf
  1456                           ;!    _sprintf->___lwmod
  1457                           ;!    ___lwmod->___lwdiv
  1458                           ;!    _lcd_init->_lcd_cmd
  1459                           ;!    _lcd_cmd->_lcd_ready
  1460                           ;!    _lcd_ready->_delay
  1461                           ;!    _lcd_lat->_delay
  1462                           ;!    _LCD_STRING->_LCD_CHAR
  1463                           ;!    _LCD_CURSOR->_LCD_DATO
  1464                           ;!
  1465                           ;!Critical Paths under _isr in BANK0
  1466                           ;!
  1467                           ;!    None.
  1468                           ;!
  1469                           ;!Critical Paths under _main in BANK1
  1470                           ;!
  1471                           ;!    None.
  1472                           ;!
  1473                           ;!Critical Paths under _isr in BANK1
  1474                           ;!
  1475                           ;!    None.
  1476                           ;!
  1477                           ;!Critical Paths under _main in BANK3
  1478                           ;!
  1479                           ;!    None.
  1480                           ;!
  1481                           ;!Critical Paths under _isr in BANK3
  1482                           ;!
  1483                           ;!    None.
  1484                           ;!
  1485                           ;!Critical Paths under _main in BANK2
  1486                           ;!
  1487                           ;!    None.
  1488                           ;!
  1489                           ;!Critical Paths under _isr in BANK2
  1490                           ;!
  1491                           ;!    None.
  1492                           
  1493 ;;
  1494 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1495 ;;
  1496                           
  1497                           ;!
  1498                           ;!Call Graph Tables:
  1499                           ;!
  1500                           ;! ---------------------------------------------------------------------------------
  1501                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1502                           ;! ---------------------------------------------------------------------------------
  1503                           ;! (0) _main                                                 3     3      0    8348
  1504                           ;!                                             35 BANK0      3     3      0
  1505                           ;!                         _LCD_CURSOR
  1506                           ;!                           _LCD_DATO
  1507                           ;!                         _LCD_STRING
  1508                           ;!                            ___awdiv
  1509                           ;!                             _config
  1510                           ;!                           _lcd_init
  1511                           ;!                             _mandar
  1512                           ;!                            _spiInit
  1513                           ;!                            _sprintf
  1514                           ;! ---------------------------------------------------------------------------------
  1515                           ;! (1) _sprintf                                             29    18     11    2468
  1516                           ;!                                             14 BANK0     21    10     11
  1517                           ;!                             ___bmul
  1518                           ;!                            ___lwdiv
  1519                           ;!                            ___lwmod
  1520                           ;!                            _isdigit
  1521                           ;! ---------------------------------------------------------------------------------
  1522                           ;! (2) _isdigit                                              2     2      0      99
  1523                           ;!                                              0 BANK0      2     2      0
  1524                           ;! ---------------------------------------------------------------------------------
  1525                           ;! (2) ___lwmod                                              6     2      4     412
  1526                           ;!                                              8 BANK0      6     2      4
  1527                           ;!                            ___lwdiv (ARG)
  1528                           ;! ---------------------------------------------------------------------------------
  1529                           ;! (2) ___lwdiv                                              8     4      4     421
  1530                           ;!                                              0 BANK0      8     4      4
  1531                           ;! ---------------------------------------------------------------------------------
  1532                           ;! (2) ___bmul                                               4     3      1     226
  1533                           ;!                                              0 BANK0      4     3      1
  1534                           ;! ---------------------------------------------------------------------------------
  1535                           ;! (1) _spiInit                                              4     1      3     456
  1536                           ;!                                              0 BANK0      4     1      3
  1537                           ;! ---------------------------------------------------------------------------------
  1538                           ;! (1) _mandar                                               2     0      2     481
  1539                           ;!                                              0 BANK0      2     0      2
  1540                           ;! ---------------------------------------------------------------------------------
  1541                           ;! (1) _lcd_init                                             0     0      0     843
  1542                           ;!                            _lcd_cmd
  1543                           ;! ---------------------------------------------------------------------------------
  1544                           ;! (2) _lcd_cmd                                              1     1      0     843
  1545                           ;!                                              7 BANK0      1     1      0
  1546                           ;!                            _lcd_lat
  1547                           ;!                          _lcd_ready
  1548                           ;! ---------------------------------------------------------------------------------
  1549                           ;! (3) _lcd_ready                                            1     1      0     406
  1550                           ;!                                              6 BANK0      1     1      0
  1551                           ;!                              _delay
  1552                           ;! ---------------------------------------------------------------------------------
  1553                           ;! (3) _lcd_lat                                              0     0      0     406
  1554                           ;!                              _delay
  1555                           ;! ---------------------------------------------------------------------------------
  1556                           ;! (4) _delay                                                6     4      2     406
  1557                           ;!                                              0 BANK0      6     4      2
  1558                           ;! ---------------------------------------------------------------------------------
  1559                           ;! (1) _config                                               0     0      0       0
  1560                           ;! ---------------------------------------------------------------------------------
  1561                           ;! (1) ___awdiv                                              9     5      4    2245
  1562                           ;!                                              0 BANK0      9     5      4
  1563                           ;! ---------------------------------------------------------------------------------
  1564                           ;! (1) _LCD_STRING                                           7     5      2     521
  1565                           ;!                                              2 BANK0      7     5      2
  1566                           ;!                           _LCD_CHAR
  1567                           ;! ---------------------------------------------------------------------------------
  1568                           ;! (2) _LCD_CHAR                                             2     2      0      31
  1569                           ;!                                              0 BANK0      2     2      0
  1570                           ;! ---------------------------------------------------------------------------------
  1571                           ;! (1) _LCD_CURSOR                                           6     2      4     943
  1572                           ;!                                              4 BANK0      6     2      4
  1573                           ;!                           _LCD_DATO
  1574                           ;! ---------------------------------------------------------------------------------
  1575                           ;! (1) _LCD_DATO                                             4     2      2     391
  1576                           ;!                                              0 BANK0      4     2      2
  1577                           ;! ---------------------------------------------------------------------------------
  1578                           ;! Estimated maximum stack depth 4
  1579                           ;! ---------------------------------------------------------------------------------
  1580                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1581                           ;! ---------------------------------------------------------------------------------
  1582                           ;! (5) _isr                                                  4     4      0     858
  1583                           ;!                                              2 COMMON     4     4      0
  1584                           ;!                            _spiRead
  1585                           ;!                           _spiWrite
  1586                           ;! ---------------------------------------------------------------------------------
  1587                           ;! (6) _spiWrite                                             2     0      2     858
  1588                           ;!                                              0 COMMON     2     0      2
  1589                           ;! ---------------------------------------------------------------------------------
  1590                           ;! (6) _spiRead                                              0     0      0       0
  1591                           ;!                     _spiReceiveWait
  1592                           ;! ---------------------------------------------------------------------------------
  1593                           ;! (7) _spiReceiveWait                                       0     0      0       0
  1594                           ;! ---------------------------------------------------------------------------------
  1595                           ;! Estimated maximum stack depth 7
  1596                           ;! ---------------------------------------------------------------------------------
  1597                           ;!
  1598                           ;! Call Graph Graphs:
  1599                           ;!
  1600                           ;! _main (ROOT)
  1601                           ;!   _LCD_CURSOR
  1602                           ;!     _LCD_DATO
  1603                           ;!   _LCD_DATO
  1604                           ;!   _LCD_STRING
  1605                           ;!     _LCD_CHAR
  1606                           ;!   ___awdiv
  1607                           ;!   _config
  1608                           ;!   _lcd_init
  1609                           ;!     _lcd_cmd
  1610                           ;!       _lcd_lat
  1611                           ;!         _delay
  1612                           ;!       _lcd_ready
  1613                           ;!         _delay
  1614                           ;!   _mandar
  1615                           ;!   _spiInit
  1616                           ;!   _sprintf
  1617                           ;!     ___bmul
  1618                           ;!     ___lwdiv
  1619                           ;!     ___lwmod
  1620                           ;!       ___lwdiv (ARG)
  1621                           ;!     _isdigit
  1622                           ;!
  1623                           ;! _isr (ROOT)
  1624                           ;!   _spiRead
  1625                           ;!     _spiReceiveWait
  1626                           ;!   _spiWrite
  1627                           ;!
  1628                           
  1629                           ;! Address spaces:
  1630                           
  1631                           ;!Name               Size   Autos  Total    Cost      Usage
  1632                           ;!BITCOMMON            E      0       0       0        0.0%
  1633                           ;!EEDATA             100      0       0       0        0.0%
  1634                           ;!NULL                 0      0       0       0        0.0%
  1635                           ;!CODE                 0      0       0       0        0.0%
  1636                           ;!COMMON               E      6       C       1       85.7%
  1637                           ;!BITSFR0              0      0       0       1        0.0%
  1638                           ;!SFR0                 0      0       0       1        0.0%
  1639                           ;!BITSFR1              0      0       0       2        0.0%
  1640                           ;!SFR1                 0      0       0       2        0.0%
  1641                           ;!STACK                0      0       0       2        0.0%
  1642                           ;!ABS                  0      0      6C       3        0.0%
  1643                           ;!BITBANK0            50      0       0       4        0.0%
  1644                           ;!BITSFR3              0      0       0       4        0.0%
  1645                           ;!SFR3                 0      0       0       4        0.0%
  1646                           ;!BANK0               50     26      50       5      100.0%
  1647                           ;!BITSFR2              0      0       0       5        0.0%
  1648                           ;!SFR2                 0      0       0       5        0.0%
  1649                           ;!BITBANK1            50      0       0       6        0.0%
  1650                           ;!BANK1               50      0      10       7       20.0%
  1651                           ;!BITBANK3            60      0       0       8        0.0%
  1652                           ;!BANK3               60      0       0       9        0.0%
  1653                           ;!BITBANK2            60      0       0      10        0.0%
  1654                           ;!BANK2               60      0       0      11        0.0%
  1655                           ;!DATA                 0      0      6C      12        0.0%
  1656                           
  1657                           	global	_main
  1658                           
  1659 ;; *************** function _main *****************
  1660 ;; Defined at:
  1661 ;;		line 67 in file "Prin-Raspi.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;		None
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;		None
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  1    wreg      void 
  1668 ;; Registers used:
  1669 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1670 ;; Tracked objects:
  1671 ;;		On entry : B00/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1675 ;;      Params:         0       0       0       0       0
  1676 ;;      Locals:         0       0       0       0       0
  1677 ;;      Temps:          0       3       0       0       0
  1678 ;;      Totals:         0       3       0       0       0
  1679 ;;Total ram usage:        3 bytes
  1680 ;; Hardware stack levels required when called:    7
  1681 ;; This function calls:
  1682 ;;		_LCD_CURSOR
  1683 ;;		_LCD_DATO
  1684 ;;		_LCD_STRING
  1685 ;;		___awdiv
  1686 ;;		_config
  1687 ;;		_lcd_init
  1688 ;;		_mandar
  1689 ;;		_spiInit
  1690 ;;		_sprintf
  1691 ;; This function is called by:
  1692 ;;		Startup code after reset
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1696                           	file	"Prin-Raspi.c"
  1697                           	line	67
  1698                           global __pmaintext
  1699                           __pmaintext:	;psect for function _main
  1700  002A                     psect	maintext
  1701                           	file	"Prin-Raspi.c"
  1702                           	line	67
  1703                           	global	__size_of_main
  1704                           	__size_of_main	equ	__end_of_main-_main
  1705  02A0                     	
  1706                           _main:	
  1707  002A                     ;incstack = 0
  1708                           	opt	stack 1
  1709                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1710                           	line	68
  1711                           	
  1712                           l2169:	
  1713  002A                     ;Prin-Raspi.c: 68: TRISD = 0x00;
  1714                           	bsf	status, 5	;RP0=1, select bank1
  1715  002A  1683               	bcf	status, 6	;RP1=0, select bank1
  1716  002B  1303               	clrf	(136)^080h	;volatile
  1717  002C  0188               	line	69
  1718                           ;Prin-Raspi.c: 69: TRISB = 0x00;
  1719                           	clrf	(134)^080h	;volatile
  1720  002D  0186               	line	70
  1721                           	
  1722                           l2171:	
  1723  002E                     ;Prin-Raspi.c: 70: TRISCbits.TRISC0 = 1;
  1724                           	bsf	(135)^080h,0	;volatile
  1725  002E  1407               	line	71
  1726                           ;Prin-Raspi.c: 71: ANSEL = 0;
  1727                           	bsf	status, 5	;RP0=1, select bank3
  1728  002F  1683               	bsf	status, 6	;RP1=1, select bank3
  1729  0030  1703               	clrf	(392)^0180h	;volatile
  1730  0031  0188               	line	72
  1731                           ;Prin-Raspi.c: 72: ANSELH = 0;
  1732                           	clrf	(393)^0180h	;volatile
  1733  0032  0189               	line	73
  1734                           ;Prin-Raspi.c: 73: PORTB = 0;
  1735                           	bcf	status, 5	;RP0=0, select bank0
  1736  0033  1283               	bcf	status, 6	;RP1=0, select bank0
  1737  0034  1303               	clrf	(6)	;volatile
  1738  0035  0186               	line	74
  1739                           ;Prin-Raspi.c: 74: PORTA = 0;
  1740                           	clrf	(5)	;volatile
  1741  0036  0185               	line	75
  1742                           ;Prin-Raspi.c: 75: PORTD = 0;
  1743                           	clrf	(8)	;volatile
  1744  0037  0188               	line	76
  1745                           	
  1746                           l2173:	
  1747  0038                     ;Prin-Raspi.c: 76: ANSEL = 0B11111111;
  1748                           	movlw	low(0FFh)
  1749  0038  30FF               	bsf	status, 5	;RP0=1, select bank3
  1750  0039  1683               	bsf	status, 6	;RP1=1, select bank3
  1751  003A  1703               	movwf	(392)^0180h	;volatile
  1752  003B  0088               	line	77
  1753                           	
  1754                           l2175:	
  1755  003C                     ;Prin-Raspi.c: 77: TRISA = 0B11111111;
  1756                           	movlw	low(0FFh)
  1757  003C  30FF               	bsf	status, 5	;RP0=1, select bank1
  1758  003D  1683               	bcf	status, 6	;RP1=0, select bank1
  1759  003E  1303               	movwf	(133)^080h	;volatile
  1760  003F  0085               	line	78
  1761                           	
  1762                           l2177:	
  1763  0040                     ;Prin-Raspi.c: 78: INTCONbits.GIE = 1;
  1764                           	bsf	(11),7	;volatile
  1765  0040  178B               	line	79
  1766                           	
  1767                           l2179:	
  1768  0041                     ;Prin-Raspi.c: 79: INTCONbits.PEIE = 1;
  1769                           	bsf	(11),6	;volatile
  1770  0041  170B               	line	80
  1771                           	
  1772                           l2181:	
  1773  0042                     ;Prin-Raspi.c: 80: PIR1bits.SSPIF = 0;
  1774                           	bcf	status, 5	;RP0=0, select bank0
  1775  0042  1283               	bcf	status, 6	;RP1=0, select bank0
  1776  0043  1303               	bcf	(12),3	;volatile
  1777  0044  118C               	line	81
  1778                           	
  1779                           l2183:	
  1780  0045                     ;Prin-Raspi.c: 81: PIE1bits.SSPIE = 1;
  1781                           	bsf	status, 5	;RP0=1, select bank1
  1782  0045  1683               	bcf	status, 6	;RP1=0, select bank1
  1783  0046  1303               	bsf	(140)^080h,3	;volatile
  1784  0047  158C               	line	82
  1785                           	
  1786                           l2185:	
  1787  0048                     ;Prin-Raspi.c: 82: TRISAbits.TRISA5 = 1;
  1788                           	bsf	(133)^080h,5	;volatile
  1789  0048  1685               	line	83
  1790                           	
  1791                           l2187:	
  1792  0049                     ;Prin-Raspi.c: 83: spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, 
                                 SPI_IDLE_2_ACTIVE);
  1793                           	bcf	status, 5	;RP0=0, select bank0
  1794  0049  1283               	bcf	status, 6	;RP1=0, select bank0
  1795  004A  1303               	clrf	(spiInit@sDataSample)
  1796  004B  01CA               	clrf	(spiInit@sClockIdle)
  1797  004C  01CB               	clrf	(spiInit@sTransmitEdge)
  1798  004D  01CC               	movlw	low(024h)
  1799  004E  3024               	fcall	_spiInit
  1800  004F  120A  118A  25B3  120A  118A  	line	84
  1801                           	
  1802                           l2189:	
  1803  0054                     ;Prin-Raspi.c: 84: config();
  1804                           	fcall	_config
  1805  0054  120A  158A  27A7  120A  118A  	line	85
  1806                           	
  1807                           l2191:	
  1808  0059                     ;Prin-Raspi.c: 85: lcd_init();
  1809                           	fcall	_lcd_init
  1810  0059  120A  118A  25D2  120A  118A  	line	86
  1811                           	
  1812                           l2193:	
  1813  005E                     ;Prin-Raspi.c: 86: LCD_STRING("JOSE JAVIER");
  1814                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  1815  005E  3048               	bcf	status, 5	;RP0=0, select bank0
  1816  005F  1283               	bcf	status, 6	;RP1=0, select bank0
  1817  0060  1303               	movwf	(LCD_STRING@a)
  1818  0061  00CC               	movlw	80h
  1819  0062  3080               	movwf	(LCD_STRING@a+1)
  1820  0063  00CD               	fcall	_LCD_STRING
  1821  0064  120A  118A  26B0  120A  118A  	line	87
  1822                           	
  1823                           l2195:	
  1824  0069                     ;Prin-Raspi.c: 87: LCD_DATO(0xC0);
  1825                           	movlw	0C0h
  1826  0069  30C0               	bcf	status, 5	;RP0=0, select bank0
  1827  006A  1283               	bcf	status, 6	;RP1=0, select bank0
  1828  006B  1303               	movwf	(LCD_DATO@var)
  1829  006C  00CA               	movlw	0
  1830  006D  3000               	movwf	((LCD_DATO@var))+1
  1831  006E  00CB               	fcall	_LCD_DATO
  1832  006F  120A  118A  27D3  120A  118A  	line	88
  1833                           	
  1834                           l2197:	
  1835  0074                     ;Prin-Raspi.c: 88: LCD_STRING("ESTRADA  #17078");
  1836                           	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  1837  0074  3038               	bcf	status, 5	;RP0=0, select bank0
  1838  0075  1283               	bcf	status, 6	;RP1=0, select bank0
  1839  0076  1303               	movwf	(LCD_STRING@a)
  1840  0077  00CC               	movlw	80h
  1841  0078  3080               	movwf	(LCD_STRING@a+1)
  1842  0079  00CD               	fcall	_LCD_STRING
  1843  007A  120A  118A  26B0  120A  118A  	line	89
  1844                           	
  1845                           l2199:	
  1846  007F                     ;Prin-Raspi.c: 89: _delay((unsigned long)((500)*(4000000/4000.0)));
  1847                           	opt asmopt_push
  1848                           opt asmopt_off
  1849                           movlw  3
  1850  007F  3003               	bcf	status, 5	;RP0=0, select bank0
  1851  0080  1283               	bcf	status, 6	;RP1=0, select bank0
  1852  0081  1303               movwf	((??_main+0)+0+2),f
  1853  0082  00EF               movlw	138
  1854  0083  308A               movwf	((??_main+0)+0+1),f
  1855  0084  00EE               	movlw	85
  1856  0085  3055               movwf	((??_main+0)+0),f
  1857  0086  00ED               	u2117:
  1858  0087                     decfsz	((??_main+0)+0),f
  1859  0087  0BED               	goto	u2117
  1860  0088  2887               	decfsz	((??_main+0)+0+1),f
  1861  0089  0BEE               	goto	u2117
  1862  008A  2887               	decfsz	((??_main+0)+0+2),f
  1863  008B  0BEF               	goto	u2117
  1864  008C  2887               opt asmopt_pop
  1865                           
  1866                           	line	90
  1867                           	
  1868                           l2201:	
  1869  008D                     ;Prin-Raspi.c: 90: LCD_DATO(0x01);
  1870                           	movlw	01h
  1871  008D  3001               	bcf	status, 5	;RP0=0, select bank0
  1872  008E  1283               	bcf	status, 6	;RP1=0, select bank0
  1873  008F  1303               	movwf	(LCD_DATO@var)
  1874  0090  00CA               	movlw	0
  1875  0091  3000               	movwf	((LCD_DATO@var))+1
  1876  0092  00CB               	fcall	_LCD_DATO
  1877  0093  120A  118A  27D3  120A  118A  	goto	l2203
  1878  0098  2899               	line	91
  1879                           ;Prin-Raspi.c: 91: while (1){ sprintf(valor1, "F Ll Dis Li  Sec");
  1880                           	
  1881                           l142:	
  1882  0099                     	
  1883                           l2203:	
  1884  0099                     	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  1885  0099  3027               	bcf	status, 5	;RP0=0, select bank0
  1886  009A  1283               	bcf	status, 6	;RP1=0, select bank0
  1887  009B  1303               	movwf	(??_main+0)+0
  1888  009C  00ED               	movf	(??_main+0)+0,w
  1889  009D  086D               	movwf	(sprintf@f)
  1890  009E  00D8               	movlw	(low(_valor1|((0x0)<<8)))&0ffh
  1891  009F  30A0               	fcall	_sprintf
  1892  00A0  120A  118A  22CA  120A  118A  	line	93
  1893                           	
  1894                           l2205:	
  1895  00A5                     ;Prin-Raspi.c: 93: LCD_CURSOR(1,1);
  1896                           	movlw	01h
  1897  00A5  3001               	bcf	status, 5	;RP0=0, select bank0
  1898  00A6  1283               	bcf	status, 6	;RP1=0, select bank0
  1899  00A7  1303               	movwf	(LCD_CURSOR@a)
  1900  00A8  00CE               	movlw	0
  1901  00A9  3000               	movwf	((LCD_CURSOR@a))+1
  1902  00AA  00CF               	movlw	01h
  1903  00AB  3001               	movwf	(LCD_CURSOR@b)
  1904  00AC  00D0               	movlw	0
  1905  00AD  3000               	movwf	((LCD_CURSOR@b))+1
  1906  00AE  00D1               	fcall	_LCD_CURSOR
  1907  00AF  120A  118A  273B  120A  118A  	line	94
  1908                           	
  1909                           l2207:	
  1910  00B4                     ;Prin-Raspi.c: 94: LCD_STRING(valor1);
  1911                           	movlw	(low(_valor1|((0x0)<<8))&0ffh)
  1912  00B4  30A0               	bcf	status, 5	;RP0=0, select bank0
  1913  00B5  1283               	bcf	status, 6	;RP1=0, select bank0
  1914  00B6  1303               	movwf	(LCD_STRING@a)
  1915  00B7  00CC               	movlw	(0x0)
  1916  00B8  3000               	movwf	(LCD_STRING@a+1)
  1917  00B9  00CD               	fcall	_LCD_STRING
  1918  00BA  120A  118A  26B0  120A  118A  	line	95
  1919                           	
  1920                           l2209:	
  1921  00BF                     ;Prin-Raspi.c: 95: sprintf(valor, "%.1d %.1d  %.3d %.1d    %.d", B1, D1, C1, E1, A1);
  1922                           	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  1923  00BF  300B               	bcf	status, 5	;RP0=0, select bank0
  1924  00C0  1283               	bcf	status, 6	;RP1=0, select bank0
  1925  00C1  1303               	movwf	(??_main+0)+0
  1926  00C2  00ED               	movf	(??_main+0)+0,w
  1927  00C3  086D               	movwf	(sprintf@f)
  1928  00C4  00D8               	movf	(_B1+1),w
  1929  00C5  0827               	movwf	1+(?_sprintf)+01h
  1930  00C6  00DA               	movf	(_B1),w
  1931  00C7  0826               	movwf	0+(?_sprintf)+01h
  1932  00C8  00D9               	movf	(_D1+1),w
  1933  00C9  0823               	movwf	1+(?_sprintf)+03h
  1934  00CA  00DC               	movf	(_D1),w
  1935  00CB  0822               	movwf	0+(?_sprintf)+03h
  1936  00CC  00DB               	movf	(_C1+1),w
  1937  00CD  0825               	movwf	1+(?_sprintf)+05h
  1938  00CE  00DE               	movf	(_C1),w
  1939  00CF  0824               	movwf	0+(?_sprintf)+05h
  1940  00D0  00DD               	movf	(_E1+1),w
  1941  00D1  0821               	movwf	1+(?_sprintf)+07h
  1942  00D2  00E0               	movf	(_E1),w
  1943  00D3  0820               	movwf	0+(?_sprintf)+07h
  1944  00D4  00DF               	movf	(_A1+1),w
  1945  00D5  0829               	movwf	1+(?_sprintf)+09h
  1946  00D6  00E2               	movf	(_A1),w
  1947  00D7  0828               	movwf	0+(?_sprintf)+09h
  1948  00D8  00E1               	movlw	(low(_valor|((0x0)<<8)))&0ffh
  1949  00D9  303A               	fcall	_sprintf
  1950  00DA  120A  118A  22CA  120A  118A  	line	96
  1951                           	
  1952                           l2211:	
  1953  00DF                     ;Prin-Raspi.c: 96: LCD_CURSOR(2,1);
  1954                           	movlw	02h
  1955  00DF  3002               	bcf	status, 5	;RP0=0, select bank0
  1956  00E0  1283               	bcf	status, 6	;RP1=0, select bank0
  1957  00E1  1303               	movwf	(LCD_CURSOR@a)
  1958  00E2  00CE               	movlw	0
  1959  00E3  3000               	movwf	((LCD_CURSOR@a))+1
  1960  00E4  00CF               	movlw	01h
  1961  00E5  3001               	movwf	(LCD_CURSOR@b)
  1962  00E6  00D0               	movlw	0
  1963  00E7  3000               	movwf	((LCD_CURSOR@b))+1
  1964  00E8  00D1               	fcall	_LCD_CURSOR
  1965  00E9  120A  118A  273B  120A  118A  	line	97
  1966                           	
  1967                           l2213:	
  1968  00EE                     ;Prin-Raspi.c: 97: LCD_STRING(valor);
  1969                           	movlw	(low(_valor|((0x0)<<8))&0ffh)
  1970  00EE  303A               	bcf	status, 5	;RP0=0, select bank0
  1971  00EF  1283               	bcf	status, 6	;RP1=0, select bank0
  1972  00F0  1303               	movwf	(LCD_STRING@a)
  1973  00F1  00CC               	movlw	(0x0)
  1974  00F2  3000               	movwf	(LCD_STRING@a+1)
  1975  00F3  00CD               	fcall	_LCD_STRING
  1976  00F4  120A  118A  26B0  120A  118A  	line	99
  1977                           	
  1978                           l2215:	
  1979  00F9                     ;Prin-Raspi.c: 99: mandar(1);
  1980                           	movlw	01h
  1981  00F9  3001               	bcf	status, 5	;RP0=0, select bank0
  1982  00FA  1283               	bcf	status, 6	;RP1=0, select bank0
  1983  00FB  1303               	movwf	(mandar@dato)
  1984  00FC  00CA               	movlw	0
  1985  00FD  3000               	movwf	((mandar@dato))+1
  1986  00FE  00CB               	fcall	_mandar
  1987  00FF  120A  118A  25F1  120A  118A  	line	100
  1988                           ;Prin-Raspi.c: 100: while(!RCIF){
  1989                           	goto	l143
  1990  0104  2905               	
  1991                           l144:	
  1992  0105                     	line	101
  1993                           	
  1994                           l143:	
  1995  0105                     	line	100
  1996                           	bcf	status, 5	;RP0=0, select bank0
  1997  0105  1283               	bcf	status, 6	;RP1=0, select bank0
  1998  0106  1303               	btfss	(101/8),(101)&7	;volatile
  1999  0107  1E8C               	goto	u2011
  2000  0108  290A               	goto	u2010
  2001  0109  290B               u2011:
  2002  010A                     	goto	l143
  2003  010A  2905               u2010:
  2004  010B                     	goto	l2217
  2005  010B  290C               	
  2006                           l145:	
  2007  010C                     	line	102
  2008                           	
  2009                           l2217:	
  2010  010C                     ;Prin-Raspi.c: 101: };Prin-Raspi.c: 102: A1 = RCREG;
  2011                           	movf	(26),w	;volatile
  2012  010C  081A               	movwf	(??_main+0)+0
  2013  010D  00ED               	clrf	(??_main+0)+0+1
  2014  010E  01EE               	movf	0+(??_main+0)+0,w
  2015  010F  086D               	movwf	(_A1)
  2016  0110  00A8               	movf	1+(??_main+0)+0,w
  2017  0111  086E               	movwf	(_A1+1)
  2018  0112  00A9               	line	103
  2019                           	
  2020                           l2219:	
  2021  0113                     ;Prin-Raspi.c: 103: if(A1%2){
  2022                           	btfss	(_A1),(0)&7
  2023  0113  1C28               	goto	u2021
  2024  0114  2916               	goto	u2020
  2025  0115  2917               u2021:
  2026  0116                     	goto	l2225
  2027  0116  2933               u2020:
  2028  0117                     	line	104
  2029                           	
  2030                           l2221:	
  2031  0117                     ;Prin-Raspi.c: 104: A = A1/2;
  2032                           	movlw	02h
  2033  0117  3002               	movwf	(___awdiv@divisor)
  2034  0118  00CA               	movlw	0
  2035  0119  3000               	movwf	((___awdiv@divisor))+1
  2036  011A  00CB               	movf	(_A1+1),w
  2037  011B  0829               	movwf	(___awdiv@dividend+1)
  2038  011C  00CD               	movf	(_A1),w
  2039  011D  0828               	movwf	(___awdiv@dividend)
  2040  011E  00CC               	fcall	___awdiv
  2041  011F  120A  118A  2540  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2042  0124  1283               	bcf	status, 6	;RP1=0, select bank0
  2043  0125  1303               	movf	(1+(?___awdiv)),w
  2044  0126  084B               	movwf	(_A+1)
  2045  0127  00F5               	movf	(0+(?___awdiv)),w
  2046  0128  084A               	movwf	(_A)
  2047  0129  00F4               	line	105
  2048                           	
  2049                           l2223:	
  2050  012A                     ;Prin-Raspi.c: 105: a = A+1;
  2051                           	movf	(_A),w
  2052  012A  0874               	addlw	low(01h)
  2053  012B  3E01               	movwf	(_a)
  2054  012C  00B8               	movf	(_A+1),w
  2055  012D  0875               	skipnc
  2056  012E  1803               	addlw	1
  2057  012F  3E01               	addlw	high(01h)
  2058  0130  3E00               	movwf	1+(_a)
  2059  0131  00B9               	line	106
  2060                           ;Prin-Raspi.c: 106: } else{
  2061                           	goto	l2229
  2062  0132  294B               	
  2063                           l146:	
  2064  0133                     	line	107
  2065                           	
  2066                           l2225:	
  2067  0133                     ;Prin-Raspi.c: 107: A = A1/2;
  2068                           	movlw	02h
  2069  0133  3002               	movwf	(___awdiv@divisor)
  2070  0134  00CA               	movlw	0
  2071  0135  3000               	movwf	((___awdiv@divisor))+1
  2072  0136  00CB               	movf	(_A1+1),w
  2073  0137  0829               	movwf	(___awdiv@dividend+1)
  2074  0138  00CD               	movf	(_A1),w
  2075  0139  0828               	movwf	(___awdiv@dividend)
  2076  013A  00CC               	fcall	___awdiv
  2077  013B  120A  118A  2540  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2078  0140  1283               	bcf	status, 6	;RP1=0, select bank0
  2079  0141  1303               	movf	(1+(?___awdiv)),w
  2080  0142  084B               	movwf	(_A+1)
  2081  0143  00F5               	movf	(0+(?___awdiv)),w
  2082  0144  084A               	movwf	(_A)
  2083  0145  00F4               	line	108
  2084                           	
  2085                           l2227:	
  2086  0146                     ;Prin-Raspi.c: 108: a = A;
  2087                           	movf	(_A+1),w
  2088  0146  0875               	movwf	(_a+1)
  2089  0147  00B9               	movf	(_A),w
  2090  0148  0874               	movwf	(_a)
  2091  0149  00B8               	goto	l2229
  2092  014A  294B               	line	109
  2093                           	
  2094                           l147:	
  2095  014B                     	line	110
  2096                           	
  2097                           l2229:	
  2098  014B                     ;Prin-Raspi.c: 109: };Prin-Raspi.c: 110: _delay((unsigned long)((100)*(4000000/4000.0)))
                                 ;
  2099                           	opt asmopt_push
  2100                           opt asmopt_off
  2101                           movlw	130
  2102  014B  3082               	bcf	status, 5	;RP0=0, select bank0
  2103  014C  1283               	bcf	status, 6	;RP1=0, select bank0
  2104  014D  1303               movwf	((??_main+0)+0+1),f
  2105  014E  00EE               	movlw	221
  2106  014F  30DD               movwf	((??_main+0)+0),f
  2107  0150  00ED               	u2127:
  2108  0151                     decfsz	((??_main+0)+0),f
  2109  0151  0BED               	goto	u2127
  2110  0152  2951               	decfsz	((??_main+0)+0+1),f
  2111  0153  0BEE               	goto	u2127
  2112  0154  2951               opt asmopt_pop
  2113                           
  2114                           	line	113
  2115                           ;Prin-Raspi.c: 113: mandar(2);
  2116                           	movlw	02h
  2117  0155  3002               	bcf	status, 5	;RP0=0, select bank0
  2118  0156  1283               	bcf	status, 6	;RP1=0, select bank0
  2119  0157  1303               	movwf	(mandar@dato)
  2120  0158  00CA               	movlw	0
  2121  0159  3000               	movwf	((mandar@dato))+1
  2122  015A  00CB               	fcall	_mandar
  2123  015B  120A  118A  25F1  120A  118A  	line	114
  2124                           ;Prin-Raspi.c: 114: while(!RCIF){
  2125                           	goto	l148
  2126  0160  2961               	
  2127                           l149:	
  2128  0161                     	line	115
  2129                           	
  2130                           l148:	
  2131  0161                     	line	114
  2132                           	bcf	status, 5	;RP0=0, select bank0
  2133  0161  1283               	bcf	status, 6	;RP1=0, select bank0
  2134  0162  1303               	btfss	(101/8),(101)&7	;volatile
  2135  0163  1E8C               	goto	u2031
  2136  0164  2966               	goto	u2030
  2137  0165  2967               u2031:
  2138  0166                     	goto	l148
  2139  0166  2961               u2030:
  2140  0167                     	goto	l2231
  2141  0167  2968               	
  2142                           l150:	
  2143  0168                     	line	116
  2144                           	
  2145                           l2231:	
  2146  0168                     ;Prin-Raspi.c: 115: };Prin-Raspi.c: 116: B1 = RCREG;
  2147                           	movf	(26),w	;volatile
  2148  0168  081A               	movwf	(??_main+0)+0
  2149  0169  00ED               	clrf	(??_main+0)+0+1
  2150  016A  01EE               	movf	0+(??_main+0)+0,w
  2151  016B  086D               	movwf	(_B1)
  2152  016C  00A6               	movf	1+(??_main+0)+0,w
  2153  016D  086E               	movwf	(_B1+1)
  2154  016E  00A7               	line	117
  2155                           	
  2156                           l2233:	
  2157  016F                     ;Prin-Raspi.c: 117: if(B1%2){
  2158                           	btfss	(_B1),(0)&7
  2159  016F  1C26               	goto	u2041
  2160  0170  2972               	goto	u2040
  2161  0171  2973               u2041:
  2162  0172                     	goto	l2239
  2163  0172  298F               u2040:
  2164  0173                     	line	118
  2165                           	
  2166                           l2235:	
  2167  0173                     ;Prin-Raspi.c: 118: B = B1/2;
  2168                           	movlw	02h
  2169  0173  3002               	movwf	(___awdiv@divisor)
  2170  0174  00CA               	movlw	0
  2171  0175  3000               	movwf	((___awdiv@divisor))+1
  2172  0176  00CB               	movf	(_B1+1),w
  2173  0177  0827               	movwf	(___awdiv@dividend+1)
  2174  0178  00CD               	movf	(_B1),w
  2175  0179  0826               	movwf	(___awdiv@dividend)
  2176  017A  00CC               	fcall	___awdiv
  2177  017B  120A  118A  2540  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2178  0180  1283               	bcf	status, 6	;RP1=0, select bank0
  2179  0181  1303               	movf	(1+(?___awdiv)),w
  2180  0182  084B               	movwf	(_B+1)
  2181  0183  00F3               	movf	(0+(?___awdiv)),w
  2182  0184  084A               	movwf	(_B)
  2183  0185  00F2               	line	119
  2184                           	
  2185                           l2237:	
  2186  0186                     ;Prin-Raspi.c: 119: b = B+1;
  2187                           	movf	(_B),w
  2188  0186  0872               	addlw	low(01h)
  2189  0187  3E01               	movwf	(_b)
  2190  0188  00B6               	movf	(_B+1),w
  2191  0189  0873               	skipnc
  2192  018A  1803               	addlw	1
  2193  018B  3E01               	addlw	high(01h)
  2194  018C  3E00               	movwf	1+(_b)
  2195  018D  00B7               	line	120
  2196                           ;Prin-Raspi.c: 120: } else{
  2197                           	goto	l2243
  2198  018E  29A7               	
  2199                           l151:	
  2200  018F                     	line	121
  2201                           	
  2202                           l2239:	
  2203  018F                     ;Prin-Raspi.c: 121: B = B1/2;
  2204                           	movlw	02h
  2205  018F  3002               	movwf	(___awdiv@divisor)
  2206  0190  00CA               	movlw	0
  2207  0191  3000               	movwf	((___awdiv@divisor))+1
  2208  0192  00CB               	movf	(_B1+1),w
  2209  0193  0827               	movwf	(___awdiv@dividend+1)
  2210  0194  00CD               	movf	(_B1),w
  2211  0195  0826               	movwf	(___awdiv@dividend)
  2212  0196  00CC               	fcall	___awdiv
  2213  0197  120A  118A  2540  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2214  019C  1283               	bcf	status, 6	;RP1=0, select bank0
  2215  019D  1303               	movf	(1+(?___awdiv)),w
  2216  019E  084B               	movwf	(_B+1)
  2217  019F  00F3               	movf	(0+(?___awdiv)),w
  2218  01A0  084A               	movwf	(_B)
  2219  01A1  00F2               	line	122
  2220                           	
  2221                           l2241:	
  2222  01A2                     ;Prin-Raspi.c: 122: b = B;
  2223                           	movf	(_B+1),w
  2224  01A2  0873               	movwf	(_b+1)
  2225  01A3  00B7               	movf	(_B),w
  2226  01A4  0872               	movwf	(_b)
  2227  01A5  00B6               	goto	l2243
  2228  01A6  29A7               	line	123
  2229                           	
  2230                           l152:	
  2231  01A7                     	line	124
  2232                           	
  2233                           l2243:	
  2234  01A7                     ;Prin-Raspi.c: 123: };Prin-Raspi.c: 124: _delay((unsigned long)((100)*(4000000/4000.0)))
                                 ;
  2235                           	opt asmopt_push
  2236                           opt asmopt_off
  2237                           movlw	130
  2238  01A7  3082               	bcf	status, 5	;RP0=0, select bank0
  2239  01A8  1283               	bcf	status, 6	;RP1=0, select bank0
  2240  01A9  1303               movwf	((??_main+0)+0+1),f
  2241  01AA  00EE               	movlw	221
  2242  01AB  30DD               movwf	((??_main+0)+0),f
  2243  01AC  00ED               	u2137:
  2244  01AD                     decfsz	((??_main+0)+0),f
  2245  01AD  0BED               	goto	u2137
  2246  01AE  29AD               	decfsz	((??_main+0)+0+1),f
  2247  01AF  0BEE               	goto	u2137
  2248  01B0  29AD               opt asmopt_pop
  2249                           
  2250                           	line	127
  2251                           ;Prin-Raspi.c: 127: mandar(3);
  2252                           	movlw	03h
  2253  01B1  3003               	bcf	status, 5	;RP0=0, select bank0
  2254  01B2  1283               	bcf	status, 6	;RP1=0, select bank0
  2255  01B3  1303               	movwf	(mandar@dato)
  2256  01B4  00CA               	movlw	0
  2257  01B5  3000               	movwf	((mandar@dato))+1
  2258  01B6  00CB               	fcall	_mandar
  2259  01B7  120A  118A  25F1  120A  118A  	line	128
  2260                           ;Prin-Raspi.c: 128: while(!RCIF){
  2261                           	goto	l153
  2262  01BC  29BD               	
  2263                           l154:	
  2264  01BD                     	line	129
  2265                           	
  2266                           l153:	
  2267  01BD                     	line	128
  2268                           	bcf	status, 5	;RP0=0, select bank0
  2269  01BD  1283               	bcf	status, 6	;RP1=0, select bank0
  2270  01BE  1303               	btfss	(101/8),(101)&7	;volatile
  2271  01BF  1E8C               	goto	u2051
  2272  01C0  29C2               	goto	u2050
  2273  01C1  29C3               u2051:
  2274  01C2                     	goto	l153
  2275  01C2  29BD               u2050:
  2276  01C3                     	goto	l2245
  2277  01C3  29C4               	
  2278                           l155:	
  2279  01C4                     	line	130
  2280                           	
  2281                           l2245:	
  2282  01C4                     ;Prin-Raspi.c: 129: };Prin-Raspi.c: 130: C1 = RCREG;
  2283                           	movf	(26),w	;volatile
  2284  01C4  081A               	movwf	(??_main+0)+0
  2285  01C5  00ED               	clrf	(??_main+0)+0+1
  2286  01C6  01EE               	movf	0+(??_main+0)+0,w
  2287  01C7  086D               	movwf	(_C1)
  2288  01C8  00A4               	movf	1+(??_main+0)+0,w
  2289  01C9  086E               	movwf	(_C1+1)
  2290  01CA  00A5               	line	131
  2291                           	
  2292                           l2247:	
  2293  01CB                     ;Prin-Raspi.c: 131: if(C1%2){
  2294                           	btfss	(_C1),(0)&7
  2295  01CB  1C24               	goto	u2061
  2296  01CC  29CE               	goto	u2060
  2297  01CD  29CF               u2061:
  2298  01CE                     	goto	l2253
  2299  01CE  29EB               u2060:
  2300  01CF                     	line	132
  2301                           	
  2302                           l2249:	
  2303  01CF                     ;Prin-Raspi.c: 132: C = C1/2;
  2304                           	movlw	02h
  2305  01CF  3002               	movwf	(___awdiv@divisor)
  2306  01D0  00CA               	movlw	0
  2307  01D1  3000               	movwf	((___awdiv@divisor))+1
  2308  01D2  00CB               	movf	(_C1+1),w
  2309  01D3  0825               	movwf	(___awdiv@dividend+1)
  2310  01D4  00CD               	movf	(_C1),w
  2311  01D5  0824               	movwf	(___awdiv@dividend)
  2312  01D6  00CC               	fcall	___awdiv
  2313  01D7  120A  118A  2540  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2314  01DC  1283               	bcf	status, 6	;RP1=0, select bank0
  2315  01DD  1303               	movf	(1+(?___awdiv)),w
  2316  01DE  084B               	movwf	(_C+1)
  2317  01DF  00AF               	movf	(0+(?___awdiv)),w
  2318  01E0  084A               	movwf	(_C)
  2319  01E1  00AE               	line	133
  2320                           	
  2321                           l2251:	
  2322  01E2                     ;Prin-Raspi.c: 133: c = C+1;
  2323                           	movf	(_C),w
  2324  01E2  082E               	addlw	low(01h)
  2325  01E3  3E01               	movwf	(_c)
  2326  01E4  00B4               	movf	(_C+1),w
  2327  01E5  082F               	skipnc
  2328  01E6  1803               	addlw	1
  2329  01E7  3E01               	addlw	high(01h)
  2330  01E8  3E00               	movwf	1+(_c)
  2331  01E9  00B5               	line	134
  2332                           ;Prin-Raspi.c: 134: } else{
  2333                           	goto	l2257
  2334  01EA  2A03               	
  2335                           l156:	
  2336  01EB                     	line	135
  2337                           	
  2338                           l2253:	
  2339  01EB                     ;Prin-Raspi.c: 135: C = C1/2;
  2340                           	movlw	02h
  2341  01EB  3002               	movwf	(___awdiv@divisor)
  2342  01EC  00CA               	movlw	0
  2343  01ED  3000               	movwf	((___awdiv@divisor))+1
  2344  01EE  00CB               	movf	(_C1+1),w
  2345  01EF  0825               	movwf	(___awdiv@dividend+1)
  2346  01F0  00CD               	movf	(_C1),w
  2347  01F1  0824               	movwf	(___awdiv@dividend)
  2348  01F2  00CC               	fcall	___awdiv
  2349  01F3  120A  118A  2540  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2350  01F8  1283               	bcf	status, 6	;RP1=0, select bank0
  2351  01F9  1303               	movf	(1+(?___awdiv)),w
  2352  01FA  084B               	movwf	(_C+1)
  2353  01FB  00AF               	movf	(0+(?___awdiv)),w
  2354  01FC  084A               	movwf	(_C)
  2355  01FD  00AE               	line	136
  2356                           	
  2357                           l2255:	
  2358  01FE                     ;Prin-Raspi.c: 136: c = C;
  2359                           	movf	(_C+1),w
  2360  01FE  082F               	movwf	(_c+1)
  2361  01FF  00B5               	movf	(_C),w
  2362  0200  082E               	movwf	(_c)
  2363  0201  00B4               	goto	l2257
  2364  0202  2A03               	line	137
  2365                           	
  2366                           l157:	
  2367  0203                     	line	138
  2368                           	
  2369                           l2257:	
  2370  0203                     ;Prin-Raspi.c: 137: };Prin-Raspi.c: 138: _delay((unsigned long)((100)*(4000000/4000.0)))
                                 ;
  2371                           	opt asmopt_push
  2372                           opt asmopt_off
  2373                           movlw	130
  2374  0203  3082               	bcf	status, 5	;RP0=0, select bank0
  2375  0204  1283               	bcf	status, 6	;RP1=0, select bank0
  2376  0205  1303               movwf	((??_main+0)+0+1),f
  2377  0206  00EE               	movlw	221
  2378  0207  30DD               movwf	((??_main+0)+0),f
  2379  0208  00ED               	u2147:
  2380  0209                     decfsz	((??_main+0)+0),f
  2381  0209  0BED               	goto	u2147
  2382  020A  2A09               	decfsz	((??_main+0)+0+1),f
  2383  020B  0BEE               	goto	u2147
  2384  020C  2A09               opt asmopt_pop
  2385                           
  2386                           	line	141
  2387                           ;Prin-Raspi.c: 141: mandar(4);
  2388                           	movlw	04h
  2389  020D  3004               	bcf	status, 5	;RP0=0, select bank0
  2390  020E  1283               	bcf	status, 6	;RP1=0, select bank0
  2391  020F  1303               	movwf	(mandar@dato)
  2392  0210  00CA               	movlw	0
  2393  0211  3000               	movwf	((mandar@dato))+1
  2394  0212  00CB               	fcall	_mandar
  2395  0213  120A  118A  25F1  120A  118A  	line	142
  2396                           ;Prin-Raspi.c: 142: while(!RCIF){
  2397                           	goto	l158
  2398  0218  2A19               	
  2399                           l159:	
  2400  0219                     	line	143
  2401                           	
  2402                           l158:	
  2403  0219                     	line	142
  2404                           	bcf	status, 5	;RP0=0, select bank0
  2405  0219  1283               	bcf	status, 6	;RP1=0, select bank0
  2406  021A  1303               	btfss	(101/8),(101)&7	;volatile
  2407  021B  1E8C               	goto	u2071
  2408  021C  2A1E               	goto	u2070
  2409  021D  2A1F               u2071:
  2410  021E                     	goto	l158
  2411  021E  2A19               u2070:
  2412  021F                     	goto	l2259
  2413  021F  2A20               	
  2414                           l160:	
  2415  0220                     	line	144
  2416                           	
  2417                           l2259:	
  2418  0220                     ;Prin-Raspi.c: 143: };Prin-Raspi.c: 144: D1 = RCREG;
  2419                           	movf	(26),w	;volatile
  2420  0220  081A               	movwf	(??_main+0)+0
  2421  0221  00ED               	clrf	(??_main+0)+0+1
  2422  0222  01EE               	movf	0+(??_main+0)+0,w
  2423  0223  086D               	movwf	(_D1)
  2424  0224  00A2               	movf	1+(??_main+0)+0,w
  2425  0225  086E               	movwf	(_D1+1)
  2426  0226  00A3               	line	145
  2427                           	
  2428                           l2261:	
  2429  0227                     ;Prin-Raspi.c: 145: if(D1%2){
  2430                           	btfss	(_D1),(0)&7
  2431  0227  1C22               	goto	u2081
  2432  0228  2A2A               	goto	u2080
  2433  0229  2A2B               u2081:
  2434  022A                     	goto	l2267
  2435  022A  2A47               u2080:
  2436  022B                     	line	146
  2437                           	
  2438                           l2263:	
  2439  022B                     ;Prin-Raspi.c: 146: D = D1/2;
  2440                           	movlw	02h
  2441  022B  3002               	movwf	(___awdiv@divisor)
  2442  022C  00CA               	movlw	0
  2443  022D  3000               	movwf	((___awdiv@divisor))+1
  2444  022E  00CB               	movf	(_D1+1),w
  2445  022F  0823               	movwf	(___awdiv@dividend+1)
  2446  0230  00CD               	movf	(_D1),w
  2447  0231  0822               	movwf	(___awdiv@dividend)
  2448  0232  00CC               	fcall	___awdiv
  2449  0233  120A  118A  2540  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2450  0238  1283               	bcf	status, 6	;RP1=0, select bank0
  2451  0239  1303               	movf	(1+(?___awdiv)),w
  2452  023A  084B               	movwf	(_D+1)
  2453  023B  00AD               	movf	(0+(?___awdiv)),w
  2454  023C  084A               	movwf	(_D)
  2455  023D  00AC               	line	147
  2456                           	
  2457                           l2265:	
  2458  023E                     ;Prin-Raspi.c: 147: d = D+1;
  2459                           	movf	(_D),w
  2460  023E  082C               	addlw	low(01h)
  2461  023F  3E01               	movwf	(_d)
  2462  0240  00B2               	movf	(_D+1),w
  2463  0241  082D               	skipnc
  2464  0242  1803               	addlw	1
  2465  0243  3E01               	addlw	high(01h)
  2466  0244  3E00               	movwf	1+(_d)
  2467  0245  00B3               	line	148
  2468                           ;Prin-Raspi.c: 148: } else{
  2469                           	goto	l2271
  2470  0246  2A5F               	
  2471                           l161:	
  2472  0247                     	line	149
  2473                           	
  2474                           l2267:	
  2475  0247                     ;Prin-Raspi.c: 149: D = D1/2;
  2476                           	movlw	02h
  2477  0247  3002               	movwf	(___awdiv@divisor)
  2478  0248  00CA               	movlw	0
  2479  0249  3000               	movwf	((___awdiv@divisor))+1
  2480  024A  00CB               	movf	(_D1+1),w
  2481  024B  0823               	movwf	(___awdiv@dividend+1)
  2482  024C  00CD               	movf	(_D1),w
  2483  024D  0822               	movwf	(___awdiv@dividend)
  2484  024E  00CC               	fcall	___awdiv
  2485  024F  120A  118A  2540  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2486  0254  1283               	bcf	status, 6	;RP1=0, select bank0
  2487  0255  1303               	movf	(1+(?___awdiv)),w
  2488  0256  084B               	movwf	(_D+1)
  2489  0257  00AD               	movf	(0+(?___awdiv)),w
  2490  0258  084A               	movwf	(_D)
  2491  0259  00AC               	line	150
  2492                           	
  2493                           l2269:	
  2494  025A                     ;Prin-Raspi.c: 150: d = D;
  2495                           	movf	(_D+1),w
  2496  025A  082D               	movwf	(_d+1)
  2497  025B  00B3               	movf	(_D),w
  2498  025C  082C               	movwf	(_d)
  2499  025D  00B2               	goto	l2271
  2500  025E  2A5F               	line	151
  2501                           	
  2502                           l162:	
  2503  025F                     	line	152
  2504                           	
  2505                           l2271:	
  2506  025F                     ;Prin-Raspi.c: 151: };Prin-Raspi.c: 152: _delay((unsigned long)((100)*(4000000/4000.0)))
                                 ;
  2507                           	opt asmopt_push
  2508                           opt asmopt_off
  2509                           movlw	130
  2510  025F  3082               	bcf	status, 5	;RP0=0, select bank0
  2511  0260  1283               	bcf	status, 6	;RP1=0, select bank0
  2512  0261  1303               movwf	((??_main+0)+0+1),f
  2513  0262  00EE               	movlw	221
  2514  0263  30DD               movwf	((??_main+0)+0),f
  2515  0264  00ED               	u2157:
  2516  0265                     decfsz	((??_main+0)+0),f
  2517  0265  0BED               	goto	u2157
  2518  0266  2A65               	decfsz	((??_main+0)+0+1),f
  2519  0267  0BEE               	goto	u2157
  2520  0268  2A65               opt asmopt_pop
  2521                           
  2522                           	line	155
  2523                           ;Prin-Raspi.c: 155: mandar(5);
  2524                           	movlw	05h
  2525  0269  3005               	bcf	status, 5	;RP0=0, select bank0
  2526  026A  1283               	bcf	status, 6	;RP1=0, select bank0
  2527  026B  1303               	movwf	(mandar@dato)
  2528  026C  00CA               	movlw	0
  2529  026D  3000               	movwf	((mandar@dato))+1
  2530  026E  00CB               	fcall	_mandar
  2531  026F  120A  118A  25F1  120A  118A  	line	156
  2532                           ;Prin-Raspi.c: 156: while(!RCIF){
  2533                           	goto	l163
  2534  0274  2A75               	
  2535                           l164:	
  2536  0275                     	line	157
  2537                           	
  2538                           l163:	
  2539  0275                     	line	156
  2540                           	bcf	status, 5	;RP0=0, select bank0
  2541  0275  1283               	bcf	status, 6	;RP1=0, select bank0
  2542  0276  1303               	btfss	(101/8),(101)&7	;volatile
  2543  0277  1E8C               	goto	u2091
  2544  0278  2A7A               	goto	u2090
  2545  0279  2A7B               u2091:
  2546  027A                     	goto	l163
  2547  027A  2A75               u2090:
  2548  027B                     	goto	l2273
  2549  027B  2A7C               	
  2550                           l165:	
  2551  027C                     	line	158
  2552                           	
  2553                           l2273:	
  2554  027C                     ;Prin-Raspi.c: 157: };Prin-Raspi.c: 158: E1 = RCREG;
  2555                           	movf	(26),w	;volatile
  2556  027C  081A               	movwf	(??_main+0)+0
  2557  027D  00ED               	clrf	(??_main+0)+0+1
  2558  027E  01EE               	movf	0+(??_main+0)+0,w
  2559  027F  086D               	movwf	(_E1)
  2560  0280  00A0               	movf	1+(??_main+0)+0,w
  2561  0281  086E               	movwf	(_E1+1)
  2562  0282  00A1               	line	159
  2563                           	
  2564                           l2275:	
  2565  0283                     ;Prin-Raspi.c: 159: if(E1%2){
  2566                           	btfss	(_E1),(0)&7
  2567  0283  1C20               	goto	u2101
  2568  0284  2A86               	goto	u2100
  2569  0285  2A87               u2101:
  2570  0286                     	goto	l2281
  2571  0286  2AA3               u2100:
  2572  0287                     	line	160
  2573                           	
  2574                           l2277:	
  2575  0287                     ;Prin-Raspi.c: 160: E = E1/2;
  2576                           	movlw	02h
  2577  0287  3002               	movwf	(___awdiv@divisor)
  2578  0288  00CA               	movlw	0
  2579  0289  3000               	movwf	((___awdiv@divisor))+1
  2580  028A  00CB               	movf	(_E1+1),w
  2581  028B  0821               	movwf	(___awdiv@dividend+1)
  2582  028C  00CD               	movf	(_E1),w
  2583  028D  0820               	movwf	(___awdiv@dividend)
  2584  028E  00CC               	fcall	___awdiv
  2585  028F  120A  118A  2540  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2586  0294  1283               	bcf	status, 6	;RP1=0, select bank0
  2587  0295  1303               	movf	(1+(?___awdiv)),w
  2588  0296  084B               	movwf	(_E+1)
  2589  0297  00AB               	movf	(0+(?___awdiv)),w
  2590  0298  084A               	movwf	(_E)
  2591  0299  00AA               	line	161
  2592                           	
  2593                           l2279:	
  2594  029A                     ;Prin-Raspi.c: 161: e = E+1;
  2595                           	movf	(_E),w
  2596  029A  082A               	addlw	low(01h)
  2597  029B  3E01               	movwf	(_e)
  2598  029C  00B0               	movf	(_E+1),w
  2599  029D  082B               	skipnc
  2600  029E  1803               	addlw	1
  2601  029F  3E01               	addlw	high(01h)
  2602  02A0  3E00               	movwf	1+(_e)
  2603  02A1  00B1               	line	162
  2604                           ;Prin-Raspi.c: 162: } else{
  2605                           	goto	l2285
  2606  02A2  2ABB               	
  2607                           l166:	
  2608  02A3                     	line	163
  2609                           	
  2610                           l2281:	
  2611  02A3                     ;Prin-Raspi.c: 163: E = E1/2;
  2612                           	movlw	02h
  2613  02A3  3002               	movwf	(___awdiv@divisor)
  2614  02A4  00CA               	movlw	0
  2615  02A5  3000               	movwf	((___awdiv@divisor))+1
  2616  02A6  00CB               	movf	(_E1+1),w
  2617  02A7  0821               	movwf	(___awdiv@dividend+1)
  2618  02A8  00CD               	movf	(_E1),w
  2619  02A9  0820               	movwf	(___awdiv@dividend)
  2620  02AA  00CC               	fcall	___awdiv
  2621  02AB  120A  118A  2540  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2622  02B0  1283               	bcf	status, 6	;RP1=0, select bank0
  2623  02B1  1303               	movf	(1+(?___awdiv)),w
  2624  02B2  084B               	movwf	(_E+1)
  2625  02B3  00AB               	movf	(0+(?___awdiv)),w
  2626  02B4  084A               	movwf	(_E)
  2627  02B5  00AA               	line	164
  2628                           	
  2629                           l2283:	
  2630  02B6                     ;Prin-Raspi.c: 164: e = E;
  2631                           	movf	(_E+1),w
  2632  02B6  082B               	movwf	(_e+1)
  2633  02B7  00B1               	movf	(_E),w
  2634  02B8  082A               	movwf	(_e)
  2635  02B9  00B0               	goto	l2285
  2636  02BA  2ABB               	line	165
  2637                           	
  2638                           l167:	
  2639  02BB                     	line	166
  2640                           	
  2641                           l2285:	
  2642  02BB                     ;Prin-Raspi.c: 165: };Prin-Raspi.c: 166: _delay((unsigned long)((100)*(4000000/4000.0)))
                                 ;
  2643                           	opt asmopt_push
  2644                           opt asmopt_off
  2645                           movlw	130
  2646  02BB  3082               	bcf	status, 5	;RP0=0, select bank0
  2647  02BC  1283               	bcf	status, 6	;RP1=0, select bank0
  2648  02BD  1303               movwf	((??_main+0)+0+1),f
  2649  02BE  00EE               	movlw	221
  2650  02BF  30DD               movwf	((??_main+0)+0),f
  2651  02C0  00ED               	u2167:
  2652  02C1                     decfsz	((??_main+0)+0),f
  2653  02C1  0BED               	goto	u2167
  2654  02C2  2AC1               	decfsz	((??_main+0)+0+1),f
  2655  02C3  0BEE               	goto	u2167
  2656  02C4  2AC1               opt asmopt_pop
  2657                           
  2658                           	goto	l2203
  2659  02C5  2899               	line	167
  2660                           	
  2661                           l168:	
  2662  02C6                     	line	91
  2663                           	goto	l2203
  2664  02C6  2899               	
  2665                           l169:	
  2666  02C7                     	line	168
  2667                           	
  2668                           l170:	
  2669  02C7                     	global	start
  2670                           	ljmp	start
  2671  02C7  120A  118A  280C   	opt stack 0
  2672                           GLOBAL	__end_of_main
  2673                           	__end_of_main:
  2674  02CA                     	signat	_main,89
  2675                           	global	_sprintf
  2676                           
  2677 ;; *************** function _sprintf *****************
  2678 ;; Defined at:
  2679 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;  sp              1    wreg     PTR unsigned char 
  2682 ;;		 -> valor(16), valor1(16), 
  2683 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  2684 ;;		 -> STR_4(28), STR_3(17), 
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;  sp              1   32[BANK0 ] PTR unsigned char 
  2687 ;;		 -> valor(16), valor1(16), 
  2688 ;;  tmpval          4    0        struct .
  2689 ;;  val             2   30[BANK0 ] unsigned int 
  2690 ;;  cp              2    0        PTR const unsigned char 
  2691 ;;  len             2    0        unsigned int 
  2692 ;;  c               1   34[BANK0 ] unsigned char 
  2693 ;;  prec            1   33[BANK0 ] char 
  2694 ;;  flag            1   29[BANK0 ] unsigned char 
  2695 ;;  ap              1   28[BANK0 ] PTR void [1]
  2696 ;;		 -> ?_sprintf(2), 
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  2   14[BANK0 ] int 
  2699 ;; Registers used:
  2700 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2706 ;;      Params:         0      11       0       0       0
  2707 ;;      Locals:         0       7       0       0       0
  2708 ;;      Temps:          0       3       0       0       0
  2709 ;;      Totals:         0      21       0       0       0
  2710 ;;Total ram usage:       21 bytes
  2711 ;; Hardware stack levels used:    1
  2712 ;; Hardware stack levels required when called:    4
  2713 ;; This function calls:
  2714 ;;		___bmul
  2715 ;;		___lwdiv
  2716 ;;		___lwmod
  2717 ;;		_isdigit
  2718 ;; This function is called by:
  2719 ;;		_main
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2723                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2724                           	line	500
  2725                           global __ptext1
  2726                           __ptext1:	;psect for function _sprintf
  2727  02CA                     psect	text1
  2728                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2729                           	line	500
  2730                           	global	__size_of_sprintf
  2731                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  2732  0185                     	
  2733                           _sprintf:	
  2734  02CA                     ;incstack = 0
  2735                           	opt	stack 3
  2736                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2737                           ;sprintf@sp stored from wreg
  2738                           	bcf	status, 5	;RP0=0, select bank0
  2739  02CA  1283               	bcf	status, 6	;RP1=0, select bank0
  2740  02CB  1303               	movwf	(sprintf@sp)
  2741  02CC  00EA               	line	545
  2742                           	
  2743                           l2031:	
  2744  02CD                     ;doprnt.c: 502: va_list ap;;doprnt.c: 507: char c;;doprnt.c: 516: signed char prec;;dopr
                                 nt.c: 520: unsigned char flag;;doprnt.c: 535: union {;doprnt.c: 536: unsigned long vd;;d
                                 oprnt.c: 537: double integ;;doprnt.c: 538: } tmpval;;doprnt.c: 540: unsigned int val;;do
                                 prnt.c: 541: unsigned len;;doprnt.c: 542: const char * cp;;doprnt.c: 545: *ap = __va_sta
                                 rt();
  2745                           	movlw	(low(?_sprintf|((0x0)<<8)+01h))&0ffh
  2746  02CD  3059               	movwf	(??_sprintf+0)+0
  2747  02CE  00E3               	movf	(??_sprintf+0)+0,w
  2748  02CF  0863               	movwf	(sprintf@ap)
  2749  02D0  00E6               	line	548
  2750                           ;doprnt.c: 548: while((c = *f++)) {
  2751                           	goto	l2107
  2752  02D1  2C35               	
  2753                           l346:	
  2754  02D2                     	line	550
  2755                           	
  2756                           l2033:	
  2757  02D2                     ;doprnt.c: 550: if(c != '%')
  2758                           		movlw	37
  2759  02D2  3025               	xorwf	((sprintf@c)),w
  2760  02D3  066C               	btfsc	status,2
  2761  02D4  1903               	goto	u1751
  2762  02D5  2AD7               	goto	u1750
  2763  02D6  2AD8               u1751:
  2764  02D7                     	goto	l2039
  2765  02D7  2AE4               u1750:
  2766  02D8                     	line	553
  2767                           	
  2768                           l2035:	
  2769  02D8                     ;doprnt.c: 552: {;doprnt.c: 553: ((*sp++ = (c)));
  2770                           	movf	(sprintf@c),w
  2771  02D8  086C               	movwf	(??_sprintf+0)+0
  2772  02D9  00E3               	movf	(sprintf@sp),w
  2773  02DA  086A               	movwf	fsr0
  2774  02DB  0084               	movf	(??_sprintf+0)+0,w
  2775  02DC  0863               	bcf	status, 7	;select IRP bank0
  2776  02DD  1383               	movwf	indf
  2777  02DE  0080               	
  2778                           l2037:	
  2779  02DF                     	movlw	low(01h)
  2780  02DF  3001               	movwf	(??_sprintf+0)+0
  2781  02E0  00E3               	movf	(??_sprintf+0)+0,w
  2782  02E1  0863               	addwf	(sprintf@sp),f
  2783  02E2  07EA               	line	554
  2784                           ;doprnt.c: 554: continue;
  2785                           	goto	l2107
  2786  02E3  2C35               	line	555
  2787                           	
  2788                           l347:	
  2789  02E4                     	line	560
  2790                           	
  2791                           l2039:	
  2792  02E4                     ;doprnt.c: 555: };doprnt.c: 560: flag = 0;
  2793                           	clrf	(sprintf@flag)
  2794  02E4  01E7               	line	623
  2795                           	
  2796                           l2041:	
  2797  02E5                     ;doprnt.c: 623: if(*f == '.') {
  2798                           	movf	(sprintf@f),w
  2799  02E5  0858               	movwf	fsr0
  2800  02E6  0084               	fcall	stringdir
  2801  02E7  120A  118A  260A  120A  118A  	xorlw	02Eh
  2802  02EC  3A2E               	skipz
  2803  02ED  1D03               	goto	u1761
  2804  02EE  2AF0               	goto	u1760
  2805  02EF  2AF1               u1761:
  2806  02F0                     	goto	l2053
  2807  02F0  2B29               u1760:
  2808  02F1                     	line	625
  2809                           	
  2810                           l2043:	
  2811  02F1                     ;doprnt.c: 625: f++;
  2812                           	movlw	low(01h)
  2813  02F1  3001               	movwf	(??_sprintf+0)+0
  2814  02F2  00E3               	movf	(??_sprintf+0)+0,w
  2815  02F3  0863               	addwf	(sprintf@f),f
  2816  02F4  07D8               	line	640
  2817                           	
  2818                           l2045:	
  2819  02F5                     ;doprnt.c: 639: {;doprnt.c: 640: prec = 0;
  2820                           	clrf	(sprintf@prec)
  2821  02F5  01EB               	line	641
  2822                           ;doprnt.c: 641: while(isdigit((unsigned)*f))
  2823                           	goto	l2051
  2824  02F6  2B17               	
  2825                           l350:	
  2826  02F7                     	line	642
  2827                           	
  2828                           l2047:	
  2829  02F7                     ;doprnt.c: 642: prec = prec*10 + *f++ - '0';
  2830                           	bcf	status, 5	;RP0=0, select bank0
  2831  02F7  1283               	bcf	status, 6	;RP1=0, select bank0
  2832  02F8  1303               	movf	(sprintf@f),w
  2833  02F9  0858               	movwf	fsr0
  2834  02FA  0084               	fcall	stringdir
  2835  02FB  120A  118A  260A  120A  118A  	movwf	(??_sprintf+0)+0
  2836  0300  00E3               	movlw	low(0Ah)
  2837  0301  300A               	movwf	(??_sprintf+1)+0
  2838  0302  00E4               	movf	(??_sprintf+1)+0,w
  2839  0303  0864               	movwf	(___bmul@multiplicand)
  2840  0304  00CA               	movf	(sprintf@prec),w
  2841  0305  086B               	fcall	___bmul
  2842  0306  120A  158A  27E5  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2843  030B  1283               	bcf	status, 6	;RP1=0, select bank0
  2844  030C  1303               	addwf	(??_sprintf+0)+0,w
  2845  030D  0763               	addlw	-48
  2846  030E  3ED0               	movwf	(??_sprintf+2)+0
  2847  030F  00E5               	movf	(??_sprintf+2)+0,w
  2848  0310  0865               	movwf	(sprintf@prec)
  2849  0311  00EB               	
  2850                           l2049:	
  2851  0312                     	movlw	low(01h)
  2852  0312  3001               	movwf	(??_sprintf+0)+0
  2853  0313  00E3               	movf	(??_sprintf+0)+0,w
  2854  0314  0863               	addwf	(sprintf@f),f
  2855  0315  07D8               	goto	l2051
  2856  0316  2B17               	
  2857                           l349:	
  2858  0317                     	line	641
  2859                           	
  2860                           l2051:	
  2861  0317                     	movf	(sprintf@f),w
  2862  0317  0858               	movwf	fsr0
  2863  0318  0084               	fcall	stringdir
  2864  0319  120A  118A  260A  120A  118A  	fcall	_isdigit
  2865  031E  120A  158A  27CF  120A  118A  	btfsc	status,0
  2866  0323  1803               	goto	u1771
  2867  0324  2B26               	goto	u1770
  2868  0325  2B27               u1771:
  2869  0326                     	goto	l2047
  2870  0326  2AF7               u1770:
  2871  0327                     	goto	l2057
  2872  0327  2B33               	
  2873                           l351:	
  2874  0328                     	line	644
  2875                           ;doprnt.c: 643: };doprnt.c: 644: } else {
  2876                           	goto	l2057
  2877  0328  2B33               	
  2878                           l348:	
  2879  0329                     	line	645
  2880                           	
  2881                           l2053:	
  2882  0329                     ;doprnt.c: 645: prec = 0;
  2883                           	bcf	status, 5	;RP0=0, select bank0
  2884  0329  1283               	bcf	status, 6	;RP1=0, select bank0
  2885  032A  1303               	clrf	(sprintf@prec)
  2886  032B  01EB               	goto	l2057
  2887  032C  2B33               	line	649
  2888                           	
  2889                           l352:	
  2890  032D                     	line	654
  2891                           ;doprnt.c: 649: };doprnt.c: 654: switch(c = *f++) {
  2892                           	goto	l2057
  2893  032D  2B33               	line	656
  2894                           ;doprnt.c: 656: case 0:
  2895                           	
  2896                           l354:	
  2897  032E                     	line	657
  2898                           ;doprnt.c: 657: goto alldone;
  2899                           	goto	l2109
  2900  032E  2C49               	line	716
  2901                           ;doprnt.c: 716: case 'd':
  2902                           	
  2903                           l356:	
  2904  032F                     	goto	l2059
  2905  032F  2B4A               	line	717
  2906                           	
  2907                           l357:	
  2908  0330                     	line	718
  2909                           ;doprnt.c: 717: case 'i':;doprnt.c: 718: break;
  2910                           	goto	l2059
  2911  0330  2B4A               	line	821
  2912                           ;doprnt.c: 821: default:
  2913                           	
  2914                           l359:	
  2915  0331                     	line	832
  2916                           ;doprnt.c: 832: continue;
  2917                           	goto	l2107
  2918  0331  2C35               	line	841
  2919                           	
  2920                           l2055:	
  2921  0332                     ;doprnt.c: 841: }
  2922                           	goto	l2059
  2923  0332  2B4A               	line	654
  2924                           	
  2925                           l353:	
  2926  0333                     	
  2927                           l2057:	
  2928  0333                     	movlw	01h
  2929  0333  3001               	bcf	status, 5	;RP0=0, select bank0
  2930  0334  1283               	bcf	status, 6	;RP1=0, select bank0
  2931  0335  1303               	addwf	(sprintf@f),f
  2932  0336  07D8               	movlw	-01h
  2933  0337  30FF               	addwf	(sprintf@f),w
  2934  0338  0758               	movwf	fsr0
  2935  0339  0084               	fcall	stringdir
  2936  033A  120A  118A  260A  120A  118A  	movwf	(sprintf@c)
  2937  033F  00EC               	; Switch size 1, requested type "space"
  2938                           ; Number of cases is 3, Range of values is 0 to 105
  2939                           ; switch strategies available:
  2940                           ; Name         Instructions Cycles
  2941                           ; simple_byte           10     6 (average)
  2942                           ; jumptable            260     6 (fixed)
  2943                           ;	Chosen strategy is simple_byte
  2944                           
  2945                           	opt asmopt_push
  2946                           	opt asmopt_off
  2947                           	xorlw	0^0	; case 0
  2948  0340  3A00               	skipnz
  2949  0341  1903               	goto	l2109
  2950  0342  2C49               	xorlw	100^0	; case 100
  2951  0343  3A64               	skipnz
  2952  0344  1903               	goto	l2059
  2953  0345  2B4A               	xorlw	105^100	; case 105
  2954  0346  3A0D               	skipnz
  2955  0347  1903               	goto	l2059
  2956  0348  2B4A               	goto	l2107
  2957  0349  2C35               	opt asmopt_pop
  2958                           
  2959                           	line	841
  2960                           	
  2961                           l358:	
  2962  034A                     	line	1278
  2963                           	
  2964                           l2059:	
  2965  034A                     ;doprnt.c: 1272: {;doprnt.c: 1278: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
                                 
  2966                           	movf	(sprintf@ap),w
  2967  034A  0866               	movwf	fsr0
  2968  034B  0084               	bcf	status, 7	;select IRP bank0
  2969  034C  1383               	movf	indf,w
  2970  034D  0800               	movwf	(sprintf@val)
  2971  034E  00E8               	incf	fsr0,f
  2972  034F  0A84               	movf	indf,w
  2973  0350  0800               	movwf	(sprintf@val+1)
  2974  0351  00E9               	
  2975                           l2061:	
  2976  0352                     	movlw	low(02h)
  2977  0352  3002               	movwf	(??_sprintf+0)+0
  2978  0353  00E3               	movf	(??_sprintf+0)+0,w
  2979  0354  0863               	addwf	(sprintf@ap),f
  2980  0355  07E6               	line	1280
  2981                           	
  2982                           l2063:	
  2983  0356                     ;doprnt.c: 1280: if((int)val < 0) {
  2984                           	btfss	(sprintf@val+1),7
  2985  0356  1FE9               	goto	u1781
  2986  0357  2B59               	goto	u1780
  2987  0358  2B5A               u1781:
  2988  0359                     	goto	l2069
  2989  0359  2B64               u1780:
  2990  035A                     	line	1281
  2991                           	
  2992                           l2065:	
  2993  035A                     ;doprnt.c: 1281: flag |= 0x03;
  2994                           	movlw	low(03h)
  2995  035A  3003               	movwf	(??_sprintf+0)+0
  2996  035B  00E3               	movf	(??_sprintf+0)+0,w
  2997  035C  0863               	iorwf	(sprintf@flag),f
  2998  035D  04E7               	line	1282
  2999                           	
  3000                           l2067:	
  3001  035E                     ;doprnt.c: 1282: val = -val;
  3002                           	comf	(sprintf@val),f
  3003  035E  09E8               	comf	(sprintf@val+1),f
  3004  035F  09E9               	incf	(sprintf@val),f
  3005  0360  0AE8               	skipnz
  3006  0361  1903               	incf	(sprintf@val+1),f
  3007  0362  0AE9               	goto	l2069
  3008  0363  2B64               	line	1283
  3009                           	
  3010                           l360:	
  3011  0364                     	line	1309
  3012                           	
  3013                           l2069:	
  3014  0364                     ;doprnt.c: 1283: };doprnt.c: 1285: };doprnt.c: 1309: if(prec == 0 && val == 0)
  3015                           	movf	((sprintf@prec)),w
  3016  0364  086B               	btfss	status,2
  3017  0365  1D03               	goto	u1791
  3018  0366  2B68               	goto	u1790
  3019  0367  2B69               u1791:
  3020  0368                     	goto	l2075
  3021  0368  2B74               u1790:
  3022  0369                     	
  3023                           l2071:	
  3024  0369                     	movf	((sprintf@val)),w
  3025  0369  0868               iorwf	((sprintf@val+1)),w
  3026  036A  0469               	btfss	status,2
  3027  036B  1D03               	goto	u1801
  3028  036C  2B6E               	goto	u1800
  3029  036D  2B6F               u1801:
  3030  036E                     	goto	l2075
  3031  036E  2B74               u1800:
  3032  036F                     	line	1310
  3033                           	
  3034                           l2073:	
  3035  036F                     ;doprnt.c: 1310: prec++;
  3036                           	movlw	low(01h)
  3037  036F  3001               	movwf	(??_sprintf+0)+0
  3038  0370  00E3               	movf	(??_sprintf+0)+0,w
  3039  0371  0863               	addwf	(sprintf@prec),f
  3040  0372  07EB               	goto	l2075
  3041  0373  2B74               	
  3042                           l361:	
  3043  0374                     	line	1324
  3044                           	
  3045                           l2075:	
  3046  0374                     ;doprnt.c: 1324: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3047                           	clrf	(sprintf@c)
  3048  0374  01EC               	incf	(sprintf@c),f
  3049  0375  0AEC               		movlw	5
  3050  0376  3005               	xorwf	((sprintf@c)),w
  3051  0377  066C               	btfss	status,2
  3052  0378  1D03               	goto	u1811
  3053  0379  2B7B               	goto	u1810
  3054  037A  2B7C               u1811:
  3055  037B                     	goto	l2079
  3056  037B  2B7E               u1810:
  3057  037C                     	goto	l2085
  3058  037C  2BA6               	
  3059                           l2077:	
  3060  037D                     	goto	l2085
  3061  037D  2BA6               	line	1325
  3062                           	
  3063                           l362:	
  3064  037E                     	
  3065                           l2079:	
  3066  037E                     ;doprnt.c: 1325: if(val < dpowers[c])
  3067                           	movf	(sprintf@c),w
  3068  037E  086C               	movwf	(??_sprintf+0)+0
  3069  037F  00E3               	addwf	(??_sprintf+0)+0,w
  3070  0380  0763               	addlw	low((((_dpowers)-__stringbase)|8000h))
  3071  0381  3E01               	movwf	fsr0
  3072  0382  0084               	fcall	stringdir
  3073  0383  120A  118A  260A  120A  118A  	movwf	(??_sprintf+1)+0
  3074  0388  00E4               	fcall	stringdir
  3075  0389  120A  118A  260A  120A  118A  	movwf	(??_sprintf+1)+0+1
  3076  038E  00E5               	movf	1+(??_sprintf+1)+0,w
  3077  038F  0865               	subwf	(sprintf@val+1),w
  3078  0390  0269               	skipz
  3079  0391  1D03               	goto	u1825
  3080  0392  2B95               	movf	0+(??_sprintf+1)+0,w
  3081  0393  0864               	subwf	(sprintf@val),w
  3082  0394  0268               u1825:
  3083  0395                     	skipnc
  3084  0395  1803               	goto	u1821
  3085  0396  2B98               	goto	u1820
  3086  0397  2B99               u1821:
  3087  0398                     	goto	l2083
  3088  0398  2B9B               u1820:
  3089  0399                     	goto	l2085
  3090  0399  2BA6               	line	1326
  3091                           	
  3092                           l2081:	
  3093  039A                     ;doprnt.c: 1326: break;
  3094                           	goto	l2085
  3095  039A  2BA6               	
  3096                           l364:	
  3097  039B                     	line	1324
  3098                           	
  3099                           l2083:	
  3100  039B                     	movlw	low(01h)
  3101  039B  3001               	movwf	(??_sprintf+0)+0
  3102  039C  00E3               	movf	(??_sprintf+0)+0,w
  3103  039D  0863               	addwf	(sprintf@c),f
  3104  039E  07EC               		movlw	5
  3105  039F  3005               	xorwf	((sprintf@c)),w
  3106  03A0  066C               	btfss	status,2
  3107  03A1  1D03               	goto	u1831
  3108  03A2  2BA4               	goto	u1830
  3109  03A3  2BA5               u1831:
  3110  03A4                     	goto	l2079
  3111  03A4  2B7E               u1830:
  3112  03A5                     	goto	l2085
  3113  03A5  2BA6               	
  3114                           l363:	
  3115  03A6                     	line	1358
  3116                           	
  3117                           l2085:	
  3118  03A6                     ;doprnt.c: 1358: if(c < prec)
  3119                           	movf	(sprintf@prec),w
  3120  03A6  086B               	movwf	(??_sprintf+0)+0
  3121  03A7  00E3               	clrf	(??_sprintf+0)+0+1
  3122  03A8  01E4               	btfsc	(??_sprintf+0)+0,7
  3123  03A9  1BE3               	decf	(??_sprintf+0)+0+1,f
  3124  03AA  03E4               	movf	1+(??_sprintf+0)+0,w
  3125  03AB  0864               	xorlw	80h
  3126  03AC  3A80               	sublw	080h
  3127  03AD  3C80               	skipz
  3128  03AE  1D03               	goto	u1845
  3129  03AF  2BB2               	movf	0+(??_sprintf+0)+0,w
  3130  03B0  0863               	subwf	(sprintf@c),w
  3131  03B1  026C               u1845:
  3132  03B2                     
  3133                           	skipnc
  3134  03B2  1803               	goto	u1841
  3135  03B3  2BB5               	goto	u1840
  3136  03B4  2BB6               u1841:
  3137  03B5                     	goto	l2089
  3138  03B5  2BBD               u1840:
  3139  03B6                     	line	1359
  3140                           	
  3141                           l2087:	
  3142  03B6                     ;doprnt.c: 1359: c = prec;
  3143                           	bcf	status, 5	;RP0=0, select bank0
  3144  03B6  1283               	bcf	status, 6	;RP1=0, select bank0
  3145  03B7  1303               	movf	(sprintf@prec),w
  3146  03B8  086B               	movwf	(??_sprintf+0)+0
  3147  03B9  00E3               	movf	(??_sprintf+0)+0,w
  3148  03BA  0863               	movwf	(sprintf@c)
  3149  03BB  00EC               	goto	l2093
  3150  03BC  2BD9               	line	1360
  3151                           	
  3152                           l365:	
  3153  03BD                     	
  3154                           l2089:	
  3155  03BD                     ;doprnt.c: 1360: else if(prec < c)
  3156                           	bcf	status, 5	;RP0=0, select bank0
  3157  03BD  1283               	bcf	status, 6	;RP1=0, select bank0
  3158  03BE  1303               	movf	(sprintf@prec),w
  3159  03BF  086B               	movwf	(??_sprintf+0)+0
  3160  03C0  00E3               	clrf	(??_sprintf+0)+0+1
  3161  03C1  01E4               	btfsc	(??_sprintf+0)+0,7
  3162  03C2  1BE3               	decf	(??_sprintf+0)+0+1,f
  3163  03C3  03E4               	movf	1+(??_sprintf+0)+0,w
  3164  03C4  0864               	xorlw	80h
  3165  03C5  3A80               	movwf	(??_sprintf+2)+0
  3166  03C6  00E5               	movlw	80h
  3167  03C7  3080               	subwf	(??_sprintf+2)+0,w
  3168  03C8  0265               	skipz
  3169  03C9  1D03               	goto	u1855
  3170  03CA  2BCD               	movf	(sprintf@c),w
  3171  03CB  086C               	subwf	0+(??_sprintf+0)+0,w
  3172  03CC  0263               u1855:
  3173  03CD                     
  3174                           	skipnc
  3175  03CD  1803               	goto	u1851
  3176  03CE  2BD0               	goto	u1850
  3177  03CF  2BD1               u1851:
  3178  03D0                     	goto	l2093
  3179  03D0  2BD9               u1850:
  3180  03D1                     	line	1361
  3181                           	
  3182                           l2091:	
  3183  03D1                     ;doprnt.c: 1361: prec = c;
  3184                           	bcf	status, 5	;RP0=0, select bank0
  3185  03D1  1283               	bcf	status, 6	;RP1=0, select bank0
  3186  03D2  1303               	movf	(sprintf@c),w
  3187  03D3  086C               	movwf	(??_sprintf+0)+0
  3188  03D4  00E3               	movf	(??_sprintf+0)+0,w
  3189  03D5  0863               	movwf	(sprintf@prec)
  3190  03D6  00EB               	goto	l2093
  3191  03D7  2BD9               	
  3192                           l367:	
  3193  03D8                     	goto	l2093
  3194  03D8  2BD9               	line	1441
  3195                           	
  3196                           l366:	
  3197  03D9                     	line	1457
  3198                           	
  3199                           l2093:	
  3200  03D9                     ;doprnt.c: 1441: {;doprnt.c: 1457: if(flag & 0x03)
  3201                           	bcf	status, 5	;RP0=0, select bank0
  3202  03D9  1283               	bcf	status, 6	;RP1=0, select bank0
  3203  03DA  1303               	movf	(sprintf@flag),w
  3204  03DB  0867               	andlw	03h
  3205  03DC  3903               	btfsc	status,2
  3206  03DD  1903               	goto	u1861
  3207  03DE  2BE0               	goto	u1860
  3208  03DF  2BE1               u1861:
  3209  03E0                     	goto	l2105
  3210  03E0  2C2A               u1860:
  3211  03E1                     	line	1458
  3212                           	
  3213                           l2095:	
  3214  03E1                     ;doprnt.c: 1458: ((*sp++ = ('-')));
  3215                           	movlw	low(02Dh)
  3216  03E1  302D               	movwf	(??_sprintf+0)+0
  3217  03E2  00E3               	movf	(sprintf@sp),w
  3218  03E3  086A               	movwf	fsr0
  3219  03E4  0084               	movf	(??_sprintf+0)+0,w
  3220  03E5  0863               	bcf	status, 7	;select IRP bank0
  3221  03E6  1383               	movwf	indf
  3222  03E7  0080               	
  3223                           l2097:	
  3224  03E8                     	movlw	low(01h)
  3225  03E8  3001               	movwf	(??_sprintf+0)+0
  3226  03E9  00E3               	movf	(??_sprintf+0)+0,w
  3227  03EA  0863               	addwf	(sprintf@sp),f
  3228  03EB  07EA               	goto	l2105
  3229  03EC  2C2A               	
  3230                           l368:	
  3231  03ED                     	line	1493
  3232                           ;doprnt.c: 1488: };doprnt.c: 1493: while(prec--) {
  3233                           	goto	l2105
  3234  03ED  2C2A               	
  3235                           l370:	
  3236  03EE                     	line	1508
  3237                           	
  3238                           l2099:	
  3239  03EE                     ;doprnt.c: 1497: {;doprnt.c: 1508: c = (val / dpowers[prec]) % 10 + '0';
  3240                           	movlw	0Ah
  3241  03EE  300A               	movwf	(___lwmod@divisor)
  3242  03EF  00D2               	movlw	0
  3243  03F0  3000               	movwf	((___lwmod@divisor))+1
  3244  03F1  00D3               	movf	(sprintf@prec),w
  3245  03F2  086B               	movwf	(??_sprintf+0)+0
  3246  03F3  00E3               	addwf	(??_sprintf+0)+0,w
  3247  03F4  0763               	addlw	low((((_dpowers)-__stringbase)|8000h))
  3248  03F5  3E01               	movwf	fsr0
  3249  03F6  0084               	fcall	stringdir
  3250  03F7  120A  118A  260A  120A  118A  	movwf	(___lwdiv@divisor)
  3251  03FC  00CA               	fcall	stringdir
  3252  03FD  120A  118A  260A  120A  118A  	movwf	(___lwdiv@divisor+1)
  3253  0402  00CB               	movf	(sprintf@val+1),w
  3254  0403  0869               	movwf	(___lwdiv@dividend+1)
  3255  0404  00CD               	movf	(sprintf@val),w
  3256  0405  0868               	movwf	(___lwdiv@dividend)
  3257  0406  00CC               	fcall	___lwdiv
  3258  0407  120A  118A  2663  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3259  040C  1283               	bcf	status, 6	;RP1=0, select bank0
  3260  040D  1303               	movf	(1+(?___lwdiv)),w
  3261  040E  084B               	movwf	(___lwmod@dividend+1)
  3262  040F  00D5               	movf	(0+(?___lwdiv)),w
  3263  0410  084A               	movwf	(___lwmod@dividend)
  3264  0411  00D4               	fcall	___lwmod
  3265  0412  120A  118A  26F8  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3266  0417  1283               	bcf	status, 6	;RP1=0, select bank0
  3267  0418  1303               	movf	(0+(?___lwmod)),w
  3268  0419  0852               	addlw	030h
  3269  041A  3E30               	movwf	(??_sprintf+1)+0
  3270  041B  00E4               	movf	(??_sprintf+1)+0,w
  3271  041C  0864               	movwf	(sprintf@c)
  3272  041D  00EC               	line	1543
  3273                           	
  3274                           l2101:	
  3275  041E                     ;doprnt.c: 1542: };doprnt.c: 1543: ((*sp++ = (c)));
  3276                           	movf	(sprintf@c),w
  3277  041E  086C               	movwf	(??_sprintf+0)+0
  3278  041F  00E3               	movf	(sprintf@sp),w
  3279  0420  086A               	movwf	fsr0
  3280  0421  0084               	movf	(??_sprintf+0)+0,w
  3281  0422  0863               	bcf	status, 7	;select IRP bank0
  3282  0423  1383               	movwf	indf
  3283  0424  0080               	
  3284                           l2103:	
  3285  0425                     	movlw	low(01h)
  3286  0425  3001               	movwf	(??_sprintf+0)+0
  3287  0426  00E3               	movf	(??_sprintf+0)+0,w
  3288  0427  0863               	addwf	(sprintf@sp),f
  3289  0428  07EA               	goto	l2105
  3290  0429  2C2A               	line	1544
  3291                           	
  3292                           l369:	
  3293  042A                     	line	1493
  3294                           	
  3295                           l2105:	
  3296  042A                     	movlw	low(-1)
  3297  042A  30FF               	movwf	(??_sprintf+0)+0
  3298  042B  00E3               	movf	(??_sprintf+0)+0,w
  3299  042C  0863               	addwf	(sprintf@prec),f
  3300  042D  07EB               		incf	(((sprintf@prec))),w
  3301  042E  0A6B               	btfss	status,2
  3302  042F  1D03               	goto	u1871
  3303  0430  2C32               	goto	u1870
  3304  0431  2C33               u1871:
  3305  0432                     	goto	l2099
  3306  0432  2BEE               u1870:
  3307  0433                     	goto	l2107
  3308  0433  2C35               	
  3309                           l371:	
  3310  0434                     	goto	l2107
  3311  0434  2C35               	line	1552
  3312                           	
  3313                           l345:	
  3314  0435                     	line	548
  3315                           	
  3316                           l2107:	
  3317  0435                     	movlw	01h
  3318  0435  3001               	addwf	(sprintf@f),f
  3319  0436  07D8               	movlw	-01h
  3320  0437  30FF               	addwf	(sprintf@f),w
  3321  0438  0758               	movwf	fsr0
  3322  0439  0084               	fcall	stringdir
  3323  043A  120A  118A  260A  120A  118A  	movwf	(??_sprintf+0)+0
  3324  043F  00E3               	movf	(??_sprintf+0)+0,w
  3325  0440  0863               	movwf	(sprintf@c)
  3326  0441  00EC               	movf	(((sprintf@c))),w
  3327  0442  086C               	btfss	status,2
  3328  0443  1D03               	goto	u1881
  3329  0444  2C46               	goto	u1880
  3330  0445  2C47               u1881:
  3331  0446                     	goto	l2033
  3332  0446  2AD2               u1880:
  3333  0447                     	goto	l2109
  3334  0447  2C49               	
  3335                           l372:	
  3336  0448                     	goto	l2109
  3337  0448  2C49               	line	1554
  3338                           ;doprnt.c: 1544: };doprnt.c: 1552: };doprnt.c: 1554: alldone:
  3339                           	
  3340                           l355:	
  3341  0449                     	line	1557
  3342                           	
  3343                           l2109:	
  3344  0449                     ;doprnt.c: 1557: *sp = 0;
  3345                           	movf	(sprintf@sp),w
  3346  0449  086A               	movwf	fsr0
  3347  044A  0084               	bcf	status, 7	;select IRP bank0
  3348  044B  1383               	clrf	indf
  3349  044C  0180               	goto	l373
  3350  044D  2C4E               	line	1559
  3351                           	
  3352                           l2111:	
  3353  044E                     	line	1560
  3354                           ;doprnt.c: 1559: return 0;;	Return value of _sprintf is never used
  3355                           	
  3356                           l373:	
  3357  044E                     	return
  3358  044E  0008               	opt stack 0
  3359                           GLOBAL	__end_of_sprintf
  3360                           	__end_of_sprintf:
  3361  044F                     	signat	_sprintf,4698
  3362                           	global	_isdigit
  3363                           
  3364 ;; *************** function _isdigit *****************
  3365 ;; Defined at:
  3366 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\isdigit.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;  c               1    wreg     unsigned char 
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;  c               1    1[BANK0 ] unsigned char 
  3371 ;; Return value:  Size  Location     Type
  3372 ;;		None               void
  3373 ;; Registers used:
  3374 ;;		wreg, status,2, status,0
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3380 ;;      Params:         0       0       0       0       0
  3381 ;;      Locals:         0       2       0       0       0
  3382 ;;      Temps:          0       0       0       0       0
  3383 ;;      Totals:         0       2       0       0       0
  3384 ;;Total ram usage:        2 bytes
  3385 ;; Hardware stack levels used:    1
  3386 ;; Hardware stack levels required when called:    3
  3387 ;; This function calls:
  3388 ;;		Nothing
  3389 ;; This function is called by:
  3390 ;;		_sprintf
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           psect	text2,local,class=CODE,delta=2,merge=1,group=2
  3394                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\isdigit.c"
  3395                           	line	8
  3396                           global __ptext2
  3397                           __ptext2:	;psect for function _isdigit
  3398  0FCF                     psect	text2
  3399                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\isdigit.c"
  3400                           	line	8
  3401                           	global	__size_of_isdigit
  3402                           	__size_of_isdigit	equ	__end_of_isdigit-_isdigit
  3403  0016                     	
  3404                           _isdigit:	
  3405  0FCF                     ;incstack = 0
  3406                           	opt	stack 3
  3407                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3408                           ;isdigit@c stored from wreg
  3409                           	bcf	status, 5	;RP0=0, select bank0
  3410  0FCF  1283               	bcf	status, 6	;RP1=0, select bank0
  3411  0FD0  1303               	movwf	(isdigit@c)
  3412  0FD1  00CB               	line	14
  3413                           	
  3414                           l1921:	
  3415  0FD2                     	clrf	(_isdigit$1048)
  3416  0FD2  01CA               	
  3417                           l1923:	
  3418  0FD3                     	movlw	low(03Ah)
  3419  0FD3  303A               	subwf	(isdigit@c),w
  3420  0FD4  024B               	skipnc
  3421  0FD5  1803               	goto	u1531
  3422  0FD6  2FD8               	goto	u1530
  3423  0FD7  2FD9               u1531:
  3424  0FD8                     	goto	l1929
  3425  0FD8  2FE2               u1530:
  3426  0FD9                     	
  3427                           l1925:	
  3428  0FD9                     	movlw	low(030h)
  3429  0FD9  3030               	subwf	(isdigit@c),w
  3430  0FDA  024B               	skipc
  3431  0FDB  1C03               	goto	u1541
  3432  0FDC  2FDE               	goto	u1540
  3433  0FDD  2FDF               u1541:
  3434  0FDE                     	goto	l1929
  3435  0FDE  2FE2               u1540:
  3436  0FDF                     	
  3437                           l1927:	
  3438  0FDF                     	clrf	(_isdigit$1048)
  3439  0FDF  01CA               	incf	(_isdigit$1048),f
  3440  0FE0  0ACA               	goto	l1929
  3441  0FE1  2FE2               	
  3442                           l804:	
  3443  0FE2                     	
  3444                           l1929:	
  3445  0FE2                     	rrf	(_isdigit$1048),w
  3446  0FE2  0C4A               	
  3447                           	goto	l805
  3448  0FE3  2FE4               	
  3449                           l1931:	
  3450  0FE4                     	line	15
  3451                           	
  3452                           l805:	
  3453  0FE4                     	return
  3454  0FE4  0008               	opt stack 0
  3455                           GLOBAL	__end_of_isdigit
  3456                           	__end_of_isdigit:
  3457  0FE5                     	signat	_isdigit,4216
  3458                           	global	___lwmod
  3459                           
  3460 ;; *************** function ___lwmod *****************
  3461 ;; Defined at:
  3462 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;  divisor         2    8[BANK0 ] unsigned int 
  3465 ;;  dividend        2   10[BANK0 ] unsigned int 
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;  counter         1   13[BANK0 ] unsigned char 
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  2    8[BANK0 ] unsigned int 
  3470 ;; Registers used:
  3471 ;;		wreg, status,2, status,0
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3477 ;;      Params:         0       4       0       0       0
  3478 ;;      Locals:         0       1       0       0       0
  3479 ;;      Temps:          0       1       0       0       0
  3480 ;;      Totals:         0       6       0       0       0
  3481 ;;Total ram usage:        6 bytes
  3482 ;; Hardware stack levels used:    1
  3483 ;; Hardware stack levels required when called:    3
  3484 ;; This function calls:
  3485 ;;		Nothing
  3486 ;; This function is called by:
  3487 ;;		_sprintf
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           psect	text3,local,class=CODE,delta=2,merge=1,group=1
  3491                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3492                           	line	5
  3493                           global __ptext3
  3494                           __ptext3:	;psect for function ___lwmod
  3495  06F8                     psect	text3
  3496                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3497                           	line	5
  3498                           	global	__size_of___lwmod
  3499                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  3500  0043                     	
  3501                           ___lwmod:	
  3502  06F8                     ;incstack = 0
  3503                           	opt	stack 3
  3504                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3505                           	line	12
  3506                           	
  3507                           l1973:	
  3508  06F8                     	bcf	status, 5	;RP0=0, select bank0
  3509  06F8  1283               	bcf	status, 6	;RP1=0, select bank0
  3510  06F9  1303               	movf	((___lwmod@divisor)),w
  3511  06FA  0852               iorwf	((___lwmod@divisor+1)),w
  3512  06FB  0453               	btfsc	status,2
  3513  06FC  1903               	goto	u1641
  3514  06FD  2EFF               	goto	u1640
  3515  06FE  2F00               u1641:
  3516  06FF                     	goto	l1991
  3517  06FF  2F35               u1640:
  3518  0700                     	line	13
  3519                           	
  3520                           l1975:	
  3521  0700                     	clrf	(___lwmod@counter)
  3522  0700  01D7               	incf	(___lwmod@counter),f
  3523  0701  0AD7               	line	14
  3524                           	goto	l1981
  3525  0702  2F0F               	
  3526                           l654:	
  3527  0703                     	line	15
  3528                           	
  3529                           l1977:	
  3530  0703                     	movlw	01h
  3531  0703  3001               	
  3532                           u1655:
  3533  0704                     	clrc
  3534  0704  1003               	rlf	(___lwmod@divisor),f
  3535  0705  0DD2               	rlf	(___lwmod@divisor+1),f
  3536  0706  0DD3               	addlw	-1
  3537  0707  3EFF               	skipz
  3538  0708  1D03               	goto	u1655
  3539  0709  2F04               	line	16
  3540                           	
  3541                           l1979:	
  3542  070A                     	movlw	low(01h)
  3543  070A  3001               	movwf	(??___lwmod+0)+0
  3544  070B  00D6               	movf	(??___lwmod+0)+0,w
  3545  070C  0856               	addwf	(___lwmod@counter),f
  3546  070D  07D7               	goto	l1981
  3547  070E  2F0F               	line	17
  3548                           	
  3549                           l653:	
  3550  070F                     	line	14
  3551                           	
  3552                           l1981:	
  3553  070F                     	btfss	(___lwmod@divisor+1),(15)&7
  3554  070F  1FD3               	goto	u1661
  3555  0710  2F12               	goto	u1660
  3556  0711  2F13               u1661:
  3557  0712                     	goto	l1977
  3558  0712  2F03               u1660:
  3559  0713                     	goto	l1983
  3560  0713  2F15               	
  3561                           l655:	
  3562  0714                     	goto	l1983
  3563  0714  2F15               	line	18
  3564                           	
  3565                           l656:	
  3566  0715                     	line	19
  3567                           	
  3568                           l1983:	
  3569  0715                     	movf	(___lwmod@divisor+1),w
  3570  0715  0853               	subwf	(___lwmod@dividend+1),w
  3571  0716  0255               	skipz
  3572  0717  1D03               	goto	u1675
  3573  0718  2F1B               	movf	(___lwmod@divisor),w
  3574  0719  0852               	subwf	(___lwmod@dividend),w
  3575  071A  0254               u1675:
  3576  071B                     	skipc
  3577  071B  1C03               	goto	u1671
  3578  071C  2F1E               	goto	u1670
  3579  071D  2F1F               u1671:
  3580  071E                     	goto	l1987
  3581  071E  2F26               u1670:
  3582  071F                     	line	20
  3583                           	
  3584                           l1985:	
  3585  071F                     	movf	(___lwmod@divisor),w
  3586  071F  0852               	subwf	(___lwmod@dividend),f
  3587  0720  02D4               	movf	(___lwmod@divisor+1),w
  3588  0721  0853               	skipc
  3589  0722  1C03               	decf	(___lwmod@dividend+1),f
  3590  0723  03D5               	subwf	(___lwmod@dividend+1),f
  3591  0724  02D5               	goto	l1987
  3592  0725  2F26               	
  3593                           l657:	
  3594  0726                     	line	21
  3595                           	
  3596                           l1987:	
  3597  0726                     	movlw	01h
  3598  0726  3001               	
  3599                           u1685:
  3600  0727                     	clrc
  3601  0727  1003               	rrf	(___lwmod@divisor+1),f
  3602  0728  0CD3               	rrf	(___lwmod@divisor),f
  3603  0729  0CD2               	addlw	-1
  3604  072A  3EFF               	skipz
  3605  072B  1D03               	goto	u1685
  3606  072C  2F27               	line	22
  3607                           	
  3608                           l1989:	
  3609  072D                     	movlw	01h
  3610  072D  3001               	subwf	(___lwmod@counter),f
  3611  072E  02D7               	btfss	status,2
  3612  072F  1D03               	goto	u1691
  3613  0730  2F32               	goto	u1690
  3614  0731  2F33               u1691:
  3615  0732                     	goto	l1983
  3616  0732  2F15               u1690:
  3617  0733                     	goto	l1991
  3618  0733  2F35               	
  3619                           l658:	
  3620  0734                     	goto	l1991
  3621  0734  2F35               	line	23
  3622                           	
  3623                           l652:	
  3624  0735                     	line	24
  3625                           	
  3626                           l1991:	
  3627  0735                     	movf	(___lwmod@dividend+1),w
  3628  0735  0855               	movwf	(?___lwmod+1)
  3629  0736  00D3               	movf	(___lwmod@dividend),w
  3630  0737  0854               	movwf	(?___lwmod)
  3631  0738  00D2               	goto	l659
  3632  0739  2F3A               	
  3633                           l1993:	
  3634  073A                     	line	25
  3635                           	
  3636                           l659:	
  3637  073A                     	return
  3638  073A  0008               	opt stack 0
  3639                           GLOBAL	__end_of___lwmod
  3640                           	__end_of___lwmod:
  3641  073B                     	signat	___lwmod,8314
  3642                           	global	___lwdiv
  3643                           
  3644 ;; *************** function ___lwdiv *****************
  3645 ;; Defined at:
  3646 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;  divisor         2    0[BANK0 ] unsigned int 
  3649 ;;  dividend        2    2[BANK0 ] unsigned int 
  3650 ;; Auto vars:     Size  Location     Type
  3651 ;;  quotient        2    6[BANK0 ] unsigned int 
  3652 ;;  counter         1    5[BANK0 ] unsigned char 
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  2    0[BANK0 ] unsigned int 
  3655 ;; Registers used:
  3656 ;;		wreg, status,2, status,0
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3662 ;;      Params:         0       4       0       0       0
  3663 ;;      Locals:         0       3       0       0       0
  3664 ;;      Temps:          0       1       0       0       0
  3665 ;;      Totals:         0       8       0       0       0
  3666 ;;Total ram usage:        8 bytes
  3667 ;; Hardware stack levels used:    1
  3668 ;; Hardware stack levels required when called:    3
  3669 ;; This function calls:
  3670 ;;		Nothing
  3671 ;; This function is called by:
  3672 ;;		_sprintf
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           psect	text4,local,class=CODE,delta=2,merge=1,group=1
  3676                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3677                           	line	5
  3678                           global __ptext4
  3679                           __ptext4:	;psect for function ___lwdiv
  3680  0663                     psect	text4
  3681                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3682                           	line	5
  3683                           	global	__size_of___lwdiv
  3684                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  3685  004D                     	
  3686                           ___lwdiv:	
  3687  0663                     ;incstack = 0
  3688                           	opt	stack 3
  3689                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3690                           	line	13
  3691                           	
  3692                           l1947:	
  3693  0663                     	bcf	status, 5	;RP0=0, select bank0
  3694  0663  1283               	bcf	status, 6	;RP1=0, select bank0
  3695  0664  1303               	clrf	(___lwdiv@quotient)
  3696  0665  01D0               	clrf	(___lwdiv@quotient+1)
  3697  0666  01D1               	line	14
  3698                           	
  3699                           l1949:	
  3700  0667                     	movf	((___lwdiv@divisor)),w
  3701  0667  084A               iorwf	((___lwdiv@divisor+1)),w
  3702  0668  044B               	btfsc	status,2
  3703  0669  1903               	goto	u1571
  3704  066A  2E6C               	goto	u1570
  3705  066B  2E6D               u1571:
  3706  066C                     	goto	l1969
  3707  066C  2EAA               u1570:
  3708  066D                     	line	15
  3709                           	
  3710                           l1951:	
  3711  066D                     	clrf	(___lwdiv@counter)
  3712  066D  01CF               	incf	(___lwdiv@counter),f
  3713  066E  0ACF               	line	16
  3714                           	goto	l1957
  3715  066F  2E7C               	
  3716                           l644:	
  3717  0670                     	line	17
  3718                           	
  3719                           l1953:	
  3720  0670                     	movlw	01h
  3721  0670  3001               	
  3722                           u1585:
  3723  0671                     	clrc
  3724  0671  1003               	rlf	(___lwdiv@divisor),f
  3725  0672  0DCA               	rlf	(___lwdiv@divisor+1),f
  3726  0673  0DCB               	addlw	-1
  3727  0674  3EFF               	skipz
  3728  0675  1D03               	goto	u1585
  3729  0676  2E71               	line	18
  3730                           	
  3731                           l1955:	
  3732  0677                     	movlw	low(01h)
  3733  0677  3001               	movwf	(??___lwdiv+0)+0
  3734  0678  00CE               	movf	(??___lwdiv+0)+0,w
  3735  0679  084E               	addwf	(___lwdiv@counter),f
  3736  067A  07CF               	goto	l1957
  3737  067B  2E7C               	line	19
  3738                           	
  3739                           l643:	
  3740  067C                     	line	16
  3741                           	
  3742                           l1957:	
  3743  067C                     	btfss	(___lwdiv@divisor+1),(15)&7
  3744  067C  1FCB               	goto	u1591
  3745  067D  2E7F               	goto	u1590
  3746  067E  2E80               u1591:
  3747  067F                     	goto	l1953
  3748  067F  2E70               u1590:
  3749  0680                     	goto	l1959
  3750  0680  2E82               	
  3751                           l645:	
  3752  0681                     	goto	l1959
  3753  0681  2E82               	line	20
  3754                           	
  3755                           l646:	
  3756  0682                     	line	21
  3757                           	
  3758                           l1959:	
  3759  0682                     	movlw	01h
  3760  0682  3001               	
  3761                           u1605:
  3762  0683                     	clrc
  3763  0683  1003               	rlf	(___lwdiv@quotient),f
  3764  0684  0DD0               	rlf	(___lwdiv@quotient+1),f
  3765  0685  0DD1               	addlw	-1
  3766  0686  3EFF               	skipz
  3767  0687  1D03               	goto	u1605
  3768  0688  2E83               	line	22
  3769                           	movf	(___lwdiv@divisor+1),w
  3770  0689  084B               	subwf	(___lwdiv@dividend+1),w
  3771  068A  024D               	skipz
  3772  068B  1D03               	goto	u1615
  3773  068C  2E8F               	movf	(___lwdiv@divisor),w
  3774  068D  084A               	subwf	(___lwdiv@dividend),w
  3775  068E  024C               u1615:
  3776  068F                     	skipc
  3777  068F  1C03               	goto	u1611
  3778  0690  2E92               	goto	u1610
  3779  0691  2E93               u1611:
  3780  0692                     	goto	l1965
  3781  0692  2E9B               u1610:
  3782  0693                     	line	23
  3783                           	
  3784                           l1961:	
  3785  0693                     	movf	(___lwdiv@divisor),w
  3786  0693  084A               	subwf	(___lwdiv@dividend),f
  3787  0694  02CC               	movf	(___lwdiv@divisor+1),w
  3788  0695  084B               	skipc
  3789  0696  1C03               	decf	(___lwdiv@dividend+1),f
  3790  0697  03CD               	subwf	(___lwdiv@dividend+1),f
  3791  0698  02CD               	line	24
  3792                           	
  3793                           l1963:	
  3794  0699                     	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  3795  0699  1450               	goto	l1965
  3796  069A  2E9B               	line	25
  3797                           	
  3798                           l647:	
  3799  069B                     	line	26
  3800                           	
  3801                           l1965:	
  3802  069B                     	movlw	01h
  3803  069B  3001               	
  3804                           u1625:
  3805  069C                     	clrc
  3806  069C  1003               	rrf	(___lwdiv@divisor+1),f
  3807  069D  0CCB               	rrf	(___lwdiv@divisor),f
  3808  069E  0CCA               	addlw	-1
  3809  069F  3EFF               	skipz
  3810  06A0  1D03               	goto	u1625
  3811  06A1  2E9C               	line	27
  3812                           	
  3813                           l1967:	
  3814  06A2                     	movlw	01h
  3815  06A2  3001               	subwf	(___lwdiv@counter),f
  3816  06A3  02CF               	btfss	status,2
  3817  06A4  1D03               	goto	u1631
  3818  06A5  2EA7               	goto	u1630
  3819  06A6  2EA8               u1631:
  3820  06A7                     	goto	l1959
  3821  06A7  2E82               u1630:
  3822  06A8                     	goto	l1969
  3823  06A8  2EAA               	
  3824                           l648:	
  3825  06A9                     	goto	l1969
  3826  06A9  2EAA               	line	28
  3827                           	
  3828                           l642:	
  3829  06AA                     	line	29
  3830                           	
  3831                           l1969:	
  3832  06AA                     	movf	(___lwdiv@quotient+1),w
  3833  06AA  0851               	movwf	(?___lwdiv+1)
  3834  06AB  00CB               	movf	(___lwdiv@quotient),w
  3835  06AC  0850               	movwf	(?___lwdiv)
  3836  06AD  00CA               	goto	l649
  3837  06AE  2EAF               	
  3838                           l1971:	
  3839  06AF                     	line	30
  3840                           	
  3841                           l649:	
  3842  06AF                     	return
  3843  06AF  0008               	opt stack 0
  3844                           GLOBAL	__end_of___lwdiv
  3845                           	__end_of___lwdiv:
  3846  06B0                     	signat	___lwdiv,8314
  3847                           	global	___bmul
  3848                           
  3849 ;; *************** function ___bmul *****************
  3850 ;; Defined at:
  3851 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8.c"
  3852 ;; Parameters:    Size  Location     Type
  3853 ;;  multiplier      1    wreg     unsigned char 
  3854 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;  multiplier      1    3[BANK0 ] unsigned char 
  3857 ;;  product         1    2[BANK0 ] unsigned char 
  3858 ;; Return value:  Size  Location     Type
  3859 ;;                  1    wreg      unsigned char 
  3860 ;; Registers used:
  3861 ;;		wreg, status,2, status,0
  3862 ;; Tracked objects:
  3863 ;;		On entry : 0/0
  3864 ;;		On exit  : 0/0
  3865 ;;		Unchanged: 0/0
  3866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3867 ;;      Params:         0       1       0       0       0
  3868 ;;      Locals:         0       2       0       0       0
  3869 ;;      Temps:          0       1       0       0       0
  3870 ;;      Totals:         0       4       0       0       0
  3871 ;;Total ram usage:        4 bytes
  3872 ;; Hardware stack levels used:    1
  3873 ;; Hardware stack levels required when called:    3
  3874 ;; This function calls:
  3875 ;;		Nothing
  3876 ;; This function is called by:
  3877 ;;		_sprintf
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  3881                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8.c"
  3882                           	line	4
  3883                           global __ptext5
  3884                           __ptext5:	;psect for function ___bmul
  3885  0FE5                     psect	text5
  3886                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8.c"
  3887                           	line	4
  3888                           	global	__size_of___bmul
  3889                           	__size_of___bmul	equ	__end_of___bmul-___bmul
  3890  001B                     	
  3891                           ___bmul:	
  3892  0FE5                     ;incstack = 0
  3893                           	opt	stack 3
  3894                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3895                           ;___bmul@multiplier stored from wreg
  3896                           	bcf	status, 5	;RP0=0, select bank0
  3897  0FE5  1283               	bcf	status, 6	;RP1=0, select bank0
  3898  0FE6  1303               	movwf	(___bmul@multiplier)
  3899  0FE7  00CD               	line	6
  3900                           	
  3901                           l1933:	
  3902  0FE8                     	clrf	(___bmul@product)
  3903  0FE8  01CC               	goto	l1935
  3904  0FE9  2FEA               	line	42
  3905                           	
  3906                           l400:	
  3907  0FEA                     	line	43
  3908                           	
  3909                           l1935:	
  3910  0FEA                     	btfss	(___bmul@multiplier),(0)&7
  3911  0FEA  1C4D               	goto	u1551
  3912  0FEB  2FED               	goto	u1550
  3913  0FEC  2FEE               u1551:
  3914  0FED                     	goto	l1939
  3915  0FED  2FF3               u1550:
  3916  0FEE                     	line	44
  3917                           	
  3918                           l1937:	
  3919  0FEE                     	movf	(___bmul@multiplicand),w
  3920  0FEE  084A               	movwf	(??___bmul+0)+0
  3921  0FEF  00CB               	movf	(??___bmul+0)+0,w
  3922  0FF0  084B               	addwf	(___bmul@product),f
  3923  0FF1  07CC               	goto	l1939
  3924  0FF2  2FF3               	
  3925                           l401:	
  3926  0FF3                     	line	45
  3927                           	
  3928                           l1939:	
  3929  0FF3                     	clrc
  3930  0FF3  1003               	rlf	(___bmul@multiplicand),f
  3931  0FF4  0DCA               
  3932                           	line	46
  3933                           	
  3934                           l1941:	
  3935  0FF5                     	clrc
  3936  0FF5  1003               	rrf	(___bmul@multiplier),f
  3937  0FF6  0CCD               
  3938                           	line	47
  3939                           	movf	((___bmul@multiplier)),w
  3940  0FF7  084D               	btfss	status,2
  3941  0FF8  1D03               	goto	u1561
  3942  0FF9  2FFB               	goto	u1560
  3943  0FFA  2FFC               u1561:
  3944  0FFB                     	goto	l1935
  3945  0FFB  2FEA               u1560:
  3946  0FFC                     	goto	l1943
  3947  0FFC  2FFD               	
  3948                           l402:	
  3949  0FFD                     	line	50
  3950                           	
  3951                           l1943:	
  3952  0FFD                     	movf	(___bmul@product),w
  3953  0FFD  084C               	goto	l403
  3954  0FFE  2FFF               	
  3955                           l1945:	
  3956  0FFF                     	line	51
  3957                           	
  3958                           l403:	
  3959  0FFF                     	return
  3960  0FFF  0008               	opt stack 0
  3961                           GLOBAL	__end_of___bmul
  3962                           	__end_of___bmul:
  3963  1000                     	signat	___bmul,8313
  3964                           	global	_spiInit
  3965                           
  3966 ;; *************** function _spiInit *****************
  3967 ;; Defined at:
  3968 ;;		line 12 in file "SPI.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;  sType           1    wreg     enum E1265
  3971 ;;  sDataSample     1    0[BANK0 ] enum E1273
  3972 ;;  sClockIdle      1    1[BANK0 ] enum E1277
  3973 ;;  sTransmitEdg    1    2[BANK0 ] enum E1281
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;  sType           1    3[BANK0 ] enum E1265
  3976 ;; Return value:  Size  Location     Type
  3977 ;;                  1    wreg      void 
  3978 ;; Registers used:
  3979 ;;		wreg, status,2, status,0
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3985 ;;      Params:         0       3       0       0       0
  3986 ;;      Locals:         0       1       0       0       0
  3987 ;;      Temps:          0       0       0       0       0
  3988 ;;      Totals:         0       4       0       0       0
  3989 ;;Total ram usage:        4 bytes
  3990 ;; Hardware stack levels used:    1
  3991 ;; Hardware stack levels required when called:    3
  3992 ;; This function calls:
  3993 ;;		Nothing
  3994 ;; This function is called by:
  3995 ;;		_main
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3999                           	file	"SPI.c"
  4000                           	line	12
  4001                           global __ptext6
  4002                           __ptext6:	;psect for function _spiInit
  4003  05B3                     psect	text6
  4004                           	file	"SPI.c"
  4005                           	line	12
  4006                           	global	__size_of_spiInit
  4007                           	__size_of_spiInit	equ	__end_of_spiInit-_spiInit
  4008  001F                     	
  4009                           _spiInit:	
  4010  05B3                     ;incstack = 0
  4011                           	opt	stack 4
  4012                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  4013                           ;spiInit@sType stored from wreg
  4014                           	bcf	status, 5	;RP0=0, select bank0
  4015  05B3  1283               	bcf	status, 6	;RP1=0, select bank0
  4016  05B4  1303               	movwf	(spiInit@sType)
  4017  05B5  00CD               	line	14
  4018                           	
  4019                           l2011:	
  4020  05B6                     ;SPI.c: 14: TRISC5 = 0;
  4021                           	bsf	status, 5	;RP0=1, select bank1
  4022  05B6  1683               	bcf	status, 6	;RP1=0, select bank1
  4023  05B7  1303               	bcf	(1085/8)^080h,(1085)&7	;volatile
  4024  05B8  1287               	line	15
  4025                           ;SPI.c: 15: if(sType & 0b00000100)
  4026                           	bcf	status, 5	;RP0=0, select bank0
  4027  05B9  1283               	bcf	status, 6	;RP1=0, select bank0
  4028  05BA  1303               	btfss	(spiInit@sType),(2)&7
  4029  05BB  1D4D               	goto	u1711
  4030  05BC  2DBE               	goto	u1710
  4031  05BD  2DBF               u1711:
  4032  05BE                     	goto	l2017
  4033  05BE  2DC5               u1710:
  4034  05BF                     	line	17
  4035                           	
  4036                           l2013:	
  4037  05BF                     ;SPI.c: 16: {;SPI.c: 17: SSPSTAT = sTransmitEdge;
  4038                           	movf	(spiInit@sTransmitEdge),w
  4039  05BF  084C               	bsf	status, 5	;RP0=1, select bank1
  4040  05C0  1683               	bcf	status, 6	;RP1=0, select bank1
  4041  05C1  1303               	movwf	(148)^080h	;volatile
  4042  05C2  0094               	line	18
  4043                           	
  4044                           l2015:	
  4045  05C3                     ;SPI.c: 18: TRISC3 = 1;
  4046                           	bsf	(1083/8)^080h,(1083)&7	;volatile
  4047  05C3  1587               	line	19
  4048                           ;SPI.c: 19: }
  4049                           	goto	l186
  4050  05C4  2DCC               	line	20
  4051                           	
  4052                           l185:	
  4053  05C5                     	line	22
  4054                           	
  4055                           l2017:	
  4056  05C5                     ;SPI.c: 20: else;SPI.c: 21: {;SPI.c: 22: SSPSTAT = sDataSample | sTransmitEdge;
  4057                           	bcf	status, 5	;RP0=0, select bank0
  4058  05C5  1283               	movf	(spiInit@sDataSample),w
  4059  05C6  084A               	iorwf	(spiInit@sTransmitEdge),w
  4060  05C7  044C               	bsf	status, 5	;RP0=1, select bank1
  4061  05C8  1683               	bcf	status, 6	;RP1=0, select bank1
  4062  05C9  1303               	movwf	(148)^080h	;volatile
  4063  05CA  0094               	line	23
  4064                           	
  4065                           l2019:	
  4066  05CB                     ;SPI.c: 23: TRISC3 = 0;
  4067                           	bcf	(1083/8)^080h,(1083)&7	;volatile
  4068  05CB  1187               	line	24
  4069                           	
  4070                           l186:	
  4071  05CC                     	line	26
  4072                           ;SPI.c: 24: };SPI.c: 26: SSPCON = sType | sClockIdle;
  4073                           	bcf	status, 5	;RP0=0, select bank0
  4074  05CC  1283               	bcf	status, 6	;RP1=0, select bank0
  4075  05CD  1303               	movf	(spiInit@sType),w
  4076  05CE  084D               	iorwf	(spiInit@sClockIdle),w
  4077  05CF  044B               	movwf	(20)	;volatile
  4078  05D0  0094               	line	27
  4079                           	
  4080                           l187:	
  4081  05D1                     	return
  4082  05D1  0008               	opt stack 0
  4083                           GLOBAL	__end_of_spiInit
  4084                           	__end_of_spiInit:
  4085  05D2                     	signat	_spiInit,16505
  4086                           	global	_mandar
  4087                           
  4088 ;; *************** function _mandar *****************
  4089 ;; Defined at:
  4090 ;;		line 24 in file "USART1.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  dato            2    0[BANK0 ] int 
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;		None
  4095 ;; Return value:  Size  Location     Type
  4096 ;;                  1    wreg      void 
  4097 ;; Registers used:
  4098 ;;		wreg
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4104 ;;      Params:         0       2       0       0       0
  4105 ;;      Locals:         0       0       0       0       0
  4106 ;;      Temps:          0       0       0       0       0
  4107 ;;      Totals:         0       2       0       0       0
  4108 ;;Total ram usage:        2 bytes
  4109 ;; Hardware stack levels used:    1
  4110 ;; Hardware stack levels required when called:    3
  4111 ;; This function calls:
  4112 ;;		Nothing
  4113 ;; This function is called by:
  4114 ;;		_main
  4115 ;; This function uses a non-reentrant model
  4116 ;;
  4117                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  4118                           	file	"USART1.c"
  4119                           	line	24
  4120                           global __ptext7
  4121                           __ptext7:	;psect for function _mandar
  4122  05F1                     psect	text7
  4123                           	file	"USART1.c"
  4124                           	line	24
  4125                           	global	__size_of_mandar
  4126                           	__size_of_mandar	equ	__end_of_mandar-_mandar
  4127  000D                     	
  4128                           _mandar:	
  4129  05F1                     ;incstack = 0
  4130                           	opt	stack 4
  4131                           ; Regs used in _mandar: [wreg]
  4132                           	line	25
  4133                           	
  4134                           l2007:	
  4135  05F1                     ;USART1.c: 25: while (TXSTAbits.TRMT == 0){}
  4136                           	goto	l18
  4137  05F1  2DF2               	
  4138                           l19:	
  4139  05F2                     	
  4140                           l18:	
  4141  05F2                     	bsf	status, 5	;RP0=1, select bank1
  4142  05F2  1683               	bcf	status, 6	;RP1=0, select bank1
  4143  05F3  1303               	btfss	(152)^080h,1	;volatile
  4144  05F4  1C98               	goto	u1701
  4145  05F5  2DF7               	goto	u1700
  4146  05F6  2DF8               u1701:
  4147  05F7                     	goto	l18
  4148  05F7  2DF2               u1700:
  4149  05F8                     	goto	l2009
  4150  05F8  2DF9               	
  4151                           l20:	
  4152  05F9                     	line	26
  4153                           	
  4154                           l2009:	
  4155  05F9                     ;USART1.c: 26: TXREG = dato;
  4156                           	bcf	status, 5	;RP0=0, select bank0
  4157  05F9  1283               	bcf	status, 6	;RP1=0, select bank0
  4158  05FA  1303               	movf	(mandar@dato),w
  4159  05FB  084A               	movwf	(25)	;volatile
  4160  05FC  0099               	line	27
  4161                           	
  4162                           l21:	
  4163  05FD                     	return
  4164  05FD  0008               	opt stack 0
  4165                           GLOBAL	__end_of_mandar
  4166                           	__end_of_mandar:
  4167  05FE                     	signat	_mandar,4217
  4168                           	global	_lcd_init
  4169                           
  4170 ;; *************** function _lcd_init *****************
  4171 ;; Defined at:
  4172 ;;		line 45 in file "LCD.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;		None
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;		None
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  1    wreg      void 
  4179 ;; Registers used:
  4180 ;;		wreg, status,2, status,0, pclath, cstack
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4186 ;;      Params:         0       0       0       0       0
  4187 ;;      Locals:         0       0       0       0       0
  4188 ;;      Temps:          0       0       0       0       0
  4189 ;;      Totals:         0       0       0       0       0
  4190 ;;Total ram usage:        0 bytes
  4191 ;; Hardware stack levels used:    1
  4192 ;; Hardware stack levels required when called:    6
  4193 ;; This function calls:
  4194 ;;		_lcd_cmd
  4195 ;; This function is called by:
  4196 ;;		_main
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  4200                           	file	"LCD.c"
  4201                           	line	45
  4202                           global __ptext8
  4203                           __ptext8:	;psect for function _lcd_init
  4204  05D2                     psect	text8
  4205                           	file	"LCD.c"
  4206                           	line	45
  4207                           	global	__size_of_lcd_init
  4208                           	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  4209  001F                     	
  4210                           _lcd_init:	
  4211  05D2                     ;incstack = 0
  4212                           	opt	stack 1
  4213                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4214                           	line	47
  4215                           	
  4216                           l2021:	
  4217  05D2                     ;LCD.c: 47: lcd_cmd(0x38);
  4218                           	movlw	low(038h)
  4219  05D2  3038               	fcall	_lcd_cmd
  4220  05D3  120A  158A  27BB  120A  118A  	line	48
  4221                           ;LCD.c: 48: lcd_cmd(0x0E);
  4222                           	movlw	low(0Eh)
  4223  05D8  300E               	fcall	_lcd_cmd
  4224  05D9  120A  158A  27BB  120A  118A  	line	49
  4225                           ;LCD.c: 49: lcd_cmd(0x01);
  4226                           	movlw	low(01h)
  4227  05DE  3001               	fcall	_lcd_cmd
  4228  05DF  120A  158A  27BB  120A  118A  	line	50
  4229                           ;LCD.c: 50: lcd_cmd(0x06);
  4230                           	movlw	low(06h)
  4231  05E4  3006               	fcall	_lcd_cmd
  4232  05E5  120A  158A  27BB  120A  118A  	line	51
  4233                           ;LCD.c: 51: lcd_cmd(0x80);
  4234                           	movlw	low(080h)
  4235  05EA  3080               	fcall	_lcd_cmd
  4236  05EB  120A  158A  27BB  120A  118A  	line	52
  4237                           	
  4238                           l226:	
  4239  05F0                     	return
  4240  05F0  0008               	opt stack 0
  4241                           GLOBAL	__end_of_lcd_init
  4242                           	__end_of_lcd_init:
  4243  05F1                     	signat	_lcd_init,89
  4244                           	global	_lcd_cmd
  4245                           
  4246 ;; *************** function _lcd_cmd *****************
  4247 ;; Defined at:
  4248 ;;		line 36 in file "LCD.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;  x               1    wreg     unsigned char 
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;  x               1    7[BANK0 ] unsigned char 
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  1    wreg      void 
  4255 ;; Registers used:
  4256 ;;		wreg, status,2, status,0, pclath, cstack
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4262 ;;      Params:         0       0       0       0       0
  4263 ;;      Locals:         0       1       0       0       0
  4264 ;;      Temps:          0       0       0       0       0
  4265 ;;      Totals:         0       1       0       0       0
  4266 ;;Total ram usage:        1 bytes
  4267 ;; Hardware stack levels used:    1
  4268 ;; Hardware stack levels required when called:    5
  4269 ;; This function calls:
  4270 ;;		_lcd_lat
  4271 ;;		_lcd_ready
  4272 ;; This function is called by:
  4273 ;;		_lcd_init
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  4277                           	line	36
  4278                           global __ptext9
  4279                           __ptext9:	;psect for function _lcd_cmd
  4280  0FBB                     psect	text9
  4281                           	file	"LCD.c"
  4282                           	line	36
  4283                           	global	__size_of_lcd_cmd
  4284                           	__size_of_lcd_cmd	equ	__end_of_lcd_cmd-_lcd_cmd
  4285  0014                     	
  4286                           _lcd_cmd:	
  4287  0FBB                     ;incstack = 0
  4288                           	opt	stack 1
  4289                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  4290                           ;lcd_cmd@x stored from wreg
  4291                           	bcf	status, 5	;RP0=0, select bank0
  4292  0FBB  1283               	bcf	status, 6	;RP1=0, select bank0
  4293  0FBC  1303               	movwf	(lcd_cmd@x)
  4294  0FBD  00D1               	line	38
  4295                           	
  4296                           l1903:	
  4297  0FBE                     ;LCD.c: 38: lcd_ready();
  4298                           	fcall	_lcd_ready
  4299  0FBE  120A  118A  27A6  120A  158A  	line	39
  4300                           	
  4301                           l1905:	
  4302  0FC3                     ;LCD.c: 39: PORTB = x;
  4303                           	bcf	status, 5	;RP0=0, select bank0
  4304  0FC3  1283               	bcf	status, 6	;RP1=0, select bank0
  4305  0FC4  1303               	movf	(lcd_cmd@x),w
  4306  0FC5  0851               	movwf	(6)	;volatile
  4307  0FC6  0086               	line	40
  4308                           	
  4309                           l1907:	
  4310  0FC7                     ;LCD.c: 40: PORTDbits.RD5 = 0;
  4311                           	bcf	(8),5	;volatile
  4312  0FC7  1288               	line	41
  4313                           	
  4314                           l1909:	
  4315  0FC8                     ;LCD.c: 41: PORTDbits.RD6 = 0;
  4316                           	bcf	(8),6	;volatile
  4317  0FC8  1308               	line	42
  4318                           	
  4319                           l1911:	
  4320  0FC9                     ;LCD.c: 42: lcd_lat();
  4321                           	fcall	_lcd_lat
  4322  0FC9  120A  158A  2785  120A  158A  	line	43
  4323                           	
  4324                           l223:	
  4325  0FCE                     	return
  4326  0FCE  0008               	opt stack 0
  4327                           GLOBAL	__end_of_lcd_cmd
  4328                           	__end_of_lcd_cmd:
  4329  0FCF                     	signat	_lcd_cmd,4217
  4330                           	global	_lcd_ready
  4331                           
  4332 ;; *************** function _lcd_ready *****************
  4333 ;; Defined at:
  4334 ;;		line 19 in file "LCD.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;		None
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;		None
  4339 ;; Return value:  Size  Location     Type
  4340 ;;                  1    wreg      void 
  4341 ;; Registers used:
  4342 ;;		wreg, status,2, status,0, pclath, cstack
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4348 ;;      Params:         0       0       0       0       0
  4349 ;;      Locals:         0       0       0       0       0
  4350 ;;      Temps:          0       1       0       0       0
  4351 ;;      Totals:         0       1       0       0       0
  4352 ;;Total ram usage:        1 bytes
  4353 ;; Hardware stack levels used:    1
  4354 ;; Hardware stack levels required when called:    4
  4355 ;; This function calls:
  4356 ;;		_delay
  4357 ;; This function is called by:
  4358 ;;		_lcd_cmd
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  4362                           	line	19
  4363                           global __ptext10
  4364                           __ptext10:	;psect for function _lcd_ready
  4365  07A6                     psect	text10
  4366                           	file	"LCD.c"
  4367                           	line	19
  4368                           	global	__size_of_lcd_ready
  4369                           	__size_of_lcd_ready	equ	__end_of_lcd_ready-_lcd_ready
  4370  002D                     	
  4371                           _lcd_ready:	
  4372  07A6                     ;incstack = 0
  4373                           	opt	stack 1
  4374                           ; Regs used in _lcd_ready: [wreg+status,2+status,0+pclath+cstack]
  4375                           	line	21
  4376                           	
  4377                           l1873:	
  4378  07A6                     ;LCD.c: 21: PORTB = 0xFF;
  4379                           	movlw	low(0FFh)
  4380  07A6  30FF               	bcf	status, 5	;RP0=0, select bank0
  4381  07A7  1283               	bcf	status, 6	;RP1=0, select bank0
  4382  07A8  1303               	movwf	(6)	;volatile
  4383  07A9  0086               	line	22
  4384                           	
  4385                           l1875:	
  4386  07AA                     ;LCD.c: 22: PORTB &= 0x80;
  4387                           	movlw	low(080h)
  4388  07AA  3080               	movwf	(??_lcd_ready+0)+0
  4389  07AB  00D0               	movf	(??_lcd_ready+0)+0,w
  4390  07AC  0850               	andwf	(6),f	;volatile
  4391  07AD  0586               	line	23
  4392                           	
  4393                           l1877:	
  4394  07AE                     ;LCD.c: 23: PORTDbits.RD5 = 0;
  4395                           	bcf	(8),5	;volatile
  4396  07AE  1288               	line	24
  4397                           	
  4398                           l1879:	
  4399  07AF                     ;LCD.c: 24: PORTDbits.RD6 = 1;
  4400                           	bsf	(8),6	;volatile
  4401  07AF  1708               	line	25
  4402                           	
  4403                           l1881:	
  4404  07B0                     ;LCD.c: 25: PORTDbits.RD7 = 0; delay(1); PORTDbits.RD7 = 1;
  4405                           	bcf	(8),7	;volatile
  4406  07B0  1388               	
  4407                           l1883:	
  4408  07B1                     	movlw	01h
  4409  07B1  3001               	movwf	(delay@ms)
  4410  07B2  00CA               	movlw	0
  4411  07B3  3000               	movwf	((delay@ms))+1
  4412  07B4  00CB               	fcall	_delay
  4413  07B5  120A  118A  2772  120A  118A  	
  4414                           l1885:	
  4415  07BA                     	bcf	status, 5	;RP0=0, select bank0
  4416  07BA  1283               	bcf	status, 6	;RP1=0, select bank0
  4417  07BB  1303               	bsf	(8),7	;volatile
  4418  07BC  1788               	line	26
  4419                           	
  4420                           l1887:	
  4421  07BD                     ;LCD.c: 26: if(PORTB == 0x80)
  4422                           		movlw	128
  4423  07BD  3080               	xorwf	((6)),w	;volatile
  4424  07BE  0606               	btfss	status,2
  4425  07BF  1D03               	goto	u1521
  4426  07C0  2FC2               	goto	u1520
  4427  07C1  2FC3               u1521:
  4428  07C2                     	goto	l220
  4429  07C2  2FD2               u1520:
  4430  07C3                     	line	28
  4431                           	
  4432                           l1889:	
  4433  07C3                     ;LCD.c: 27: {;LCD.c: 28: PORTDbits.RD7 = 0; delay(1); PORTDbits.RD7 = 1;
  4434                           	bcf	(8),7	;volatile
  4435  07C3  1388               	
  4436                           l1891:	
  4437  07C4                     	movlw	01h
  4438  07C4  3001               	movwf	(delay@ms)
  4439  07C5  00CA               	movlw	0
  4440  07C6  3000               	movwf	((delay@ms))+1
  4441  07C7  00CB               	fcall	_delay
  4442  07C8  120A  118A  2772  120A  118A  	
  4443                           l1893:	
  4444  07CD                     	bcf	status, 5	;RP0=0, select bank0
  4445  07CD  1283               	bcf	status, 6	;RP1=0, select bank0
  4446  07CE  1303               	bsf	(8),7	;volatile
  4447  07CF  1788               	line	29
  4448                           ;LCD.c: 29: }
  4449                           	goto	l220
  4450  07D0  2FD2               	line	30
  4451                           	
  4452                           l218:	
  4453  07D1                     	goto	l220
  4454  07D1  2FD2               	line	33
  4455                           ;LCD.c: 30: else;LCD.c: 31: {
  4456                           	
  4457                           l219:	
  4458  07D2                     	line	34
  4459                           	
  4460                           l220:	
  4461  07D2                     	return
  4462  07D2  0008               	opt stack 0
  4463                           GLOBAL	__end_of_lcd_ready
  4464                           	__end_of_lcd_ready:
  4465  07D3                     	signat	_lcd_ready,89
  4466                           	global	_lcd_lat
  4467                           
  4468 ;; *************** function _lcd_lat *****************
  4469 ;; Defined at:
  4470 ;;		line 12 in file "LCD.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;		None
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;		None
  4475 ;; Return value:  Size  Location     Type
  4476 ;;                  1    wreg      void 
  4477 ;; Registers used:
  4478 ;;		wreg, status,2, status,0, pclath, cstack
  4479 ;; Tracked objects:
  4480 ;;		On entry : 0/0
  4481 ;;		On exit  : 0/0
  4482 ;;		Unchanged: 0/0
  4483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4484 ;;      Params:         0       0       0       0       0
  4485 ;;      Locals:         0       0       0       0       0
  4486 ;;      Temps:          0       0       0       0       0
  4487 ;;      Totals:         0       0       0       0       0
  4488 ;;Total ram usage:        0 bytes
  4489 ;; Hardware stack levels used:    1
  4490 ;; Hardware stack levels required when called:    4
  4491 ;; This function calls:
  4492 ;;		_delay
  4493 ;; This function is called by:
  4494 ;;		_lcd_cmd
  4495 ;; This function uses a non-reentrant model
  4496 ;;
  4497                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  4498                           	line	12
  4499                           global __ptext11
  4500                           __ptext11:	;psect for function _lcd_lat
  4501  0F85                     psect	text11
  4502                           	file	"LCD.c"
  4503                           	line	12
  4504                           	global	__size_of_lcd_lat
  4505                           	__size_of_lcd_lat	equ	__end_of_lcd_lat-_lcd_lat
  4506  0010                     	
  4507                           _lcd_lat:	
  4508  0F85                     ;incstack = 0
  4509                           	opt	stack 1
  4510                           ; Regs used in _lcd_lat: [wreg+status,2+status,0+pclath+cstack]
  4511                           	line	14
  4512                           	
  4513                           l1867:	
  4514  0F85                     ;LCD.c: 14: PORTDbits.RD7 = 1;
  4515                           	bcf	status, 5	;RP0=0, select bank0
  4516  0F85  1283               	bcf	status, 6	;RP1=0, select bank0
  4517  0F86  1303               	bsf	(8),7	;volatile
  4518  0F87  1788               	line	15
  4519                           	
  4520                           l1869:	
  4521  0F88                     ;LCD.c: 15: delay(1);
  4522                           	movlw	01h
  4523  0F88  3001               	movwf	(delay@ms)
  4524  0F89  00CA               	movlw	0
  4525  0F8A  3000               	movwf	((delay@ms))+1
  4526  0F8B  00CB               	fcall	_delay
  4527  0F8C  120A  118A  2772  120A  158A  	line	16
  4528                           	
  4529                           l1871:	
  4530  0F91                     ;LCD.c: 16: PORTDbits.RD7 = 0;
  4531                           	bcf	status, 5	;RP0=0, select bank0
  4532  0F91  1283               	bcf	status, 6	;RP1=0, select bank0
  4533  0F92  1303               	bcf	(8),7	;volatile
  4534  0F93  1388               	line	17
  4535                           	
  4536                           l215:	
  4537  0F94                     	return
  4538  0F94  0008               	opt stack 0
  4539                           GLOBAL	__end_of_lcd_lat
  4540                           	__end_of_lcd_lat:
  4541  0F95                     	signat	_lcd_lat,89
  4542                           	global	_delay
  4543                           
  4544 ;; *************** function _delay *****************
  4545 ;; Defined at:
  4546 ;;		line 54 in file "LCD.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;  ms              2    0[BANK0 ] unsigned int 
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;  i               2    4[BANK0 ] unsigned int 
  4551 ;;  j               2    2[BANK0 ] unsigned int 
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  1    wreg      void 
  4554 ;; Registers used:
  4555 ;;		wreg, status,2
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4561 ;;      Params:         0       2       0       0       0
  4562 ;;      Locals:         0       4       0       0       0
  4563 ;;      Temps:          0       0       0       0       0
  4564 ;;      Totals:         0       6       0       0       0
  4565 ;;Total ram usage:        6 bytes
  4566 ;; Hardware stack levels used:    1
  4567 ;; Hardware stack levels required when called:    3
  4568 ;; This function calls:
  4569 ;;		Nothing
  4570 ;; This function is called by:
  4571 ;;		_lcd_lat
  4572 ;;		_lcd_ready
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  4576                           	line	54
  4577                           global __ptext12
  4578                           __ptext12:	;psect for function _delay
  4579  0772                     psect	text12
  4580                           	file	"LCD.c"
  4581                           	line	54
  4582                           	global	__size_of_delay
  4583                           	__size_of_delay	equ	__end_of_delay-_delay
  4584  0034                     	
  4585                           _delay:	
  4586  0772                     ;incstack = 0
  4587                           	opt	stack 1
  4588                           ; Regs used in _delay: [wreg+status,2]
  4589                           	line	57
  4590                           	
  4591                           l1855:	
  4592  0772                     ;LCD.c: 56: unsigned int i,j;;LCD.c: 57: for(i=0;i<=120;i++)
  4593                           	bcf	status, 5	;RP0=0, select bank0
  4594  0772  1283               	bcf	status, 6	;RP1=0, select bank0
  4595  0773  1303               	clrf	(delay@i)
  4596  0774  01CE               	clrf	(delay@i+1)
  4597  0775  01CF               	
  4598                           l1857:	
  4599  0776                     	movlw	0
  4600  0776  3000               	subwf	(delay@i+1),w
  4601  0777  024F               	movlw	079h
  4602  0778  3079               	skipnz
  4603  0779  1903               	subwf	(delay@i),w
  4604  077A  024E               	skipc
  4605  077B  1C03               	goto	u1491
  4606  077C  2F7E               	goto	u1490
  4607  077D  2F7F               u1491:
  4608  077E                     	goto	l1861
  4609  077E  2F81               u1490:
  4610  077F                     	goto	l234
  4611  077F  2FA5               	
  4612                           l1859:	
  4613  0780                     	goto	l234
  4614  0780  2FA5               	line	58
  4615                           	
  4616                           l229:	
  4617  0781                     	
  4618                           l1861:	
  4619  0781                     ;LCD.c: 58: for(j=0;j<=ms;j++);
  4620                           	clrf	(delay@j)
  4621  0781  01CC               	clrf	(delay@j+1)
  4622  0782  01CD               	goto	l231
  4623  0783  2F8A               	
  4624                           l232:	
  4625  0784                     	
  4626                           l1863:	
  4627  0784                     	movlw	01h
  4628  0784  3001               	addwf	(delay@j),f
  4629  0785  07CC               	skipnc
  4630  0786  1803               	incf	(delay@j+1),f
  4631  0787  0ACD               	movlw	0
  4632  0788  3000               	addwf	(delay@j+1),f
  4633  0789  07CD               	
  4634                           l231:	
  4635  078A                     	movf	(delay@j+1),w
  4636  078A  084D               	subwf	(delay@ms+1),w
  4637  078B  024B               	skipz
  4638  078C  1D03               	goto	u1505
  4639  078D  2F90               	movf	(delay@j),w
  4640  078E  084C               	subwf	(delay@ms),w
  4641  078F  024A               u1505:
  4642  0790                     	skipnc
  4643  0790  1803               	goto	u1501
  4644  0791  2F93               	goto	u1500
  4645  0792  2F94               u1501:
  4646  0793                     	goto	l1863
  4647  0793  2F84               u1500:
  4648  0794                     	goto	l1865
  4649  0794  2F95               	
  4650                           l233:	
  4651  0795                     	line	57
  4652                           	
  4653                           l1865:	
  4654  0795                     	movlw	01h
  4655  0795  3001               	addwf	(delay@i),f
  4656  0796  07CE               	skipnc
  4657  0797  1803               	incf	(delay@i+1),f
  4658  0798  0ACF               	movlw	0
  4659  0799  3000               	addwf	(delay@i+1),f
  4660  079A  07CF               	movlw	0
  4661  079B  3000               	subwf	(delay@i+1),w
  4662  079C  024F               	movlw	079h
  4663  079D  3079               	skipnz
  4664  079E  1903               	subwf	(delay@i),w
  4665  079F  024E               	skipc
  4666  07A0  1C03               	goto	u1511
  4667  07A1  2FA3               	goto	u1510
  4668  07A2  2FA4               u1511:
  4669  07A3                     	goto	l1861
  4670  07A3  2F81               u1510:
  4671  07A4                     	goto	l234
  4672  07A4  2FA5               	
  4673                           l230:	
  4674  07A5                     	line	59
  4675                           	
  4676                           l234:	
  4677  07A5                     	return
  4678  07A5  0008               	opt stack 0
  4679                           GLOBAL	__end_of_delay
  4680                           	__end_of_delay:
  4681  07A6                     	signat	_delay,4217
  4682                           	global	_config
  4683                           
  4684 ;; *************** function _config *****************
  4685 ;; Defined at:
  4686 ;;		line 12 in file "USART1.c"
  4687 ;; Parameters:    Size  Location     Type
  4688 ;;		None
  4689 ;; Auto vars:     Size  Location     Type
  4690 ;;		None
  4691 ;; Return value:  Size  Location     Type
  4692 ;;                  1    wreg      void 
  4693 ;; Registers used:
  4694 ;;		wreg, status,2
  4695 ;; Tracked objects:
  4696 ;;		On entry : 0/0
  4697 ;;		On exit  : 0/0
  4698 ;;		Unchanged: 0/0
  4699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4700 ;;      Params:         0       0       0       0       0
  4701 ;;      Locals:         0       0       0       0       0
  4702 ;;      Temps:          0       0       0       0       0
  4703 ;;      Totals:         0       0       0       0       0
  4704 ;;Total ram usage:        0 bytes
  4705 ;; Hardware stack levels used:    1
  4706 ;; Hardware stack levels required when called:    3
  4707 ;; This function calls:
  4708 ;;		Nothing
  4709 ;; This function is called by:
  4710 ;;		_main
  4711 ;; This function uses a non-reentrant model
  4712 ;;
  4713                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  4714                           	file	"USART1.c"
  4715                           	line	12
  4716                           global __ptext13
  4717                           __ptext13:	;psect for function _config
  4718  0FA7                     psect	text13
  4719                           	file	"USART1.c"
  4720                           	line	12
  4721                           	global	__size_of_config
  4722                           	__size_of_config	equ	__end_of_config-_config
  4723  0014                     	
  4724                           _config:	
  4725  0FA7                     ;incstack = 0
  4726                           	opt	stack 4
  4727                           ; Regs used in _config: [wreg+status,2]
  4728                           	line	13
  4729                           	
  4730                           l1995:	
  4731  0FA7                     ;USART1.c: 13: TXSTAbits.SYNC = 0;
  4732                           	bsf	status, 5	;RP0=1, select bank1
  4733  0FA7  1683               	bcf	status, 6	;RP1=0, select bank1
  4734  0FA8  1303               	bcf	(152)^080h,4	;volatile
  4735  0FA9  1218               	line	14
  4736                           ;USART1.c: 14: TXSTAbits.BRGH = 0;
  4737                           	bcf	(152)^080h,2	;volatile
  4738  0FAA  1118               	line	15
  4739                           ;USART1.c: 15: BAUDCTLbits.BRG16 = 1;
  4740                           	bsf	status, 5	;RP0=1, select bank3
  4741  0FAB  1683               	bsf	status, 6	;RP1=1, select bank3
  4742  0FAC  1703               	bsf	(391)^0180h,3	;volatile
  4743  0FAD  1587               	line	16
  4744                           	
  4745                           l1997:	
  4746  0FAE                     ;USART1.c: 16: SPBRG = 25;
  4747                           	movlw	low(019h)
  4748  0FAE  3019               	bsf	status, 5	;RP0=1, select bank1
  4749  0FAF  1683               	bcf	status, 6	;RP1=0, select bank1
  4750  0FB0  1303               	movwf	(153)^080h	;volatile
  4751  0FB1  0099               	line	17
  4752                           	
  4753                           l1999:	
  4754  0FB2                     ;USART1.c: 17: SPBRGH = 0;
  4755                           	clrf	(154)^080h	;volatile
  4756  0FB2  019A               	line	18
  4757                           	
  4758                           l2001:	
  4759  0FB3                     ;USART1.c: 18: RCSTAbits.SPEN = 1;
  4760                           	bcf	status, 5	;RP0=0, select bank0
  4761  0FB3  1283               	bcf	status, 6	;RP1=0, select bank0
  4762  0FB4  1303               	bsf	(24),7	;volatile
  4763  0FB5  1798               	line	19
  4764                           	
  4765                           l2003:	
  4766  0FB6                     ;USART1.c: 19: RCSTAbits.CREN = 1;
  4767                           	bsf	(24),4	;volatile
  4768  0FB6  1618               	line	20
  4769                           	
  4770                           l2005:	
  4771  0FB7                     ;USART1.c: 20: TXSTAbits.TXEN = 1;
  4772                           	bsf	status, 5	;RP0=1, select bank1
  4773  0FB7  1683               	bcf	status, 6	;RP1=0, select bank1
  4774  0FB8  1303               	bsf	(152)^080h,5	;volatile
  4775  0FB9  1698               	line	21
  4776                           	
  4777                           l15:	
  4778  0FBA                     	return
  4779  0FBA  0008               	opt stack 0
  4780                           GLOBAL	__end_of_config
  4781                           	__end_of_config:
  4782  0FBB                     	signat	_config,89
  4783                           	global	___awdiv
  4784                           
  4785 ;; *************** function ___awdiv *****************
  4786 ;; Defined at:
  4787 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;  divisor         2    0[BANK0 ] int 
  4790 ;;  dividend        2    2[BANK0 ] int 
  4791 ;; Auto vars:     Size  Location     Type
  4792 ;;  quotient        2    7[BANK0 ] int 
  4793 ;;  sign            1    6[BANK0 ] unsigned char 
  4794 ;;  counter         1    5[BANK0 ] unsigned char 
  4795 ;; Return value:  Size  Location     Type
  4796 ;;                  2    0[BANK0 ] int 
  4797 ;; Registers used:
  4798 ;;		wreg, status,2, status,0
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4804 ;;      Params:         0       4       0       0       0
  4805 ;;      Locals:         0       4       0       0       0
  4806 ;;      Temps:          0       1       0       0       0
  4807 ;;      Totals:         0       9       0       0       0
  4808 ;;Total ram usage:        9 bytes
  4809 ;; Hardware stack levels used:    1
  4810 ;; Hardware stack levels required when called:    3
  4811 ;; This function calls:
  4812 ;;		Nothing
  4813 ;; This function is called by:
  4814 ;;		_main
  4815 ;; This function uses a non-reentrant model
  4816 ;;
  4817                           psect	text14,local,class=CODE,delta=2,merge=1,group=1
  4818                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  4819                           	line	5
  4820                           global __ptext14
  4821                           __ptext14:	;psect for function ___awdiv
  4822  0540                     psect	text14
  4823                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  4824                           	line	5
  4825                           	global	__size_of___awdiv
  4826                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  4827  0073                     	
  4828                           ___awdiv:	
  4829  0540                     ;incstack = 0
  4830                           	opt	stack 4
  4831                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4832                           	line	13
  4833                           	
  4834                           l2125:	
  4835  0540                     	bcf	status, 5	;RP0=0, select bank0
  4836  0540  1283               	bcf	status, 6	;RP1=0, select bank0
  4837  0541  1303               	clrf	(___awdiv@sign)
  4838  0542  01D0               	line	14
  4839                           	
  4840                           l2127:	
  4841  0543                     	btfss	(___awdiv@divisor+1),7
  4842  0543  1FCB               	goto	u1911
  4843  0544  2D46               	goto	u1910
  4844  0545  2D47               u1911:
  4845  0546                     	goto	l2133
  4846  0546  2D4F               u1910:
  4847  0547                     	line	15
  4848                           	
  4849                           l2129:	
  4850  0547                     	comf	(___awdiv@divisor),f
  4851  0547  09CA               	comf	(___awdiv@divisor+1),f
  4852  0548  09CB               	incf	(___awdiv@divisor),f
  4853  0549  0ACA               	skipnz
  4854  054A  1903               	incf	(___awdiv@divisor+1),f
  4855  054B  0ACB               	line	16
  4856                           	
  4857                           l2131:	
  4858  054C                     	clrf	(___awdiv@sign)
  4859  054C  01D0               	incf	(___awdiv@sign),f
  4860  054D  0AD0               	goto	l2133
  4861  054E  2D4F               	line	17
  4862                           	
  4863                           l520:	
  4864  054F                     	line	18
  4865                           	
  4866                           l2133:	
  4867  054F                     	btfss	(___awdiv@dividend+1),7
  4868  054F  1FCD               	goto	u1921
  4869  0550  2D52               	goto	u1920
  4870  0551  2D53               u1921:
  4871  0552                     	goto	l2139
  4872  0552  2D5D               u1920:
  4873  0553                     	line	19
  4874                           	
  4875                           l2135:	
  4876  0553                     	comf	(___awdiv@dividend),f
  4877  0553  09CC               	comf	(___awdiv@dividend+1),f
  4878  0554  09CD               	incf	(___awdiv@dividend),f
  4879  0555  0ACC               	skipnz
  4880  0556  1903               	incf	(___awdiv@dividend+1),f
  4881  0557  0ACD               	line	20
  4882                           	
  4883                           l2137:	
  4884  0558                     	movlw	low(01h)
  4885  0558  3001               	movwf	(??___awdiv+0)+0
  4886  0559  00CE               	movf	(??___awdiv+0)+0,w
  4887  055A  084E               	xorwf	(___awdiv@sign),f
  4888  055B  06D0               	goto	l2139
  4889  055C  2D5D               	line	21
  4890                           	
  4891                           l521:	
  4892  055D                     	line	22
  4893                           	
  4894                           l2139:	
  4895  055D                     	clrf	(___awdiv@quotient)
  4896  055D  01D1               	clrf	(___awdiv@quotient+1)
  4897  055E  01D2               	line	23
  4898                           	
  4899                           l2141:	
  4900  055F                     	movf	((___awdiv@divisor)),w
  4901  055F  084A               iorwf	((___awdiv@divisor+1)),w
  4902  0560  044B               	btfsc	status,2
  4903  0561  1903               	goto	u1931
  4904  0562  2D64               	goto	u1930
  4905  0563  2D65               u1931:
  4906  0564                     	goto	l2161
  4907  0564  2DA2               u1930:
  4908  0565                     	line	24
  4909                           	
  4910                           l2143:	
  4911  0565                     	clrf	(___awdiv@counter)
  4912  0565  01CF               	incf	(___awdiv@counter),f
  4913  0566  0ACF               	line	25
  4914                           	goto	l2149
  4915  0567  2D74               	
  4916                           l524:	
  4917  0568                     	line	26
  4918                           	
  4919                           l2145:	
  4920  0568                     	movlw	01h
  4921  0568  3001               	
  4922                           u1945:
  4923  0569                     	clrc
  4924  0569  1003               	rlf	(___awdiv@divisor),f
  4925  056A  0DCA               	rlf	(___awdiv@divisor+1),f
  4926  056B  0DCB               	addlw	-1
  4927  056C  3EFF               	skipz
  4928  056D  1D03               	goto	u1945
  4929  056E  2D69               	line	27
  4930                           	
  4931                           l2147:	
  4932  056F                     	movlw	low(01h)
  4933  056F  3001               	movwf	(??___awdiv+0)+0
  4934  0570  00CE               	movf	(??___awdiv+0)+0,w
  4935  0571  084E               	addwf	(___awdiv@counter),f
  4936  0572  07CF               	goto	l2149
  4937  0573  2D74               	line	28
  4938                           	
  4939                           l523:	
  4940  0574                     	line	25
  4941                           	
  4942                           l2149:	
  4943  0574                     	btfss	(___awdiv@divisor+1),(15)&7
  4944  0574  1FCB               	goto	u1951
  4945  0575  2D77               	goto	u1950
  4946  0576  2D78               u1951:
  4947  0577                     	goto	l2145
  4948  0577  2D68               u1950:
  4949  0578                     	goto	l2151
  4950  0578  2D7A               	
  4951                           l525:	
  4952  0579                     	goto	l2151
  4953  0579  2D7A               	line	29
  4954                           	
  4955                           l526:	
  4956  057A                     	line	30
  4957                           	
  4958                           l2151:	
  4959  057A                     	movlw	01h
  4960  057A  3001               	
  4961                           u1965:
  4962  057B                     	clrc
  4963  057B  1003               	rlf	(___awdiv@quotient),f
  4964  057C  0DD1               	rlf	(___awdiv@quotient+1),f
  4965  057D  0DD2               	addlw	-1
  4966  057E  3EFF               	skipz
  4967  057F  1D03               	goto	u1965
  4968  0580  2D7B               	line	31
  4969                           	movf	(___awdiv@divisor+1),w
  4970  0581  084B               	subwf	(___awdiv@dividend+1),w
  4971  0582  024D               	skipz
  4972  0583  1D03               	goto	u1975
  4973  0584  2D87               	movf	(___awdiv@divisor),w
  4974  0585  084A               	subwf	(___awdiv@dividend),w
  4975  0586  024C               u1975:
  4976  0587                     	skipc
  4977  0587  1C03               	goto	u1971
  4978  0588  2D8A               	goto	u1970
  4979  0589  2D8B               u1971:
  4980  058A                     	goto	l2157
  4981  058A  2D93               u1970:
  4982  058B                     	line	32
  4983                           	
  4984                           l2153:	
  4985  058B                     	movf	(___awdiv@divisor),w
  4986  058B  084A               	subwf	(___awdiv@dividend),f
  4987  058C  02CC               	movf	(___awdiv@divisor+1),w
  4988  058D  084B               	skipc
  4989  058E  1C03               	decf	(___awdiv@dividend+1),f
  4990  058F  03CD               	subwf	(___awdiv@dividend+1),f
  4991  0590  02CD               	line	33
  4992                           	
  4993                           l2155:	
  4994  0591                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  4995  0591  1451               	goto	l2157
  4996  0592  2D93               	line	34
  4997                           	
  4998                           l527:	
  4999  0593                     	line	35
  5000                           	
  5001                           l2157:	
  5002  0593                     	movlw	01h
  5003  0593  3001               	
  5004                           u1985:
  5005  0594                     	clrc
  5006  0594  1003               	rrf	(___awdiv@divisor+1),f
  5007  0595  0CCB               	rrf	(___awdiv@divisor),f
  5008  0596  0CCA               	addlw	-1
  5009  0597  3EFF               	skipz
  5010  0598  1D03               	goto	u1985
  5011  0599  2D94               	line	36
  5012                           	
  5013                           l2159:	
  5014  059A                     	movlw	01h
  5015  059A  3001               	subwf	(___awdiv@counter),f
  5016  059B  02CF               	btfss	status,2
  5017  059C  1D03               	goto	u1991
  5018  059D  2D9F               	goto	u1990
  5019  059E  2DA0               u1991:
  5020  059F                     	goto	l2151
  5021  059F  2D7A               u1990:
  5022  05A0                     	goto	l2161
  5023  05A0  2DA2               	
  5024                           l528:	
  5025  05A1                     	goto	l2161
  5026  05A1  2DA2               	line	37
  5027                           	
  5028                           l522:	
  5029  05A2                     	line	38
  5030                           	
  5031                           l2161:	
  5032  05A2                     	movf	((___awdiv@sign)),w
  5033  05A2  0850               	btfsc	status,2
  5034  05A3  1903               	goto	u2001
  5035  05A4  2DA6               	goto	u2000
  5036  05A5  2DA7               u2001:
  5037  05A6                     	goto	l2165
  5038  05A6  2DAD               u2000:
  5039  05A7                     	line	39
  5040                           	
  5041                           l2163:	
  5042  05A7                     	comf	(___awdiv@quotient),f
  5043  05A7  09D1               	comf	(___awdiv@quotient+1),f
  5044  05A8  09D2               	incf	(___awdiv@quotient),f
  5045  05A9  0AD1               	skipnz
  5046  05AA  1903               	incf	(___awdiv@quotient+1),f
  5047  05AB  0AD2               	goto	l2165
  5048  05AC  2DAD               	
  5049                           l529:	
  5050  05AD                     	line	40
  5051                           	
  5052                           l2165:	
  5053  05AD                     	movf	(___awdiv@quotient+1),w
  5054  05AD  0852               	movwf	(?___awdiv+1)
  5055  05AE  00CB               	movf	(___awdiv@quotient),w
  5056  05AF  0851               	movwf	(?___awdiv)
  5057  05B0  00CA               	goto	l530
  5058  05B1  2DB2               	
  5059                           l2167:	
  5060  05B2                     	line	41
  5061                           	
  5062                           l530:	
  5063  05B2                     	return
  5064  05B2  0008               	opt stack 0
  5065                           GLOBAL	__end_of___awdiv
  5066                           	__end_of___awdiv:
  5067  05B3                     	signat	___awdiv,8314
  5068                           	global	_LCD_STRING
  5069                           
  5070 ;; *************** function _LCD_STRING *****************
  5071 ;; Defined at:
  5072 ;;		line 98 in file "LCD.c"
  5073 ;; Parameters:    Size  Location     Type
  5074 ;;  a               2    2[BANK0 ] PTR unsigned char 
  5075 ;;		 -> valor(16), valor1(16), STR_2(16), STR_1(12), 
  5076 ;; Auto vars:     Size  Location     Type
  5077 ;;  n               2    7[BANK0 ] int 
  5078 ;; Return value:  Size  Location     Type
  5079 ;;                  1    wreg      void 
  5080 ;; Registers used:
  5081 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5082 ;; Tracked objects:
  5083 ;;		On entry : 0/0
  5084 ;;		On exit  : 0/0
  5085 ;;		Unchanged: 0/0
  5086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5087 ;;      Params:         0       2       0       0       0
  5088 ;;      Locals:         0       2       0       0       0
  5089 ;;      Temps:          0       3       0       0       0
  5090 ;;      Totals:         0       7       0       0       0
  5091 ;;Total ram usage:        7 bytes
  5092 ;; Hardware stack levels used:    1
  5093 ;; Hardware stack levels required when called:    4
  5094 ;; This function calls:
  5095 ;;		_LCD_CHAR
  5096 ;; This function is called by:
  5097 ;;		_main
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  5101                           	file	"LCD.c"
  5102                           	line	98
  5103                           global __ptext15
  5104                           __ptext15:	;psect for function _LCD_STRING
  5105  06B0                     psect	text15
  5106                           	file	"LCD.c"
  5107                           	line	98
  5108                           	global	__size_of_LCD_STRING
  5109                           	__size_of_LCD_STRING	equ	__end_of_LCD_STRING-_LCD_STRING
  5110  0048                     	
  5111                           _LCD_STRING:	
  5112  06B0                     ;incstack = 0
  5113                           	opt	stack 3
  5114                           ; Regs used in _LCD_STRING: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5115                           	line	101
  5116                           	
  5117                           l2023:	
  5118  06B0                     ;LCD.c: 100: int n;;LCD.c: 101: for(n = 0; a[n] != '\0'; n++){
  5119                           	bcf	status, 5	;RP0=0, select bank0
  5120  06B0  1283               	bcf	status, 6	;RP1=0, select bank0
  5121  06B1  1303               	clrf	(LCD_STRING@n)
  5122  06B2  01D1               	clrf	(LCD_STRING@n+1)
  5123  06B3  01D2               	goto	l2029
  5124  06B4  2EDA               	
  5125                           l250:	
  5126  06B5                     	line	102
  5127                           	
  5128                           l2025:	
  5129  06B5                     ;LCD.c: 102: LCD_CHAR(a[n]);
  5130                           	movf	(LCD_STRING@n),w
  5131  06B5  0851               	addwf	(LCD_STRING@a),w
  5132  06B6  074C               	movwf	(??_LCD_STRING+1)+0
  5133  06B7  00CF               	movf	(LCD_STRING@a+1),w
  5134  06B8  084D               	movwf	(??_LCD_STRING+0)+0
  5135  06B9  00CE               	skipnc
  5136  06BA  1803               	incf	(??_LCD_STRING+0)+0,f
  5137  06BB  0ACE               	btfss	(LCD_STRING@n),7
  5138  06BC  1FD1               	goto	u1720
  5139  06BD  2EBF               	decf	(??_LCD_STRING+0)+0,f
  5140  06BE  03CE               u1720:
  5141  06BF                     	bcf	status, 5	;RP0=0, select bank0
  5142  06BF  1283               	bcf	status, 6	;RP1=0, select bank0
  5143  06C0  1303               	movf	(??_LCD_STRING+0)+0,w
  5144  06C1  084E               	movwf	0+((??_LCD_STRING+1)+0)+1
  5145  06C2  00D0               	movf	1+(??_LCD_STRING+1)+0,w
  5146  06C3  0850               	movwf	btemp+1
  5147  06C4  00FF               	movf	0+(??_LCD_STRING+1)+0,w
  5148  06C5  084F               	movwf	fsr0
  5149  06C6  0084               	fcall	stringtab
  5150  06C7  120A  118A  2600  120A  118A  	fcall	_LCD_CHAR
  5151  06CC  120A  158A  2795  120A  118A  	line	101
  5152                           	
  5153                           l2027:	
  5154  06D1                     	movlw	01h
  5155  06D1  3001               	bcf	status, 5	;RP0=0, select bank0
  5156  06D2  1283               	bcf	status, 6	;RP1=0, select bank0
  5157  06D3  1303               	addwf	(LCD_STRING@n),f
  5158  06D4  07D1               	skipnc
  5159  06D5  1803               	incf	(LCD_STRING@n+1),f
  5160  06D6  0AD2               	movlw	0
  5161  06D7  3000               	addwf	(LCD_STRING@n+1),f
  5162  06D8  07D2               	goto	l2029
  5163  06D9  2EDA               	
  5164                           l249:	
  5165  06DA                     	
  5166                           l2029:	
  5167  06DA                     	movf	(LCD_STRING@n),w
  5168  06DA  0851               	addwf	(LCD_STRING@a),w
  5169  06DB  074C               	movwf	(??_LCD_STRING+1)+0
  5170  06DC  00CF               	movf	(LCD_STRING@a+1),w
  5171  06DD  084D               	movwf	(??_LCD_STRING+0)+0
  5172  06DE  00CE               	skipnc
  5173  06DF  1803               	incf	(??_LCD_STRING+0)+0,f
  5174  06E0  0ACE               	btfss	(LCD_STRING@n),7
  5175  06E1  1FD1               	goto	u1730
  5176  06E2  2EE4               	decf	(??_LCD_STRING+0)+0,f
  5177  06E3  03CE               u1730:
  5178  06E4                     	bcf	status, 5	;RP0=0, select bank0
  5179  06E4  1283               	bcf	status, 6	;RP1=0, select bank0
  5180  06E5  1303               	movf	(??_LCD_STRING+0)+0,w
  5181  06E6  084E               	movwf	0+((??_LCD_STRING+1)+0)+1
  5182  06E7  00D0               	movf	1+(??_LCD_STRING+1)+0,w
  5183  06E8  0850               	movwf	btemp+1
  5184  06E9  00FF               	movf	0+(??_LCD_STRING+1)+0,w
  5185  06EA  084F               	movwf	fsr0
  5186  06EB  0084               	fcall	stringtab
  5187  06EC  120A  118A  2600  120A  118A  	xorlw	0
  5188  06F1  3A00               	skipz
  5189  06F2  1D03               	goto	u1741
  5190  06F3  2EF5               	goto	u1740
  5191  06F4  2EF6               u1741:
  5192  06F5                     	goto	l2025
  5193  06F5  2EB5               u1740:
  5194  06F6                     	goto	l252
  5195  06F6  2EF7               	
  5196                           l251:	
  5197  06F7                     	line	104
  5198                           	
  5199                           l252:	
  5200  06F7                     	return
  5201  06F7  0008               	opt stack 0
  5202                           GLOBAL	__end_of_LCD_STRING
  5203                           	__end_of_LCD_STRING:
  5204  06F8                     	signat	_LCD_STRING,4217
  5205                           	global	_LCD_CHAR
  5206                           
  5207 ;; *************** function _LCD_CHAR *****************
  5208 ;; Defined at:
  5209 ;;		line 88 in file "LCD.c"
  5210 ;; Parameters:    Size  Location     Type
  5211 ;;  a               1    wreg     unsigned char 
  5212 ;; Auto vars:     Size  Location     Type
  5213 ;;  a               1    1[BANK0 ] unsigned char 
  5214 ;; Return value:  Size  Location     Type
  5215 ;;                  1    wreg      void 
  5216 ;; Registers used:
  5217 ;;		wreg
  5218 ;; Tracked objects:
  5219 ;;		On entry : 0/0
  5220 ;;		On exit  : 0/0
  5221 ;;		Unchanged: 0/0
  5222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5223 ;;      Params:         0       0       0       0       0
  5224 ;;      Locals:         0       1       0       0       0
  5225 ;;      Temps:          0       1       0       0       0
  5226 ;;      Totals:         0       2       0       0       0
  5227 ;;Total ram usage:        2 bytes
  5228 ;; Hardware stack levels used:    1
  5229 ;; Hardware stack levels required when called:    3
  5230 ;; This function calls:
  5231 ;;		Nothing
  5232 ;; This function is called by:
  5233 ;;		_LCD_STRING
  5234 ;; This function uses a non-reentrant model
  5235 ;;
  5236                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  5237                           	line	88
  5238                           global __ptext16
  5239                           __ptext16:	;psect for function _LCD_CHAR
  5240  0F95                     psect	text16
  5241                           	file	"LCD.c"
  5242                           	line	88
  5243                           	global	__size_of_LCD_CHAR
  5244                           	__size_of_LCD_CHAR	equ	__end_of_LCD_CHAR-_LCD_CHAR
  5245  0012                     	
  5246                           _LCD_CHAR:	
  5247  0F95                     ;incstack = 0
  5248                           	opt	stack 3
  5249                           ; Regs used in _LCD_CHAR: [wreg]
  5250                           ;LCD_CHAR@a stored from wreg
  5251                           	bcf	status, 5	;RP0=0, select bank0
  5252  0F95  1283               	bcf	status, 6	;RP1=0, select bank0
  5253  0F96  1303               	movwf	(LCD_CHAR@a)
  5254  0F97  00CB               	line	90
  5255                           	
  5256                           l1913:	
  5257  0F98                     ;LCD.c: 90: PORTDbits.RD5 = 1;
  5258                           	bsf	(8),5	;volatile
  5259  0F98  1688               	line	92
  5260                           	
  5261                           l1915:	
  5262  0F99                     ;LCD.c: 92: PORTB = a;
  5263                           	movf	(LCD_CHAR@a),w
  5264  0F99  084B               	movwf	(6)	;volatile
  5265  0F9A  0086               	line	93
  5266                           	
  5267                           l1917:	
  5268  0F9B                     ;LCD.c: 93: PORTDbits.RD7 = 1;
  5269                           	bsf	(8),7	;volatile
  5270  0F9B  1788               	line	94
  5271                           ;LCD.c: 94: _delay((unsigned long)((40)*(4000000/4000000.0)));
  5272                           	opt asmopt_push
  5273                           opt asmopt_off
  5274                           	movlw	12
  5275  0F9C  300C               	bcf	status, 5	;RP0=0, select bank0
  5276  0F9D  1283               	bcf	status, 6	;RP1=0, select bank0
  5277  0F9E  1303               movwf	((??_LCD_CHAR+0)+0),f
  5278  0F9F  00CA               	u2177:
  5279  0FA0                     decfsz	(??_LCD_CHAR+0)+0,f
  5280  0FA0  0BCA               	goto	u2177
  5281  0FA1  2FA0               	nop
  5282  0FA2  0000               opt asmopt_pop
  5283                           
  5284                           	line	95
  5285                           	
  5286                           l1919:	
  5287  0FA3                     ;LCD.c: 95: PORTDbits.RD7 = 0;
  5288                           	bcf	status, 5	;RP0=0, select bank0
  5289  0FA3  1283               	bcf	status, 6	;RP1=0, select bank0
  5290  0FA4  1303               	bcf	(8),7	;volatile
  5291  0FA5  1388               	line	96
  5292                           	
  5293                           l246:	
  5294  0FA6                     	return
  5295  0FA6  0008               	opt stack 0
  5296                           GLOBAL	__end_of_LCD_CHAR
  5297                           	__end_of_LCD_CHAR:
  5298  0FA7                     	signat	_LCD_CHAR,4217
  5299                           	global	_LCD_CURSOR
  5300                           
  5301 ;; *************** function _LCD_CURSOR *****************
  5302 ;; Defined at:
  5303 ;;		line 71 in file "LCD.c"
  5304 ;; Parameters:    Size  Location     Type
  5305 ;;  a               2    4[BANK0 ] int 
  5306 ;;  b               2    6[BANK0 ] int 
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;  d               2    8[BANK0 ] int 
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  1    wreg      void 
  5311 ;; Registers used:
  5312 ;;		wreg, status,2, status,0, pclath, cstack
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5318 ;;      Params:         0       4       0       0       0
  5319 ;;      Locals:         0       2       0       0       0
  5320 ;;      Temps:          0       0       0       0       0
  5321 ;;      Totals:         0       6       0       0       0
  5322 ;;Total ram usage:        6 bytes
  5323 ;; Hardware stack levels used:    1
  5324 ;; Hardware stack levels required when called:    4
  5325 ;; This function calls:
  5326 ;;		_LCD_DATO
  5327 ;; This function is called by:
  5328 ;;		_main
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  5332                           	line	71
  5333                           global __ptext17
  5334                           __ptext17:	;psect for function _LCD_CURSOR
  5335  073B                     psect	text17
  5336                           	file	"LCD.c"
  5337                           	line	71
  5338                           	global	__size_of_LCD_CURSOR
  5339                           	__size_of_LCD_CURSOR	equ	__end_of_LCD_CURSOR-_LCD_CURSOR
  5340  0037                     	
  5341                           _LCD_CURSOR:	
  5342  073B                     ;incstack = 0
  5343                           	opt	stack 3
  5344                           ; Regs used in _LCD_CURSOR: [wreg+status,2+status,0+pclath+cstack]
  5345                           	line	74
  5346                           	
  5347                           l2113:	
  5348  073B                     ;LCD.c: 73: int d;;LCD.c: 74: if(a == 1)
  5349                           	bcf	status, 5	;RP0=0, select bank0
  5350  073B  1283               	bcf	status, 6	;RP1=0, select bank0
  5351  073C  1303               		decf	((LCD_CURSOR@a)),w
  5352  073D  034E               iorwf	((LCD_CURSOR@a+1)),w
  5353  073E  044F               	btfss	status,2
  5354  073F  1D03               	goto	u1891
  5355  0740  2F42               	goto	u1890
  5356  0741  2F43               u1891:
  5357  0742                     	goto	l2119
  5358  0742  2F55               u1890:
  5359  0743                     	line	76
  5360                           	
  5361                           l2115:	
  5362  0743                     ;LCD.c: 75: {;LCD.c: 76: d = 0x80 + b - 1;
  5363                           	movf	(LCD_CURSOR@b),w
  5364  0743  0850               	addlw	low(07Fh)
  5365  0744  3E7F               	movwf	(LCD_CURSOR@d)
  5366  0745  00D2               	movf	(LCD_CURSOR@b+1),w
  5367  0746  0851               	skipnc
  5368  0747  1803               	addlw	1
  5369  0748  3E01               	addlw	high(07Fh)
  5370  0749  3E00               	movwf	1+(LCD_CURSOR@d)
  5371  074A  00D3               	line	77
  5372                           	
  5373                           l2117:	
  5374  074B                     ;LCD.c: 77: LCD_DATO(d);
  5375                           	movf	(LCD_CURSOR@d+1),w
  5376  074B  0853               	movwf	(LCD_DATO@var+1)
  5377  074C  00CB               	movf	(LCD_CURSOR@d),w
  5378  074D  0852               	movwf	(LCD_DATO@var)
  5379  074E  00CA               	fcall	_LCD_DATO
  5380  074F  120A  118A  27D3  120A  118A  	line	78
  5381                           ;LCD.c: 78: }
  5382                           	goto	l243
  5383  0754  2F71               	line	79
  5384                           	
  5385                           l240:	
  5386  0755                     	
  5387                           l2119:	
  5388  0755                     ;LCD.c: 79: else if(a == 2)
  5389                           		movlw	2
  5390  0755  3002               	bcf	status, 5	;RP0=0, select bank0
  5391  0756  1283               	bcf	status, 6	;RP1=0, select bank0
  5392  0757  1303               	xorwf	((LCD_CURSOR@a)),w
  5393  0758  064E               iorwf	((LCD_CURSOR@a+1)),w
  5394  0759  044F               	btfss	status,2
  5395  075A  1D03               	goto	u1901
  5396  075B  2F5D               	goto	u1900
  5397  075C  2F5E               u1901:
  5398  075D                     	goto	l243
  5399  075D  2F71               u1900:
  5400  075E                     	line	81
  5401                           	
  5402                           l2121:	
  5403  075E                     ;LCD.c: 80: {;LCD.c: 81: d = 0xC0 + b - 1;
  5404                           	movf	(LCD_CURSOR@b),w
  5405  075E  0850               	addlw	low(0BFh)
  5406  075F  3EBF               	movwf	(LCD_CURSOR@d)
  5407  0760  00D2               	movf	(LCD_CURSOR@b+1),w
  5408  0761  0851               	skipnc
  5409  0762  1803               	addlw	1
  5410  0763  3E01               	addlw	high(0BFh)
  5411  0764  3E00               	movwf	1+(LCD_CURSOR@d)
  5412  0765  00D3               	line	82
  5413                           	
  5414                           l2123:	
  5415  0766                     ;LCD.c: 82: LCD_DATO(d);
  5416                           	movf	(LCD_CURSOR@d+1),w
  5417  0766  0853               	movwf	(LCD_DATO@var+1)
  5418  0767  00CB               	movf	(LCD_CURSOR@d),w
  5419  0768  0852               	movwf	(LCD_DATO@var)
  5420  0769  00CA               	fcall	_LCD_DATO
  5421  076A  120A  118A  27D3  120A  118A  	goto	l243
  5422  076F  2F71               	line	83
  5423                           	
  5424                           l242:	
  5425  0770                     	goto	l243
  5426  0770  2F71               	line	84
  5427                           	
  5428                           l241:	
  5429  0771                     	
  5430                           l243:	
  5431  0771                     	return
  5432  0771  0008               	opt stack 0
  5433                           GLOBAL	__end_of_LCD_CURSOR
  5434                           	__end_of_LCD_CURSOR:
  5435  0772                     	signat	_LCD_CURSOR,8313
  5436                           	global	_LCD_DATO
  5437                           
  5438 ;; *************** function _LCD_DATO *****************
  5439 ;; Defined at:
  5440 ;;		line 61 in file "LCD.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;  var             2    0[BANK0 ] int 
  5443 ;; Auto vars:     Size  Location     Type
  5444 ;;		None
  5445 ;; Return value:  Size  Location     Type
  5446 ;;                  1    wreg      void 
  5447 ;; Registers used:
  5448 ;;		wreg
  5449 ;; Tracked objects:
  5450 ;;		On entry : 0/0
  5451 ;;		On exit  : 0/0
  5452 ;;		Unchanged: 0/0
  5453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5454 ;;      Params:         0       2       0       0       0
  5455 ;;      Locals:         0       0       0       0       0
  5456 ;;      Temps:          0       2       0       0       0
  5457 ;;      Totals:         0       4       0       0       0
  5458 ;;Total ram usage:        4 bytes
  5459 ;; Hardware stack levels used:    1
  5460 ;; Hardware stack levels required when called:    3
  5461 ;; This function calls:
  5462 ;;		Nothing
  5463 ;; This function is called by:
  5464 ;;		_main
  5465 ;;		_LCD_CURSOR
  5466 ;; This function uses a non-reentrant model
  5467 ;;
  5468                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  5469                           	line	61
  5470                           global __ptext18
  5471                           __ptext18:	;psect for function _LCD_DATO
  5472  07D3                     psect	text18
  5473                           	file	"LCD.c"
  5474                           	line	61
  5475                           	global	__size_of_LCD_DATO
  5476                           	__size_of_LCD_DATO	equ	__end_of_LCD_DATO-_LCD_DATO
  5477  002D                     	
  5478                           _LCD_DATO:	
  5479  07D3                     ;incstack = 0
  5480                           	opt	stack 4
  5481                           ; Regs used in _LCD_DATO: [wreg]
  5482                           	line	62
  5483                           	
  5484                           l1895:	
  5485  07D3                     ;LCD.c: 62: PORTDbits.RD5 = 0;
  5486                           	bcf	status, 5	;RP0=0, select bank0
  5487  07D3  1283               	bcf	status, 6	;RP1=0, select bank0
  5488  07D4  1303               	bcf	(8),5	;volatile
  5489  07D5  1288               	line	63
  5490                           	
  5491                           l1897:	
  5492  07D6                     ;LCD.c: 63: _delay((unsigned long)((5)*(4000000/4000.0)));
  5493                           	opt asmopt_push
  5494                           opt asmopt_off
  5495                           movlw	7
  5496  07D6  3007               	bcf	status, 5	;RP0=0, select bank0
  5497  07D7  1283               	bcf	status, 6	;RP1=0, select bank0
  5498  07D8  1303               movwf	((??_LCD_DATO+0)+0+1),f
  5499  07D9  00CD               	movlw	124
  5500  07DA  307C               movwf	((??_LCD_DATO+0)+0),f
  5501  07DB  00CC               	u2187:
  5502  07DC                     decfsz	((??_LCD_DATO+0)+0),f
  5503  07DC  0BCC               	goto	u2187
  5504  07DD  2FDC               	decfsz	((??_LCD_DATO+0)+0+1),f
  5505  07DE  0BCD               	goto	u2187
  5506  07DF  2FDC               	nop
  5507  07E0  0000               opt asmopt_pop
  5508                           
  5509                           	line	64
  5510                           	
  5511                           l1899:	
  5512  07E1                     ;LCD.c: 64: PORTDbits.RD7 = 1;
  5513                           	bcf	status, 5	;RP0=0, select bank0
  5514  07E1  1283               	bcf	status, 6	;RP1=0, select bank0
  5515  07E2  1303               	bsf	(8),7	;volatile
  5516  07E3  1788               	line	65
  5517                           ;LCD.c: 65: PORTB = var;
  5518                           	movf	(LCD_DATO@var),w
  5519  07E4  084A               	movwf	(6)	;volatile
  5520  07E5  0086               	line	66
  5521                           ;LCD.c: 66: _delay((unsigned long)((5)*(4000000/4000.0)));
  5522                           	opt asmopt_push
  5523                           opt asmopt_off
  5524                           movlw	7
  5525  07E6  3007               	bcf	status, 5	;RP0=0, select bank0
  5526  07E7  1283               	bcf	status, 6	;RP1=0, select bank0
  5527  07E8  1303               movwf	((??_LCD_DATO+0)+0+1),f
  5528  07E9  00CD               	movlw	124
  5529  07EA  307C               movwf	((??_LCD_DATO+0)+0),f
  5530  07EB  00CC               	u2197:
  5531  07EC                     decfsz	((??_LCD_DATO+0)+0),f
  5532  07EC  0BCC               	goto	u2197
  5533  07ED  2FEC               	decfsz	((??_LCD_DATO+0)+0+1),f
  5534  07EE  0BCD               	goto	u2197
  5535  07EF  2FEC               	nop
  5536  07F0  0000               opt asmopt_pop
  5537                           
  5538                           	line	67
  5539                           	
  5540                           l1901:	
  5541  07F1                     ;LCD.c: 67: PORTDbits.RD7 = 0;
  5542                           	bcf	status, 5	;RP0=0, select bank0
  5543  07F1  1283               	bcf	status, 6	;RP1=0, select bank0
  5544  07F2  1303               	bcf	(8),7	;volatile
  5545  07F3  1388               	line	68
  5546                           ;LCD.c: 68: _delay((unsigned long)((5)*(4000000/4000.0)));
  5547                           	opt asmopt_push
  5548                           opt asmopt_off
  5549                           movlw	7
  5550  07F4  3007               	bcf	status, 5	;RP0=0, select bank0
  5551  07F5  1283               	bcf	status, 6	;RP1=0, select bank0
  5552  07F6  1303               movwf	((??_LCD_DATO+0)+0+1),f
  5553  07F7  00CD               	movlw	124
  5554  07F8  307C               movwf	((??_LCD_DATO+0)+0),f
  5555  07F9  00CC               	u2207:
  5556  07FA                     decfsz	((??_LCD_DATO+0)+0),f
  5557  07FA  0BCC               	goto	u2207
  5558  07FB  2FFA               	decfsz	((??_LCD_DATO+0)+0+1),f
  5559  07FC  0BCD               	goto	u2207
  5560  07FD  2FFA               	nop
  5561  07FE  0000               opt asmopt_pop
  5562                           
  5563                           	line	69
  5564                           	
  5565                           l237:	
  5566  07FF                     	return
  5567  07FF  0008               	opt stack 0
  5568                           GLOBAL	__end_of_LCD_DATO
  5569                           	__end_of_LCD_DATO:
  5570  0800                     	signat	_LCD_DATO,4217
  5571                           	global	_isr
  5572                           
  5573 ;; *************** function _isr *****************
  5574 ;; Defined at:
  5575 ;;		line 37 in file "Prin-Raspi.c"
  5576 ;; Parameters:    Size  Location     Type
  5577 ;;		None
  5578 ;; Auto vars:     Size  Location     Type
  5579 ;;		None
  5580 ;; Return value:  Size  Location     Type
  5581 ;;                  1    wreg      void 
  5582 ;; Registers used:
  5583 ;;		wreg, status,2, status,0, pclath, cstack
  5584 ;; Tracked objects:
  5585 ;;		On entry : 0/0
  5586 ;;		On exit  : 0/0
  5587 ;;		Unchanged: 0/0
  5588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5589 ;;      Params:         0       0       0       0       0
  5590 ;;      Locals:         0       0       0       0       0
  5591 ;;      Temps:          4       0       0       0       0
  5592 ;;      Totals:         4       0       0       0       0
  5593 ;;Total ram usage:        4 bytes
  5594 ;; Hardware stack levels used:    1
  5595 ;; Hardware stack levels required when called:    2
  5596 ;; This function calls:
  5597 ;;		_spiRead
  5598 ;;		_spiWrite
  5599 ;; This function is called by:
  5600 ;;		Interrupt level 1
  5601 ;; This function uses a non-reentrant model
  5602 ;;
  5603                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  5604                           	file	"Prin-Raspi.c"
  5605                           	line	37
  5606                           global __ptext19
  5607                           __ptext19:	;psect for function _isr
  5608  044F                     psect	text19
  5609                           	file	"Prin-Raspi.c"
  5610                           	line	37
  5611                           	global	__size_of_isr
  5612                           	__size_of_isr	equ	__end_of_isr-_isr
  5613  00F1                     	
  5614                           _isr:	
  5615  044F                     ;incstack = 0
  5616                           	opt	stack 1
  5617                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  5618                           psect	intentry,class=CODE,delta=2
  5619                           global __pintentry
  5620                           __pintentry:
  5621  0004                     global interrupt_function
  5622                           interrupt_function:
  5623  0004                     	global saved_w
  5624                           	saved_w	set	btemp+0
  5625  007E                     	movwf	saved_w
  5626  0004  00FE               	swapf	status,w
  5627  0005  0E03               	movwf	(??_isr+2)
  5628  0006  00FA               	movf	pclath,w
  5629  0007  080A               	movwf	(??_isr+3)
  5630  0008  00FB               	ljmp	_isr
  5631  0009  120A  118A  2C4F   psect	text19
  5632                           	line	38
  5633                           	
  5634                           i1l1689:	
  5635  044F                     ;Prin-Raspi.c: 38: if(SSPIF == 1){
  5636                           	bcf	status, 5	;RP0=0, select bank0
  5637  044F  1283               	bcf	status, 6	;RP1=0, select bank0
  5638  0450  1303               	btfss	(99/8),(99)&7	;volatile
  5639  0451  1D8C               	goto	u128_21
  5640  0452  2C54               	goto	u128_20
  5641  0453  2C55               u128_21:
  5642  0454                     	goto	i1l137
  5643  0454  2D39               u128_20:
  5644  0455                     	line	39
  5645                           	
  5646                           i1l1691:	
  5647  0455                     ;Prin-Raspi.c: 39: lectura = spiRead();
  5648                           	fcall	_spiRead
  5649  0455  120A  158A  277B  120A  118A  	movwf	(??_isr+0)+0
  5650  045A  00F8               	clrf	(??_isr+0)+0+1
  5651  045B  01F9               	movf	0+(??_isr+0)+0,w
  5652  045C  0878               	movwf	(_lectura)
  5653  045D  00F0               	movf	1+(??_isr+0)+0,w
  5654  045E  0879               	movwf	(_lectura+1)
  5655  045F  00F1               	line	40
  5656                           	
  5657                           i1l1693:	
  5658  0460                     ;Prin-Raspi.c: 40: if (lectura == 1){
  5659                           		decf	((_lectura)),w
  5660  0460  0370               iorwf	((_lectura+1)),w
  5661  0461  0471               	btfss	status,2
  5662  0462  1D03               	goto	u129_21
  5663  0463  2C65               	goto	u129_20
  5664  0464  2C66               u129_21:
  5665  0465                     	goto	i1l1697
  5666  0465  2C71               u129_20:
  5667  0466                     	line	41
  5668                           	
  5669                           i1l1695:	
  5670  0466                     ;Prin-Raspi.c: 41: spiWrite(A*2);
  5671                           	clrc
  5672  0466  1003               	rlf	(_A),w
  5673  0467  0D74               	movwf	(spiWrite@dat)
  5674  0468  00F6               	rlf	(_A+1),w
  5675  0469  0D75               	movwf	1+(spiWrite@dat)
  5676  046A  00F7               	fcall	_spiWrite
  5677  046B  120A  158A  2765  120A  118A  	line	42
  5678                           ;Prin-Raspi.c: 42: }else if(lectura == 2){
  5679                           	goto	i1l1735
  5680  0470  2D35               	
  5681                           i1l117:	
  5682  0471                     	
  5683                           i1l1697:	
  5684  0471                     		movlw	2
  5685  0471  3002               	xorwf	((_lectura)),w
  5686  0472  0670               iorwf	((_lectura+1)),w
  5687  0473  0471               	btfss	status,2
  5688  0474  1D03               	goto	u130_21
  5689  0475  2C77               	goto	u130_20
  5690  0476  2C78               u130_21:
  5691  0477                     	goto	i1l1701
  5692  0477  2C83               u130_20:
  5693  0478                     	line	43
  5694                           	
  5695                           i1l1699:	
  5696  0478                     ;Prin-Raspi.c: 43: spiWrite(B*2);
  5697                           	clrc
  5698  0478  1003               	rlf	(_B),w
  5699  0479  0D72               	movwf	(spiWrite@dat)
  5700  047A  00F6               	rlf	(_B+1),w
  5701  047B  0D73               	movwf	1+(spiWrite@dat)
  5702  047C  00F7               	fcall	_spiWrite
  5703  047D  120A  158A  2765  120A  118A  	line	44
  5704                           ;Prin-Raspi.c: 44: }else if(lectura == 3){
  5705                           	goto	i1l1735
  5706  0482  2D35               	
  5707                           i1l119:	
  5708  0483                     	
  5709                           i1l1701:	
  5710  0483                     		movlw	3
  5711  0483  3003               	xorwf	((_lectura)),w
  5712  0484  0670               iorwf	((_lectura+1)),w
  5713  0485  0471               	btfss	status,2
  5714  0486  1D03               	goto	u131_21
  5715  0487  2C89               	goto	u131_20
  5716  0488  2C8A               u131_21:
  5717  0489                     	goto	i1l1705
  5718  0489  2C97               u131_20:
  5719  048A                     	line	45
  5720                           	
  5721                           i1l1703:	
  5722  048A                     ;Prin-Raspi.c: 45: spiWrite(C*2);
  5723                           	clrc
  5724  048A  1003               	bcf	status, 5	;RP0=0, select bank0
  5725  048B  1283               	bcf	status, 6	;RP1=0, select bank0
  5726  048C  1303               	rlf	(_C),w
  5727  048D  0D2E               	movwf	(spiWrite@dat)
  5728  048E  00F6               	rlf	(_C+1),w
  5729  048F  0D2F               	movwf	1+(spiWrite@dat)
  5730  0490  00F7               	fcall	_spiWrite
  5731  0491  120A  158A  2765  120A  118A  	line	46
  5732                           ;Prin-Raspi.c: 46: }else if(lectura == 4){
  5733                           	goto	i1l1735
  5734  0496  2D35               	
  5735                           i1l121:	
  5736  0497                     	
  5737                           i1l1705:	
  5738  0497                     		movlw	4
  5739  0497  3004               	xorwf	((_lectura)),w
  5740  0498  0670               iorwf	((_lectura+1)),w
  5741  0499  0471               	btfss	status,2
  5742  049A  1D03               	goto	u132_21
  5743  049B  2C9D               	goto	u132_20
  5744  049C  2C9E               u132_21:
  5745  049D                     	goto	i1l1709
  5746  049D  2CAB               u132_20:
  5747  049E                     	line	47
  5748                           	
  5749                           i1l1707:	
  5750  049E                     ;Prin-Raspi.c: 47: spiWrite(D*2);
  5751                           	clrc
  5752  049E  1003               	bcf	status, 5	;RP0=0, select bank0
  5753  049F  1283               	bcf	status, 6	;RP1=0, select bank0
  5754  04A0  1303               	rlf	(_D),w
  5755  04A1  0D2C               	movwf	(spiWrite@dat)
  5756  04A2  00F6               	rlf	(_D+1),w
  5757  04A3  0D2D               	movwf	1+(spiWrite@dat)
  5758  04A4  00F7               	fcall	_spiWrite
  5759  04A5  120A  158A  2765  120A  118A  	line	48
  5760                           ;Prin-Raspi.c: 48: }else if (lectura== 5){
  5761                           	goto	i1l1735
  5762  04AA  2D35               	
  5763                           i1l123:	
  5764  04AB                     	
  5765                           i1l1709:	
  5766  04AB                     		movlw	5
  5767  04AB  3005               	xorwf	((_lectura)),w
  5768  04AC  0670               iorwf	((_lectura+1)),w
  5769  04AD  0471               	btfss	status,2
  5770  04AE  1D03               	goto	u133_21
  5771  04AF  2CB1               	goto	u133_20
  5772  04B0  2CB2               u133_21:
  5773  04B1                     	goto	i1l1713
  5774  04B1  2CBF               u133_20:
  5775  04B2                     	line	49
  5776                           	
  5777                           i1l1711:	
  5778  04B2                     ;Prin-Raspi.c: 49: spiWrite(E*2);
  5779                           	clrc
  5780  04B2  1003               	bcf	status, 5	;RP0=0, select bank0
  5781  04B3  1283               	bcf	status, 6	;RP1=0, select bank0
  5782  04B4  1303               	rlf	(_E),w
  5783  04B5  0D2A               	movwf	(spiWrite@dat)
  5784  04B6  00F6               	rlf	(_E+1),w
  5785  04B7  0D2B               	movwf	1+(spiWrite@dat)
  5786  04B8  00F7               	fcall	_spiWrite
  5787  04B9  120A  158A  2765  120A  118A  	line	50
  5788                           ;Prin-Raspi.c: 50: }else if (lectura== 6){
  5789                           	goto	i1l1735
  5790  04BE  2D35               	
  5791                           i1l125:	
  5792  04BF                     	
  5793                           i1l1713:	
  5794  04BF                     		movlw	6
  5795  04BF  3006               	xorwf	((_lectura)),w
  5796  04C0  0670               iorwf	((_lectura+1)),w
  5797  04C1  0471               	btfss	status,2
  5798  04C2  1D03               	goto	u134_21
  5799  04C3  2CC5               	goto	u134_20
  5800  04C4  2CC6               u134_21:
  5801  04C5                     	goto	i1l1717
  5802  04C5  2CD3               u134_20:
  5803  04C6                     	line	51
  5804                           	
  5805                           i1l1715:	
  5806  04C6                     ;Prin-Raspi.c: 51: spiWrite(a*2);
  5807                           	clrc
  5808  04C6  1003               	bcf	status, 5	;RP0=0, select bank0
  5809  04C7  1283               	bcf	status, 6	;RP1=0, select bank0
  5810  04C8  1303               	rlf	(_a),w
  5811  04C9  0D38               	movwf	(spiWrite@dat)
  5812  04CA  00F6               	rlf	(_a+1),w
  5813  04CB  0D39               	movwf	1+(spiWrite@dat)
  5814  04CC  00F7               	fcall	_spiWrite
  5815  04CD  120A  158A  2765  120A  118A  	line	52
  5816                           ;Prin-Raspi.c: 52: }else if (lectura== 7){
  5817                           	goto	i1l1735
  5818  04D2  2D35               	
  5819                           i1l127:	
  5820  04D3                     	
  5821                           i1l1717:	
  5822  04D3                     		movlw	7
  5823  04D3  3007               	xorwf	((_lectura)),w
  5824  04D4  0670               iorwf	((_lectura+1)),w
  5825  04D5  0471               	btfss	status,2
  5826  04D6  1D03               	goto	u135_21
  5827  04D7  2CD9               	goto	u135_20
  5828  04D8  2CDA               u135_21:
  5829  04D9                     	goto	i1l1721
  5830  04D9  2CE7               u135_20:
  5831  04DA                     	line	53
  5832                           	
  5833                           i1l1719:	
  5834  04DA                     ;Prin-Raspi.c: 53: spiWrite(b*2);
  5835                           	clrc
  5836  04DA  1003               	bcf	status, 5	;RP0=0, select bank0
  5837  04DB  1283               	bcf	status, 6	;RP1=0, select bank0
  5838  04DC  1303               	rlf	(_b),w
  5839  04DD  0D36               	movwf	(spiWrite@dat)
  5840  04DE  00F6               	rlf	(_b+1),w
  5841  04DF  0D37               	movwf	1+(spiWrite@dat)
  5842  04E0  00F7               	fcall	_spiWrite
  5843  04E1  120A  158A  2765  120A  118A  	line	54
  5844                           ;Prin-Raspi.c: 54: }else if (lectura== 8){
  5845                           	goto	i1l1735
  5846  04E6  2D35               	
  5847                           i1l129:	
  5848  04E7                     	
  5849                           i1l1721:	
  5850  04E7                     		movlw	8
  5851  04E7  3008               	xorwf	((_lectura)),w
  5852  04E8  0670               iorwf	((_lectura+1)),w
  5853  04E9  0471               	btfss	status,2
  5854  04EA  1D03               	goto	u136_21
  5855  04EB  2CED               	goto	u136_20
  5856  04EC  2CEE               u136_21:
  5857  04ED                     	goto	i1l1725
  5858  04ED  2CFB               u136_20:
  5859  04EE                     	line	55
  5860                           	
  5861                           i1l1723:	
  5862  04EE                     ;Prin-Raspi.c: 55: spiWrite(c*2);
  5863                           	clrc
  5864  04EE  1003               	bcf	status, 5	;RP0=0, select bank0
  5865  04EF  1283               	bcf	status, 6	;RP1=0, select bank0
  5866  04F0  1303               	rlf	(_c),w
  5867  04F1  0D34               	movwf	(spiWrite@dat)
  5868  04F2  00F6               	rlf	(_c+1),w
  5869  04F3  0D35               	movwf	1+(spiWrite@dat)
  5870  04F4  00F7               	fcall	_spiWrite
  5871  04F5  120A  158A  2765  120A  118A  	line	56
  5872                           ;Prin-Raspi.c: 56: }else if (lectura== 9){
  5873                           	goto	i1l1735
  5874  04FA  2D35               	
  5875                           i1l131:	
  5876  04FB                     	
  5877                           i1l1725:	
  5878  04FB                     		movlw	9
  5879  04FB  3009               	xorwf	((_lectura)),w
  5880  04FC  0670               iorwf	((_lectura+1)),w
  5881  04FD  0471               	btfss	status,2
  5882  04FE  1D03               	goto	u137_21
  5883  04FF  2D01               	goto	u137_20
  5884  0500  2D02               u137_21:
  5885  0501                     	goto	i1l1729
  5886  0501  2D0F               u137_20:
  5887  0502                     	line	57
  5888                           	
  5889                           i1l1727:	
  5890  0502                     ;Prin-Raspi.c: 57: spiWrite(d*2);
  5891                           	clrc
  5892  0502  1003               	bcf	status, 5	;RP0=0, select bank0
  5893  0503  1283               	bcf	status, 6	;RP1=0, select bank0
  5894  0504  1303               	rlf	(_d),w
  5895  0505  0D32               	movwf	(spiWrite@dat)
  5896  0506  00F6               	rlf	(_d+1),w
  5897  0507  0D33               	movwf	1+(spiWrite@dat)
  5898  0508  00F7               	fcall	_spiWrite
  5899  0509  120A  158A  2765  120A  118A  	line	58
  5900                           ;Prin-Raspi.c: 58: }else if (lectura== 10){
  5901                           	goto	i1l1735
  5902  050E  2D35               	
  5903                           i1l133:	
  5904  050F                     	
  5905                           i1l1729:	
  5906  050F                     		movlw	10
  5907  050F  300A               	xorwf	((_lectura)),w
  5908  0510  0670               iorwf	((_lectura+1)),w
  5909  0511  0471               	btfss	status,2
  5910  0512  1D03               	goto	u138_21
  5911  0513  2D15               	goto	u138_20
  5912  0514  2D16               u138_21:
  5913  0515                     	goto	i1l1733
  5914  0515  2D23               u138_20:
  5915  0516                     	line	59
  5916                           	
  5917                           i1l1731:	
  5918  0516                     ;Prin-Raspi.c: 59: spiWrite(e*2);
  5919                           	clrc
  5920  0516  1003               	bcf	status, 5	;RP0=0, select bank0
  5921  0517  1283               	bcf	status, 6	;RP1=0, select bank0
  5922  0518  1303               	rlf	(_e),w
  5923  0519  0D30               	movwf	(spiWrite@dat)
  5924  051A  00F6               	rlf	(_e+1),w
  5925  051B  0D31               	movwf	1+(spiWrite@dat)
  5926  051C  00F7               	fcall	_spiWrite
  5927  051D  120A  158A  2765  120A  118A  	line	60
  5928                           ;Prin-Raspi.c: 60: }else{
  5929                           	goto	i1l1735
  5930  0522  2D35               	
  5931                           i1l135:	
  5932  0523                     	line	61
  5933                           	
  5934                           i1l1733:	
  5935  0523                     ;Prin-Raspi.c: 61: spiWrite(000);
  5936                           	movlw	0
  5937  0523  3000               	movwf	(spiWrite@dat)
  5938  0524  00F6               	movwf	(spiWrite@dat+1)
  5939  0525  00F7               	fcall	_spiWrite
  5940  0526  120A  158A  2765  120A  118A  	goto	i1l1735
  5941  052B  2D35               	line	62
  5942                           	
  5943                           i1l136:	
  5944  052C                     	goto	i1l1735
  5945  052C  2D35               	
  5946                           i1l134:	
  5947  052D                     	goto	i1l1735
  5948  052D  2D35               	
  5949                           i1l132:	
  5950  052E                     	goto	i1l1735
  5951  052E  2D35               	
  5952                           i1l130:	
  5953  052F                     	goto	i1l1735
  5954  052F  2D35               	
  5955                           i1l128:	
  5956  0530                     	goto	i1l1735
  5957  0530  2D35               	
  5958                           i1l126:	
  5959  0531                     	goto	i1l1735
  5960  0531  2D35               	
  5961                           i1l124:	
  5962  0532                     	goto	i1l1735
  5963  0532  2D35               	
  5964                           i1l122:	
  5965  0533                     	goto	i1l1735
  5966  0533  2D35               	
  5967                           i1l120:	
  5968  0534                     	goto	i1l1735
  5969  0534  2D35               	
  5970                           i1l118:	
  5971  0535                     	line	63
  5972                           	
  5973                           i1l1735:	
  5974  0535                     ;Prin-Raspi.c: 62: };Prin-Raspi.c: 63: SSPIF = 0;
  5975                           	bcf	status, 5	;RP0=0, select bank0
  5976  0535  1283               	bcf	status, 6	;RP1=0, select bank0
  5977  0536  1303               	bcf	(99/8),(99)&7	;volatile
  5978  0537  118C               	goto	i1l137
  5979  0538  2D39               	line	64
  5980                           	
  5981                           i1l116:	
  5982  0539                     	line	65
  5983                           	
  5984                           i1l137:	
  5985  0539                     	movf	(??_isr+3),w
  5986  0539  087B               	movwf	pclath
  5987  053A  008A               	swapf	(??_isr+2)^0FFFFFF80h,w
  5988  053B  0E7A               	movwf	status
  5989  053C  0083               	swapf	saved_w,f
  5990  053D  0EFE               	swapf	saved_w,w
  5991  053E  0E7E               	retfie
  5992  053F  0009               	opt stack 0
  5993                           GLOBAL	__end_of_isr
  5994                           	__end_of_isr:
  5995  0540                     	signat	_isr,89
  5996                           	global	_spiWrite
  5997                           
  5998 ;; *************** function _spiWrite *****************
  5999 ;; Defined at:
  6000 ;;		line 34 in file "SPI.c"
  6001 ;; Parameters:    Size  Location     Type
  6002 ;;  dat             2    0[COMMON] int 
  6003 ;; Auto vars:     Size  Location     Type
  6004 ;;		None
  6005 ;; Return value:  Size  Location     Type
  6006 ;;                  1    wreg      void 
  6007 ;; Registers used:
  6008 ;;		wreg
  6009 ;; Tracked objects:
  6010 ;;		On entry : 0/0
  6011 ;;		On exit  : 0/0
  6012 ;;		Unchanged: 0/0
  6013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6014 ;;      Params:         2       0       0       0       0
  6015 ;;      Locals:         0       0       0       0       0
  6016 ;;      Temps:          0       0       0       0       0
  6017 ;;      Totals:         2       0       0       0       0
  6018 ;;Total ram usage:        2 bytes
  6019 ;; Hardware stack levels used:    1
  6020 ;; This function calls:
  6021 ;;		Nothing
  6022 ;; This function is called by:
  6023 ;;		_isr
  6024 ;; This function uses a non-reentrant model
  6025 ;;
  6026                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  6027                           	file	"SPI.c"
  6028                           	line	34
  6029                           global __ptext20
  6030                           __ptext20:	;psect for function _spiWrite
  6031  0F65                     psect	text20
  6032                           	file	"SPI.c"
  6033                           	line	34
  6034                           	global	__size_of_spiWrite
  6035                           	__size_of_spiWrite	equ	__end_of_spiWrite-_spiWrite
  6036  0005                     	
  6037                           _spiWrite:	
  6038  0F65                     ;incstack = 0
  6039                           	opt	stack 2
  6040                           ; Regs used in _spiWrite: [wreg]
  6041                           	line	36
  6042                           	
  6043                           i1l1529:	
  6044  0F65                     ;SPI.c: 36: SSPBUF = dat;
  6045                           	movf	(spiWrite@dat),w
  6046  0F65  0876               	bcf	status, 5	;RP0=0, select bank0
  6047  0F66  1283               	bcf	status, 6	;RP1=0, select bank0
  6048  0F67  1303               	movwf	(19)	;volatile
  6049  0F68  0093               	line	37
  6050                           	
  6051                           i1l196:	
  6052  0F69                     	return
  6053  0F69  0008               	opt stack 0
  6054                           GLOBAL	__end_of_spiWrite
  6055                           	__end_of_spiWrite:
  6056  0F6A                     	signat	_spiWrite,4217
  6057                           	global	_spiRead
  6058                           
  6059 ;; *************** function _spiRead *****************
  6060 ;; Defined at:
  6061 ;;		line 47 in file "SPI.c"
  6062 ;; Parameters:    Size  Location     Type
  6063 ;;		None
  6064 ;; Auto vars:     Size  Location     Type
  6065 ;;		None
  6066 ;; Return value:  Size  Location     Type
  6067 ;;                  1    wreg      unsigned char 
  6068 ;; Registers used:
  6069 ;;		wreg, status,2, status,0, pclath, cstack
  6070 ;; Tracked objects:
  6071 ;;		On entry : 0/0
  6072 ;;		On exit  : 0/0
  6073 ;;		Unchanged: 0/0
  6074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6075 ;;      Params:         0       0       0       0       0
  6076 ;;      Locals:         0       0       0       0       0
  6077 ;;      Temps:          0       0       0       0       0
  6078 ;;      Totals:         0       0       0       0       0
  6079 ;;Total ram usage:        0 bytes
  6080 ;; Hardware stack levels used:    1
  6081 ;; Hardware stack levels required when called:    1
  6082 ;; This function calls:
  6083 ;;		_spiReceiveWait
  6084 ;; This function is called by:
  6085 ;;		_isr
  6086 ;; This function uses a non-reentrant model
  6087 ;;
  6088                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  6089                           	line	47
  6090                           global __ptext21
  6091                           __ptext21:	;psect for function _spiRead
  6092  0F7B                     psect	text21
  6093                           	file	"SPI.c"
  6094                           	line	47
  6095                           	global	__size_of_spiRead
  6096                           	__size_of_spiRead	equ	__end_of_spiRead-_spiRead
  6097  000A                     	
  6098                           _spiRead:	
  6099  0F7B                     ;incstack = 0
  6100                           	opt	stack 1
  6101                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  6102                           	line	49
  6103                           	
  6104                           i1l1523:	
  6105  0F7B                     ;SPI.c: 49: spiReceiveWait();
  6106                           	fcall	_spiReceiveWait
  6107  0F7B  120A  158A  2772  120A  158A  	line	50
  6108                           	
  6109                           i1l1525:	
  6110  0F80                     ;SPI.c: 50: return(SSPBUF);
  6111                           	bcf	status, 5	;RP0=0, select bank0
  6112  0F80  1283               	bcf	status, 6	;RP1=0, select bank0
  6113  0F81  1303               	movf	(19),w	;volatile
  6114  0F82  0813               	goto	i1l204
  6115  0F83  2F84               	
  6116                           i1l1527:	
  6117  0F84                     	line	51
  6118                           	
  6119                           i1l204:	
  6120  0F84                     	return
  6121  0F84  0008               	opt stack 0
  6122                           GLOBAL	__end_of_spiRead
  6123                           	__end_of_spiRead:
  6124  0F85                     	signat	_spiRead,89
  6125                           	global	_spiReceiveWait
  6126                           
  6127 ;; *************** function _spiReceiveWait *****************
  6128 ;; Defined at:
  6129 ;;		line 29 in file "SPI.c"
  6130 ;; Parameters:    Size  Location     Type
  6131 ;;		None
  6132 ;; Auto vars:     Size  Location     Type
  6133 ;;		None
  6134 ;; Return value:  Size  Location     Type
  6135 ;;                  1    wreg      void 
  6136 ;; Registers used:
  6137 ;;		None
  6138 ;; Tracked objects:
  6139 ;;		On entry : 0/0
  6140 ;;		On exit  : 0/0
  6141 ;;		Unchanged: 0/0
  6142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6143 ;;      Params:         0       0       0       0       0
  6144 ;;      Locals:         0       0       0       0       0
  6145 ;;      Temps:          0       0       0       0       0
  6146 ;;      Totals:         0       0       0       0       0
  6147 ;;Total ram usage:        0 bytes
  6148 ;; Hardware stack levels used:    1
  6149 ;; This function calls:
  6150 ;;		Nothing
  6151 ;; This function is called by:
  6152 ;;		_spiRead
  6153 ;; This function uses a non-reentrant model
  6154 ;;
  6155                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  6156                           	line	29
  6157                           global __ptext22
  6158                           __ptext22:	;psect for function _spiReceiveWait
  6159  0F72                     psect	text22
  6160                           	file	"SPI.c"
  6161                           	line	29
  6162                           	global	__size_of_spiReceiveWait
  6163                           	__size_of_spiReceiveWait	equ	__end_of_spiReceiveWait-_spiReceiveWait
  6164  0009                     	
  6165                           _spiReceiveWait:	
  6166  0F72                     ;incstack = 0
  6167                           	opt	stack 1
  6168                           ; Regs used in _spiReceiveWait: []
  6169                           	line	31
  6170                           	
  6171                           i1l1413:	
  6172  0F72                     ;SPI.c: 31: while ( !SSPSTATbits.BF );
  6173                           	goto	i1l190
  6174  0F72  2F73               	
  6175                           i1l191:	
  6176  0F73                     	
  6177                           i1l190:	
  6178  0F73                     	bsf	status, 5	;RP0=1, select bank1
  6179  0F73  1683               	bcf	status, 6	;RP1=0, select bank1
  6180  0F74  1303               	btfss	(148)^080h,0	;volatile
  6181  0F75  1C14               	goto	u79_21
  6182  0F76  2F78               	goto	u79_20
  6183  0F77  2F79               u79_21:
  6184  0F78                     	goto	i1l190
  6185  0F78  2F73               u79_20:
  6186  0F79                     	goto	i1l193
  6187  0F79  2F7A               	
  6188                           i1l192:	
  6189  0F7A                     	line	32
  6190                           	
  6191                           i1l193:	
  6192  0F7A                     	return
  6193  0F7A  0008               	opt stack 0
  6194                           GLOBAL	__end_of_spiReceiveWait
  6195                           	__end_of_spiReceiveWait:
  6196  0F7B                     	signat	_spiReceiveWait,89
  6197                           global	___latbits
  6198                           ___latbits	equ	2
  6199  0002                     	global	btemp
  6200                           	btemp set 07Eh
  6201  007E                     
  6202                           	DABS	1,126,2	;btemp
  6203                           	global	wtemp0
  6204                           	wtemp0 set btemp+0
  6205  007E                     	end


Data Sizes:
    Strings     73
    Constant    10
    Data        0
    BSS         64
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     38      80
    BANK1            80      0      16
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 28
		 -> STR_4(CODE[28]), STR_3(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> valor(BANK0[16]), valor1(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_STRING@a	PTR unsigned char  size(2) Largest target is 16
		 -> valor(BANK0[16]), valor1(BANK1[16]), STR_2(CODE[16]), STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_ready
    _lcd_ready->_delay
    _lcd_lat->_delay
    _LCD_STRING->_LCD_CHAR
    _LCD_CURSOR->_LCD_DATO

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    8348
                                             35 BANK0      3     3      0
                         _LCD_CURSOR
                           _LCD_DATO
                         _LCD_STRING
                            ___awdiv
                             _config
                           _lcd_init
                             _mandar
                            _spiInit
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             29    18     11    2468
                                             14 BANK0     21    10     11
                             ___bmul
                            ___lwdiv
                            ___lwmod
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     226
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _mandar                                               2     0      2     481
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     843
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0     843
                                              7 BANK0      1     1      0
                            _lcd_lat
                          _lcd_ready
 ---------------------------------------------------------------------------------
 (3) _lcd_ready                                            1     1      0     406
                                              6 BANK0      1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _lcd_lat                                              0     0      0     406
                              _delay
 ---------------------------------------------------------------------------------
 (4) _delay                                                6     4      2     406
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    2245
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCD_STRING                                           7     5      2     521
                                              2 BANK0      7     5      2
                           _LCD_CHAR
 ---------------------------------------------------------------------------------
 (2) _LCD_CHAR                                             2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_CURSOR                                           6     2      4     943
                                              4 BANK0      6     2      4
                           _LCD_DATO
 ---------------------------------------------------------------------------------
 (1) _LCD_DATO                                             4     2      2     391
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  4     4      0     858
                                              2 COMMON     4     4      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (6) _spiWrite                                             2     0      2     858
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (7) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_CURSOR
     _LCD_DATO
   _LCD_DATO
   _LCD_STRING
     _LCD_CHAR
   ___awdiv
   _config
   _lcd_init
     _lcd_cmd
       _lcd_lat
         _delay
       _lcd_ready
         _delay
   _mandar
   _spiInit
   _sprintf
     ___bmul
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _isdigit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      6C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     26      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      10       7       20.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      6C      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sat May 09 20:19:19 2020

             LCD_CURSOR@a 004E               LCD_CURSOR@b 0050               LCD_CURSOR@d 0052  
                       _A 0074                         _B 0072                         _C 002E  
                       _D 002C                         _E 002A                         _a 0038  
                       _b 0036                         _c 0034                         _d 0032  
                       _e 0030                         pc 0002            ___bmul@product 004C  
             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        _A1 0028  
                      _B1 0026                        _C1 0024                        _D1 0022  
                      _E1 0020                        l20 05F9                        l21 05FD  
                      l15 0FBA                        l18 05F2                        l19 05F2  
            ___awdiv@sign 0050                        fsr 0004                       l220 07D2  
                     l230 07A5                       l150 0168                       l142 0099  
                     l231 078A                       l215 0F94                       l223 0FCE  
                     l151 018F                       l143 0105                       l240 0755  
                     l232 0784                       l400 0FEA                       l160 0220  
                     l152 01A7                       l144 0105                       l241 0771  
                     l233 0795                       l401 0FF3                       l161 0247  
                     l153 01BD                       l145 010C                       l242 0770  
                     l250 06B5                       l234 07A5                       l218 07D1  
                     l226 05F0                       l402 0FFD                       l170 02C7  
                     l162 025F                       l154 01BD                       l146 0133  
                     l243 0771                       l251 06F7                       l219 07D2  
                     l403 0FFF                       l163 0275                       l155 01C4  
                     l147 014B                       l252 06F7                       l164 0275  
                     l156 01EB                       l148 0161                       l237 07FF  
                     l229 0781                       l165 027C                       l157 0203  
                     l149 0161                       l246 0FA6                       l350 02F7  
                     l166 02A3                       l158 0219                       l351 0328  
                     l167 02BB                       l159 0219                       l520 054F  
                     l360 0364                       l352 032D                       l168 02C6  
                     l249 06DA                       l521 055D                       l185 05C5  
                     l345 0435                       l361 0374                       l353 0333  
                     l169 02C7                       l530 05B2                       l522 05A2  
                     l186 05CC                       l370 03EE                       l362 037E  
                     l354 032E                       l346 02D2                       l523 0574  
                     l187 05D1                       l355 0449                       l371 0434  
                     l363 03A6                       l347 02E4                       l524 0568  
                     l372 0448                       l364 039B                       l356 032F  
                     l348 0329                       l525 0579                       l373 044E  
                     l365 03BD                       l357 0330                       l349 0317  
                     l526 057A                       l366 03D9                       l358 034A  
                     l527 0593                       l367 03D8                       l359 0331  
                     l528 05A1                       l368 03ED                       l529 05AD  
                     l369 042A                       l642 06AA                       l643 067C  
                     l644 0670                       l652 0735                       l804 0FE2  
                     l645 0681                       l653 070F                       l805 0FE4  
                     l646 0682                       l654 0703                       l647 069B  
                     l655 0714                       l648 06A9                       l656 0715  
                     l649 06AF                       l657 0726                       l658 0734  
                     l659 073A              __CFG_CPD$OFF 0000                       _isr 044F  
                     fsr0 0004                       indf 0000               LCD_STRING@a 004C  
             LCD_STRING@n 0051              __CFG_LVP$OFF 0000                      l2001 0FB3  
                    l2003 0FB6                      l2011 05B6                      l2005 0FB7  
                    l2021 05D2                      l2013 05BF                      l2101 041E  
                    l2023 06B0                      l2007 05F1                      l2015 05C3  
                    l2111 044E                      l2103 0425                      l2031 02CD  
                    l2121 075E                      l2113 073B                      l2025 06B5  
                    l2009 05F9                      l2017 05C5                      l2105 042A  
                    l2041 02E5                      l2033 02D2                      l2201 008D  
                    l2123 0766                      l2115 0743                      l2027 06D1  
                    l2131 054C                      l2019 05CB                      l2051 0317  
                    l2043 02F1                      l2035 02D8                      l2107 0435  
                    l2211 00DF                      l2203 0099                      l2117 074B  
                    l2029 06DA                      l2141 055F                      l2133 054F  
                    l2125 0540                      l2061 0352                      l2109 0449  
                    l2045 02F5                      l2053 0329                      l2037 02DF  
                    l2221 0117                      l2213 00EE                      l2205 00A5  
                    l2119 0755                      l2151 057A                      l2143 0565  
                    l2135 0553                      l2127 0543                      l2071 0369  
                    l2063 0356                      l2055 0332                      l2047 02F7  
                    l2039 02E4                      l2231 0168                      l2223 012A  
                    l2215 00F9                      l2207 00B4                      l2153 058B  
                    l2145 0568                      l2161 05A2                      l2137 0558  
                    l2129 0547                      l2081 039A                      l2073 036F  
                    l2065 035A                      l2057 0333                      l2049 0312  
                    l2241 01A2                      l2233 016F                      l2225 0133  
                    l2217 010C                      l2209 00BF                      l2163 05A7  
                    l2155 0591                      l2147 056F                      l2139 055D  
                    l2091 03D1                      l2083 039B                      l2075 0374  
                    l2067 035E                      l2059 034A                      l2251 01E2  
                    l2243 01A7                      l2235 0173                      l2227 0146  
                    l2219 0113                      l2171 002E                      l2165 05AD  
                    l2157 0593                      l2149 0574                      l2093 03D9  
                    l2077 037D                      l2085 03A6                      l2069 0364  
                    l2261 0227                      l2253 01EB                      l2245 01C4  
                    l2237 0186                      l2229 014B                      l2181 0042  
                    l2173 0038                      l2167 05B2                      l2159 059A  
                    l2095 03E1                      l2087 03B6                      l2079 037E  
                    l2271 025F                      l2263 022B                      l2255 01FE  
                    l2247 01CB                      l2239 018F                      l2191 0059  
                    l2183 0045                      l2175 003C                      l2097 03E8  
                    l2089 03BD                      l2281 02A3                      l2273 027C  
                    l2265 023E                      l2257 0203                      l2249 01CF  
                    l2193 005E                      l2185 0048                      l2177 0040  
                    l2169 002A                      l2099 03EE                      l2283 02B6  
                    l2275 0283                      l2267 0247                      l2259 0220  
                    l2195 0069                      l2187 0049                      l2179 0041  
                    l1901 07F1                      l2285 02BB                      l2277 0287  
                    l2269 025A                      l2197 0074                      l2189 0054  
                    l1911 0FC9                      l1903 0FBE                      l2279 029A  
                    l2199 007F                      l1913 0F98                      l1905 0FC3  
                    l1921 0FD2                      l1915 0F99                      l1907 0FC7  
                    l1931 0FE4                      l1923 0FD3                      l1917 0F9B  
                    l1861 0781                      l1909 0FC8                      l1941 0FF5  
                    l1933 0FE8                      l1925 0FD9                      l1919 0FA3  
                    l1863 0784                      l1855 0772                      l1871 0F91  
                    l1943 0FFD                      l1935 0FEA                      l1951 066D  
                    l1927 0FDF                      l1865 0795                      l1857 0776  
                    l1881 07B0                      l1873 07A6                      l1945 0FFF  
                    l1937 0FEE                      l1961 0693                      l1953 0670  
                    l1929 0FE2                      l1859 0780                      l1867 0F85  
                    l1891 07C4                      l1883 07B1                      l1875 07AA  
                    l1939 0FF3                      l1971 06AF                      l1963 0699  
                    l1955 0677                      l1947 0663                      l1869 0F88  
                    l1893 07CD                      l1885 07BA                      l1877 07AE  
                    l1965 069B                      l1957 067C                      l1949 0667  
                    l1981 070F                      l1973 06F8                      l1895 07D3  
                    l1887 07BD                      l1879 07AF                      l1967 06A2  
                    l1959 0682                      l1983 0715                      l1975 0700  
                    l1991 0735                      l1897 07D6                      l1889 07C3  
                    l1969 06AA                      l1993 073A                      l1985 071F  
                    l1977 0703                      l1899 07E1                      l1995 0FA7  
                    l1987 0726                      l1979 070A                      l1997 0FAE  
                    l1989 072D                      l1999 0FB2                      ?_isr 0076  
                    STR_1 0657                      STR_2 0647                      STR_3 0636  
                    STR_4 061A                      u2000 05A7                      u2001 05A6  
                    u2010 010B                      u2011 010A                      u2100 0287  
                    u2020 0117                      u2101 0286                      u2021 0116  
                    u2030 0167                      u2031 0166                      u2040 0173  
                    u2041 0172                      u2050 01C3                      u2051 01C2  
                    u1500 0794                      u2060 01CF                      u1501 0793  
                    u2061 01CE                      u2117 0087                      u1510 07A4  
                    u2070 021F                      u2207 07FA                      u1511 07A3  
                    u2071 021E                      u2127 0151                      u1520 07C3  
                    u2080 022B                      u1505 0790                      u1521 07C2  
                    u2081 022A                      u2137 01AD                      u1610 0693  
                    u1530 0FD9                      u2090 027B                      u1611 0692  
                    u1531 0FD8                      u2091 027A                      u2147 0209  
                    u1700 05F8                      u1540 0FDF                      u1701 05F7  
                    u1605 0683                      u1541 0FDE                      u2157 0265  
                    u1710 05BF                      u1550 0FEE                      u1630 06A8  
                    u1711 05BE                      u1551 0FED                      u1631 06A7  
                    u1615 068F                      u2167 02C1                      u1720 06BF  
                    u1560 0FFC                      u1640 0700                      u1800 036F  
                    u2177 0FA0                      u1561 0FFB                      u1625 069C  
                    u1641 06FF                      u1801 036E                      u1730 06E4  
                    u1490 077F                      u1570 066D                      u1810 037C  
                    u2187 07DC                      u1491 077E                      u1571 066C  
                    u1811 037B                      u1900 075E                      u1740 06F6  
                    u1660 0713                      u1820 0399                      u2197 07EC  
                    u1901 075D                      u1741 06F5                      u1661 0712  
                    u1821 0398                      u1910 0547                      u1590 0680  
                    u1670 071F                      u1830 03A5                      u1750 02D8  
                    u1911 0546                      u1591 067F                      u1671 071E  
                    u1655 0704                      u1831 03A4                      u1751 02D7  
                    u1920 0553                      u1840 03B6                      u1760 02F1  
                    u1921 0552                      u1585 0671                      u1841 03B5  
                    u1825 0395                      u1761 02F0                      u1930 0565  
                    u1690 0733                      u1850 03D1                      u1770 0327  
                    u1931 0564                      u1691 0732                      u1675 071B  
                    u1851 03D0                      u1771 0326                      u1860 03E1  
                    u1780 035A                      u1685 0727                      u1861 03E0  
                    u1845 03B2                      u1781 0359                      u1950 0578  
                    u1870 0433                      u1790 0369                      u1951 0577  
                    u1871 0432                      u1855 03CD                      u1791 0368  
                    u1880 0447                      u1945 0569                      u1881 0446  
                    u1890 0743                      u1970 058B                      u1891 0742  
                    u1971 058A                      u1965 057B                      u1990 05A0  
                    u1991 059F                      u1975 0587                      u1985 0594  
                    _RCIF 0065              __CFG_WRT$OFF 0000                      _main 002A  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
       ___bmul@multiplier 004D          __end_of_LCD_CHAR 0FA7          __end_of_LCD_DATO 0800  
                   ??_isr 0078                     ?_main 0076           __end_of___awdiv 05B3  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188           ___awdiv@divisor 004A  
         __end_of___lwdiv 06B0                     i1l120 0534                     i1l121 0497  
                   i1l122 0533                     i1l130 052F                     i1l131 04FB  
                   i1l123 04AB                     i1l204 0F84                     i1l116 0539  
                   i1l124 0532                     i1l132 052E                     i1l133 050F  
                   i1l125 04BF                     i1l117 0471                     i1l118 0535  
                   i1l126 0531                     i1l134 052D                     i1l135 0523  
                   i1l127 04D3                     i1l119 0483                     i1l128 0530  
                   i1l136 052C                     i1l129 04E7                     i1l137 0539  
                   i1l190 0F73                     i1l191 0F73                     i1l192 0F7A  
                   i1l193 0F7A           __end_of___lwmod 073B                     i1l196 0F69  
         ___awdiv@counter 004F                     _RCREG 001A                     _SPBRG 0099  
                   _PORTA 0005                     _PORTB 0006                     _PORTD 0008  
                   _TRISA 0085                     _TRISB 0086                     _TRISD 0088  
                   _SSPIF 0063                     u79_20 0F79                     u79_21 0F78  
                   _TXREG 0019       __size_of_LCD_CURSOR 0037            __CFG_FCMEN$OFF 0000  
         __end_of_lcd_cmd 0FCF           __end_of_lcd_lat 0F95                     _delay 0772  
     __size_of_LCD_STRING 0048           __end_of_dpowers 061A           __end_of_isdigit 0FE5  
                   _valor 003A            __CFG_BOREN$OFF 0000                     pclath 000A  
         __end_of_spiInit 05D2           __end_of_spiRead 0F85                     status 0003  
                   wtemp0 007E           __end_of_sprintf 044F            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 02CA                    ??_main 006D  
                  ?_delay 004A          ___awdiv@dividend 004C                    _ANSELH 0189  
                  i1l1413 0F72                    i1l1523 0F7B                    i1l1525 0F80  
                  i1l1701 0483                    i1l1527 0F84                    i1l1711 04B2  
                  i1l1703 048A                    i1l1529 0F65                    i1l1721 04E7  
                  i1l1713 04BF                    i1l1705 0497                    i1l1731 0516  
                  i1l1723 04EE                    i1l1715 04C6                    i1l1707 049E  
                  i1l1733 0523                    i1l1725 04FB                    i1l1717 04D3  
                  i1l1709 04AB                    i1l1727 0502                    i1l1719 04DA  
                  i1l1735 0535                    u130_20 0478                    i1l1729 050F  
                  u130_21 0477                    i1l1691 0455                    i1l1693 0460  
                  i1l1695 0466                    u131_20 048A                    u131_21 0489  
                  i1l1697 0471                    i1l1689 044F                    i1l1699 0478  
                  u132_20 049E                    u132_21 049D                    u133_20 04B2  
                  u133_21 04B1                    u134_20 04C6                    u134_21 04C5  
                  u135_20 04DA                    u135_21 04D9                    u136_20 04EE  
                  u128_20 0455                    u136_21 04ED                    u128_21 0454  
                  u137_20 0502                    u129_20 0466                    u137_21 0501  
                  u129_21 0465                    u138_20 0516                    u138_21 0515  
                  _SPBRGH 009A                    _TRISC3 043B                    _TRISC5 043D  
                  _SSPCON 0014                    _SSPBUF 0013            __CFG_PWRTE$OFF 0000  
        __end_of_lcd_init 05F1                    ___bmul 0FE5                 ??___awdiv 004E  
               ??___lwdiv 004E                 ??___lwmod 0056                    _config 0FA7  
                  _mandar 05F1                    delay@i 004E                    delay@j 004C  
        ___awdiv@quotient 0051                    _valor1 00A0                 ??_lcd_cmd 0051  
               ??_lcd_lat 0050                 ??_isdigit 004A                    saved_w 007E  
        __end_of_spiWrite 0F6A                 ??_spiInit 004D                 ??_spiRead 0076  
               ??_sprintf 0063                 LCD_CHAR@a 004B                 ?_LCD_CHAR 0076  
               ?_LCD_DATO 004A   __end_of__initialization 0026              ??_LCD_CURSOR 0052  
     ___bmul@multiplicand 004A              ??_LCD_STRING 004E            __pcstackCOMMON 0076  
           __end_of_delay 07A6        __end_of_LCD_CURSOR 0772        __size_of_lcd_ready 002D  
                 ??_delay 004C        __end_of_LCD_STRING 06F8                __pbssBANK0 0020  
              __pbssBANK1 00A0                ??_LCD_CHAR 004A                ??_LCD_DATO 004C  
              __pmaintext 002A                   ?___bmul 004A                __pintentry 0004  
                 ?_config 0076   __size_of_spiReceiveWait 0009                   ?_mandar 004A  
               ?_lcd_init 0076                   _SSPSTAT 0094                __stringtab 0600  
       __end_of_lcd_ready 07D3                 ?_spiWrite 0076           __size_of___bmul 001B  
                 ___awdiv 0540                   ___lwdiv 0663                   ___lwmod 06F8  
         __size_of_config 0014           __size_of_mandar 000D                   __ptext1 02CA  
                 __ptext2 0FCF                   __ptext3 06F8                   __ptext4 0663  
                 __ptext5 0FE5                   __ptext6 05B3                   __ptext7 05F1  
                 __ptext8 05D2                   __ptext9 0FBB                   _lcd_cmd 0FBB  
                 _lcd_lat 0F85                   _lectura 0070                   _dpowers 0610  
                 _isdigit 0FCF              __size_of_isr 00F1                   delay@ms 004A  
                 _spiInit 05B3                   _spiRead 0F7B                   _sprintf 02CA  
                 clrloop0 0F6B                ??_lcd_init 0052      end_of_initialization 0026  
               _RCSTAbits 0018                ??_spiWrite 0078                 _PORTDbits 0008  
               _TRISAbits 0085                 _TRISCbits 0087               spiWrite@dat 0076  
               _TXSTAbits 0098         __size_of_LCD_CHAR 0012         __size_of_LCD_DATO 002D  
          _spiReceiveWait 0F72            __end_of___bmul 1000               _BAUDCTLbits 0187  
              mandar@dato 004A            __end_of_config 0FBB            __end_of_mandar 05FE  
     start_initialization 000F               __end_of_isr 0540  __CFG_FOSC$INTRC_NOCLKOUT 0000  
  __end_of_spiReceiveWait 0F7B                  ??___bmul 004B                  ??_config 004A  
                ??_mandar 004C               __pbssCOMMON 0070                 ___latbits 0002  
           __pcstackBANK0 004A              _isdigit$1048 004A         __size_of_lcd_init 001F  
             sprintf@flag 0067               sprintf@prec 006B          ___lwdiv@dividend 004C  
         ?_spiReceiveWait 0076                  ?___awdiv 004A                  ?___lwdiv 004A  
                ?___lwmod 0052         __size_of_spiWrite 0005                 _lcd_ready 07A6  
               __pstrings 0600                  ?_lcd_cmd 0076                  ?_lcd_lat 0076  
                ?_isdigit 0076                  ?_spiInit 004A                  ?_spiRead 0076  
        ___lwdiv@quotient 0050            __size_of_delay 0034                  ?_sprintf 0058  
                _LCD_CHAR 0F95                  _LCD_DATO 07D3      spiInit@sTransmitEdge 004C  
       interrupt_function 0004                 clear_ram0 0F6A                  _PIE1bits 008C  
      spiInit@sDataSample 004A                  _PIR1bits 000C                ?_lcd_ready 0076  
             __stringbase 060F          __size_of___awdiv 0073          __size_of___lwdiv 004D  
        __size_of___lwmod 0043        __end_of__stringtab 0610          __size_of_lcd_cmd 0014  
        __size_of_lcd_lat 0010                sprintf@val 0068          __size_of_isdigit 0016  
         ___lwdiv@divisor 004A           ___lwdiv@counter 004F                  __ptext10 07A6  
                __ptext11 0F85                  __ptext20 0F65                  __ptext12 0772  
                __ptext21 0F7B                  __ptext13 0FA7                  __ptext22 0F72  
                __ptext14 0540                  __ptext15 06B0                  __ptext16 0F95  
                __ptext17 073B                  __ptext18 07D3                  __ptext19 044F  
        __size_of_spiInit 001F          __size_of_spiRead 000A         __CFG_BOR4V$BOR40V 0000  
                _lcd_init 05D2          __size_of_sprintf 0185             __size_of_main 02A0  
              _LCD_CURSOR 073B                _LCD_STRING 06B0                  _spiWrite 0F65  
            spiInit@sType 004D                  lcd_cmd@x 0051         spiInit@sClockIdle 004B  
             ??_lcd_ready 0050                _INTCONbits 000B                  isdigit@c 004B  
                intlevel1 0000                 sprintf@ap 0066                 sprintf@sp 006A  
        ___lwmod@dividend 0054          ??_spiReceiveWait 0076                 stringcode 060A  
                sprintf@c 006C                  sprintf@f 0058           ___lwmod@divisor 0052  
         ___lwmod@counter 0057                  stringdir 060A                  stringtab 0600  
             LCD_DATO@var 004A               ?_LCD_CURSOR 004E               ?_LCD_STRING 004C  
