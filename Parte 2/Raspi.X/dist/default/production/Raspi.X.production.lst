

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sat Apr 11 16:53:02 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     	FNCALL	_main,___awdiv
   712                           	FNCALL	_main,_config
   713                           	FNCALL	_main,_mandar
   714                           	FNCALL	_main,_spiInit
   715                           	FNROOT	_main
   716                           	FNCALL	_isr,_spiRead
   717                           	FNCALL	_isr,_spiWrite
   718                           	FNCALL	_spiRead,_spiReceiveWait
   719                           	FNCALL	intlevel1,_isr
   720                           	global	intlevel1
   721                           	FNROOT	intlevel1
   722                           	global	_lectura
   723                           	global	_B
   724                           	global	_A
   725                           	global	_E1
   726                           	global	_D1
   727                           	global	_C1
   728                           	global	_B1
   729                           	global	_A1
   730                           	global	_E
   731                           	global	_D
   732                           	global	_C
   733                           	global	_e
   734                           	global	_d
   735                           	global	_c
   736                           	global	_b
   737                           	global	_a
   738                           	global	_SSPBUF
   739                           _SSPBUF	set	0x13
   740  0013                     	global	_SSPCON
   741                           _SSPCON	set	0x14
   742  0014                     	global	_RCREG
   743                           _RCREG	set	0x1A
   744  001A                     	global	_PIR1bits
   745                           _PIR1bits	set	0xC
   746  000C                     	global	_INTCONbits
   747                           _INTCONbits	set	0xB
   748  000B                     	global	_TXREG
   749                           _TXREG	set	0x19
   750  0019                     	global	_RCSTAbits
   751                           _RCSTAbits	set	0x18
   752  0018                     	global	_RCIF
   753                           _RCIF	set	0x65
   754  0065                     	global	_SSPIF
   755                           _SSPIF	set	0x63
   756  0063                     	global	_SSPSTATbits
   757                           _SSPSTATbits	set	0x94
   758  0094                     	global	_SSPSTAT
   759                           _SSPSTAT	set	0x94
   760  0094                     	global	_TRISAbits
   761                           _TRISAbits	set	0x85
   762  0085                     	global	_PIE1bits
   763                           _PIE1bits	set	0x8C
   764  008C                     	global	_TRISA
   765                           _TRISA	set	0x85
   766  0085                     	global	_SPBRGH
   767                           _SPBRGH	set	0x9A
   768  009A                     	global	_SPBRG
   769                           _SPBRG	set	0x99
   770  0099                     	global	_TXSTAbits
   771                           _TXSTAbits	set	0x98
   772  0098                     	global	_TRISC3
   773                           _TRISC3	set	0x43B
   774  043B                     	global	_TRISC5
   775                           _TRISC5	set	0x43D
   776  043D                     	global	_ANSEL
   777                           _ANSEL	set	0x188
   778  0188                     	global	_BAUDCTLbits
   779                           _BAUDCTLbits	set	0x187
   780  0187                     ; #config settings
   781                           global __CFG_FOSC$INTRC_NOCLKOUT
   782                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   783  0000                     global __CFG_WDTE$OFF
   784                           __CFG_WDTE$OFF equ 0x0
   785  0000                     global __CFG_PWRTE$OFF
   786                           __CFG_PWRTE$OFF equ 0x0
   787  0000                     global __CFG_MCLRE$OFF
   788                           __CFG_MCLRE$OFF equ 0x0
   789  0000                     global __CFG_CP$OFF
   790                           __CFG_CP$OFF equ 0x0
   791  0000                     global __CFG_CPD$OFF
   792                           __CFG_CPD$OFF equ 0x0
   793  0000                     global __CFG_BOREN$OFF
   794                           __CFG_BOREN$OFF equ 0x0
   795  0000                     global __CFG_IESO$OFF
   796                           __CFG_IESO$OFF equ 0x0
   797  0000                     global __CFG_FCMEN$OFF
   798                           __CFG_FCMEN$OFF equ 0x0
   799  0000                     global __CFG_LVP$OFF
   800                           __CFG_LVP$OFF equ 0x0
   801  0000                     global __CFG_BOR4V$BOR40V
   802                           __CFG_BOR4V$BOR40V equ 0x0
   803  0000                     global __CFG_WRT$OFF
   804                           __CFG_WRT$OFF equ 0x0
   805  0000                     	file	"C:\Users\JOSJAV~1\AppData\Local\Temp\s6nc."
   806                           	line	#
   807                           psect cinit,class=CODE,delta=2
   808                           global start_initialization
   809                           start_initialization:
   810  000F                     
   811                           global __initialization
   812                           __initialization:
   813  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
   814                           global __pbssCOMMON
   815                           __pbssCOMMON:
   816  0070                     _lectura:
   817  0070                            ds      2
   818  0070                     
   819                           _B:
   820  0072                            ds      2
   821  0072                     
   822                           _A:
   823  0074                            ds      2
   824  0074                     
   825                           psect	bssBANK0,class=BANK0,space=1,noexec
   826                           global __pbssBANK0
   827                           __pbssBANK0:
   828  0020                     _E1:
   829  0020                            ds      2
   830  0020                     
   831                           _D1:
   832  0022                            ds      2
   833  0022                     
   834                           _C1:
   835  0024                            ds      2
   836  0024                     
   837                           _B1:
   838  0026                            ds      2
   839  0026                     
   840                           _A1:
   841  0028                            ds      2
   842  0028                     
   843                           _E:
   844  002A                            ds      2
   845  002A                     
   846                           _D:
   847  002C                            ds      2
   848  002C                     
   849                           _C:
   850  002E                            ds      2
   851  002E                     
   852                           _e:
   853  0030                            ds      2
   854  0030                     
   855                           _d:
   856  0032                            ds      2
   857  0032                     
   858                           _c:
   859  0034                            ds      2
   860  0034                     
   861                           _b:
   862  0036                            ds      2
   863  0036                     
   864                           _a:
   865  0038                            ds      2
   866  0038                     
   867                           	file	"C:\Users\JOSJAV~1\AppData\Local\Temp\s6nc."
   868                           	line	#
   869                           psect clrtext,class=CODE,delta=2
   870                           global clear_ram0
   871                           ;	Called with FSR containing the base address, and
   872                           ;	W with the last address+1
   873                           clear_ram0:
   874  03C3                     	clrwdt			;clear the watchdog before getting into this loop
   875  03C3  0064               clrloop0:
   876  03C4                     	clrf	indf		;clear RAM location pointed to by FSR
   877  03C4  0180               	incf	fsr,f		;increment pointer
   878  03C5  0A84               	xorwf	fsr,w		;XOR with final address
   879  03C6  0604               	btfsc	status,2	;have we reached the end yet?
   880  03C7  1903               	retlw	0		;all done for this memory range, return
   881  03C8  3400               	xorwf	fsr,w		;XOR again to restore value
   882  03C9  0604               	goto	clrloop0		;do the next byte
   883  03CA  2BC4               
   884                           ; Clear objects allocated to COMMON
   885                           psect cinit,class=CODE,delta=2,merge=1
   886                           	clrf	((__pbssCOMMON)+0)&07Fh
   887  000F  01F0               	clrf	((__pbssCOMMON)+1)&07Fh
   888  0010  01F1               	clrf	((__pbssCOMMON)+2)&07Fh
   889  0011  01F2               	clrf	((__pbssCOMMON)+3)&07Fh
   890  0012  01F3               	clrf	((__pbssCOMMON)+4)&07Fh
   891  0013  01F4               	clrf	((__pbssCOMMON)+5)&07Fh
   892  0014  01F5               ; Clear objects allocated to BANK0
   893                           psect cinit,class=CODE,delta=2,merge=1
   894                           	bcf	status, 7	;select IRP bank0
   895  0015  1383               	movlw	low(__pbssBANK0)
   896  0016  3020               	movwf	fsr
   897  0017  0084               	movlw	low((__pbssBANK0)+01Ah)
   898  0018  303A               	fcall	clear_ram0
   899  0019  120A  118A  23C3  120A  118A  psect cinit,class=CODE,delta=2,merge=1
   900                           global end_of_initialization,__end_of__initialization
   901                           
   902                           ;End of C runtime variable initialization code
   903                           
   904                           end_of_initialization:
   905  001E                     __end_of__initialization:
   906  001E                     clrf status
   907  001E  0183               ljmp _main	;jump to C main() function
   908  001F  120A  118A  2822   psect	cstackCOMMON,class=COMMON,space=1,noexec
   909                           global __pcstackCOMMON
   910                           __pcstackCOMMON:
   911  0076                     ?_spiRead:	; 1 bytes @ 0x0
   912  0076                     ??_spiRead:	; 1 bytes @ 0x0
   913  0076                     ?_spiWrite:	; 1 bytes @ 0x0
   914  0076                     ?_config:	; 1 bytes @ 0x0
   915  0076                     ?_isr:	; 1 bytes @ 0x0
   916  0076                     ?_main:	; 1 bytes @ 0x0
   917  0076                     ?_spiReceiveWait:	; 1 bytes @ 0x0
   918  0076                     ??_spiReceiveWait:	; 1 bytes @ 0x0
   919  0076                     	global	spiWrite@dat
   920                           spiWrite@dat:	; 2 bytes @ 0x0
   921  0076                     	ds	2
   922  0076                     ??_spiWrite:	; 1 bytes @ 0x2
   923  0078                     ??_isr:	; 1 bytes @ 0x2
   924  0078                     	ds	4
   925  0078                     psect	cstackBANK0,class=BANK0,space=1,noexec
   926                           global __pcstackBANK0
   927                           __pcstackBANK0:
   928  003A                     ?_spiInit:	; 1 bytes @ 0x0
   929  003A                     ??_config:	; 1 bytes @ 0x0
   930  003A                     ?_mandar:	; 1 bytes @ 0x0
   931  003A                     	global	?___awdiv
   932                           ?___awdiv:	; 2 bytes @ 0x0
   933  003A                     	global	spiInit@sDataSample
   934                           spiInit@sDataSample:	; 1 bytes @ 0x0
   935  003A                     	global	mandar@dato
   936                           mandar@dato:	; 2 bytes @ 0x0
   937  003A                     	global	___awdiv@divisor
   938                           ___awdiv@divisor:	; 2 bytes @ 0x0
   939  003A                     	ds	1
   940  003A                     	global	spiInit@sClockIdle
   941                           spiInit@sClockIdle:	; 1 bytes @ 0x1
   942  003B                     	ds	1
   943  003B                     ??_mandar:	; 1 bytes @ 0x2
   944  003C                     	global	spiInit@sTransmitEdge
   945                           spiInit@sTransmitEdge:	; 1 bytes @ 0x2
   946  003C                     	global	___awdiv@dividend
   947                           ___awdiv@dividend:	; 2 bytes @ 0x2
   948  003C                     	ds	1
   949  003C                     ??_spiInit:	; 1 bytes @ 0x3
   950  003D                     	global	spiInit@sType
   951                           spiInit@sType:	; 1 bytes @ 0x3
   952  003D                     	ds	1
   953  003D                     ??___awdiv:	; 1 bytes @ 0x4
   954  003E                     	ds	1
   955  003E                     	global	___awdiv@counter
   956                           ___awdiv@counter:	; 1 bytes @ 0x5
   957  003F                     	ds	1
   958  003F                     	global	___awdiv@sign
   959                           ___awdiv@sign:	; 1 bytes @ 0x6
   960  0040                     	ds	1
   961  0040                     	global	___awdiv@quotient
   962                           ___awdiv@quotient:	; 2 bytes @ 0x7
   963  0041                     	ds	2
   964  0041                     ??_main:	; 1 bytes @ 0x9
   965  0043                     	ds	2
   966  0043                     ;!
   967                           ;!Data Sizes:
   968                           ;!    Strings     0
   969                           ;!    Constant    0
   970                           ;!    Data        0
   971                           ;!    BSS         32
   972                           ;!    Persistent  0
   973                           ;!    Stack       0
   974                           ;!
   975                           ;!Auto Spaces:
   976                           ;!    Space          Size  Autos    Used
   977                           ;!    COMMON           14      6      12
   978                           ;!    BANK0            80     11      37
   979                           ;!    BANK1            80      0       0
   980                           ;!    BANK3            96      0       0
   981                           ;!    BANK2            96      0       0
   982                           
   983                           ;!
   984                           ;!Pointer List with Targets:
   985                           ;!
   986                           ;!    None.
   987                           
   988                           
   989                           ;!
   990                           ;!Critical Paths under _main in COMMON
   991                           ;!
   992                           ;!    None.
   993                           ;!
   994                           ;!Critical Paths under _isr in COMMON
   995                           ;!
   996                           ;!    _isr->_spiWrite
   997                           ;!
   998                           ;!Critical Paths under _main in BANK0
   999                           ;!
  1000                           ;!    _main->___awdiv
  1001                           ;!
  1002                           ;!Critical Paths under _isr in BANK0
  1003                           ;!
  1004                           ;!    None.
  1005                           ;!
  1006                           ;!Critical Paths under _main in BANK1
  1007                           ;!
  1008                           ;!    None.
  1009                           ;!
  1010                           ;!Critical Paths under _isr in BANK1
  1011                           ;!
  1012                           ;!    None.
  1013                           ;!
  1014                           ;!Critical Paths under _main in BANK3
  1015                           ;!
  1016                           ;!    None.
  1017                           ;!
  1018                           ;!Critical Paths under _isr in BANK3
  1019                           ;!
  1020                           ;!    None.
  1021                           ;!
  1022                           ;!Critical Paths under _main in BANK2
  1023                           ;!
  1024                           ;!    None.
  1025                           ;!
  1026                           ;!Critical Paths under _isr in BANK2
  1027                           ;!
  1028                           ;!    None.
  1029                           
  1030 ;;
  1031 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1032 ;;
  1033                           
  1034                           ;!
  1035                           ;!Call Graph Tables:
  1036                           ;!
  1037                           ;! ---------------------------------------------------------------------------------
  1038                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1039                           ;! ---------------------------------------------------------------------------------
  1040                           ;! (0) _main                                                 2     2      0    3182
  1041                           ;!                                              9 BANK0      2     2      0
  1042                           ;!                            ___awdiv
  1043                           ;!                             _config
  1044                           ;!                             _mandar
  1045                           ;!                            _spiInit
  1046                           ;! ---------------------------------------------------------------------------------
  1047                           ;! (1) _spiInit                                              4     1      3     456
  1048                           ;!                                              0 BANK0      4     1      3
  1049                           ;! ---------------------------------------------------------------------------------
  1050                           ;! (1) _mandar                                               2     0      2     481
  1051                           ;!                                              0 BANK0      2     0      2
  1052                           ;! ---------------------------------------------------------------------------------
  1053                           ;! (1) _config                                               0     0      0       0
  1054                           ;! ---------------------------------------------------------------------------------
  1055                           ;! (1) ___awdiv                                              9     5      4    2245
  1056                           ;!                                              0 BANK0      9     5      4
  1057                           ;! ---------------------------------------------------------------------------------
  1058                           ;! Estimated maximum stack depth 1
  1059                           ;! ---------------------------------------------------------------------------------
  1060                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1061                           ;! ---------------------------------------------------------------------------------
  1062                           ;! (2) _isr                                                  4     4      0     782
  1063                           ;!                                              2 COMMON     4     4      0
  1064                           ;!                            _spiRead
  1065                           ;!                           _spiWrite
  1066                           ;! ---------------------------------------------------------------------------------
  1067                           ;! (3) _spiWrite                                             2     0      2     782
  1068                           ;!                                              0 COMMON     2     0      2
  1069                           ;! ---------------------------------------------------------------------------------
  1070                           ;! (3) _spiRead                                              0     0      0       0
  1071                           ;!                     _spiReceiveWait
  1072                           ;! ---------------------------------------------------------------------------------
  1073                           ;! (4) _spiReceiveWait                                       0     0      0       0
  1074                           ;! ---------------------------------------------------------------------------------
  1075                           ;! Estimated maximum stack depth 4
  1076                           ;! ---------------------------------------------------------------------------------
  1077                           ;!
  1078                           ;! Call Graph Graphs:
  1079                           ;!
  1080                           ;! _main (ROOT)
  1081                           ;!   ___awdiv
  1082                           ;!   _config
  1083                           ;!   _mandar
  1084                           ;!   _spiInit
  1085                           ;!
  1086                           ;! _isr (ROOT)
  1087                           ;!   _spiRead
  1088                           ;!     _spiReceiveWait
  1089                           ;!   _spiWrite
  1090                           ;!
  1091                           
  1092                           ;! Address spaces:
  1093                           
  1094                           ;!Name               Size   Autos  Total    Cost      Usage
  1095                           ;!BITCOMMON            E      0       0       0        0.0%
  1096                           ;!EEDATA             100      0       0       0        0.0%
  1097                           ;!NULL                 0      0       0       0        0.0%
  1098                           ;!CODE                 0      0       0       0        0.0%
  1099                           ;!COMMON               E      6       C       1       85.7%
  1100                           ;!BITSFR0              0      0       0       1        0.0%
  1101                           ;!SFR0                 0      0       0       1        0.0%
  1102                           ;!BITSFR1              0      0       0       2        0.0%
  1103                           ;!SFR1                 0      0       0       2        0.0%
  1104                           ;!STACK                0      0       0       2        0.0%
  1105                           ;!ABS                  0      0      31       3        0.0%
  1106                           ;!BITBANK0            50      0       0       4        0.0%
  1107                           ;!BITSFR3              0      0       0       4        0.0%
  1108                           ;!SFR3                 0      0       0       4        0.0%
  1109                           ;!BANK0               50      B      25       5       46.3%
  1110                           ;!BITSFR2              0      0       0       5        0.0%
  1111                           ;!SFR2                 0      0       0       5        0.0%
  1112                           ;!BITBANK1            50      0       0       6        0.0%
  1113                           ;!BANK1               50      0       0       7        0.0%
  1114                           ;!BITBANK3            60      0       0       8        0.0%
  1115                           ;!BANK3               60      0       0       9        0.0%
  1116                           ;!BITBANK2            60      0       0      10        0.0%
  1117                           ;!BANK2               60      0       0      11        0.0%
  1118                           ;!DATA                 0      0      31      12        0.0%
  1119                           
  1120                           	global	_main
  1121                           
  1122 ;; *************** function _main *****************
  1123 ;; Defined at:
  1124 ;;		line 61 in file "Prin-Raspi.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;		None
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;		None
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  1    wreg      void 
  1131 ;; Registers used:
  1132 ;;		wreg, status,2, status,0, pclath, cstack
  1133 ;; Tracked objects:
  1134 ;;		On entry : B00/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1138 ;;      Params:         0       0       0       0       0
  1139 ;;      Locals:         0       0       0       0       0
  1140 ;;      Temps:          0       2       0       0       0
  1141 ;;      Totals:         0       2       0       0       0
  1142 ;;Total ram usage:        2 bytes
  1143 ;; Hardware stack levels required when called:    4
  1144 ;; This function calls:
  1145 ;;		___awdiv
  1146 ;;		_config
  1147 ;;		_mandar
  1148 ;;		_spiInit
  1149 ;; This function is called by:
  1150 ;;		Startup code after reset
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1154                           	file	"Prin-Raspi.c"
  1155                           	line	61
  1156                           global __pmaintext
  1157                           __pmaintext:	;psect for function _main
  1158  0022                     psect	maintext
  1159                           	file	"Prin-Raspi.c"
  1160                           	line	61
  1161                           	global	__size_of_main
  1162                           	__size_of_main	equ	__end_of_main-_main
  1163  01F3                     	
  1164                           _main:	
  1165  0022                     ;incstack = 0
  1166                           	opt	stack 4
  1167                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1168                           	line	62
  1169                           	
  1170                           l1252:	
  1171  0022                     ;Prin-Raspi.c: 62:             B = B1/2;
  1172                           	movlw	low(0FFh)
  1173  0022  30FF               	bsf	status, 5	;RP0=1, select bank3
  1174  0023  1683               	bsf	status, 6	;RP1=1, select bank3
  1175  0024  1703               	movwf	(392)^0180h	;volatile
  1176  0025  0088               	line	63
  1177                           ;Prin-Raspi.c: 63:             b = B+1;
  1178                           	movlw	low(0FFh)
  1179  0026  30FF               	bsf	status, 5	;RP0=1, select bank1
  1180  0027  1683               	bcf	status, 6	;RP1=0, select bank1
  1181  0028  1303               	movwf	(133)^080h	;volatile
  1182  0029  0085               	line	64
  1183                           	
  1184                           l1254:	
  1185  002A                     ;Prin-Raspi.c: 64:         } else{
  1186                           	bsf	(11),7	;volatile
  1187  002A  178B               	line	65
  1188                           	
  1189                           l1256:	
  1190  002B                     ;Prin-Raspi.c: 65:             B = B1/2;
  1191                           	bsf	(11),6	;volatile
  1192  002B  170B               	line	66
  1193                           	
  1194                           l1258:	
  1195  002C                     ;Prin-Raspi.c: 66:             b = B;
  1196                           	bcf	status, 5	;RP0=0, select bank0
  1197  002C  1283               	bcf	status, 6	;RP1=0, select bank0
  1198  002D  1303               	bcf	(12),3	;volatile
  1199  002E  118C               	line	67
  1200                           	
  1201                           l1260:	
  1202  002F                     ;Prin-Raspi.c: 67:         }
  1203                           	bsf	status, 5	;RP0=1, select bank1
  1204  002F  1683               	bcf	status, 6	;RP1=0, select bank1
  1205  0030  1303               	bsf	(140)^080h,3	;volatile
  1206  0031  158C               	line	68
  1207                           	
  1208                           l1262:	
  1209  0032                     ;Prin-Raspi.c: 68:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1210                           	bsf	(133)^080h,5	;volatile
  1211  0032  1685               	line	69
  1212                           	
  1213                           l1264:	
  1214  0033                     ;Prin-Raspi.c: 69: 
  1215                           	bcf	status, 5	;RP0=0, select bank0
  1216  0033  1283               	bcf	status, 6	;RP1=0, select bank0
  1217  0034  1303               	clrf	(spiInit@sDataSample)
  1218  0035  01BA               	clrf	(spiInit@sClockIdle)
  1219  0036  01BB               	clrf	(spiInit@sTransmitEdge)
  1220  0037  01BC               	movlw	low(024h)
  1221  0038  3024               	fcall	_spiInit
  1222  0039  120A  118A  2370  120A  118A  	line	70
  1223                           	
  1224                           l1266:	
  1225  003E                     ;Prin-Raspi.c: 70: 
  1226                           	fcall	_config
  1227  003E  120A  118A  238F  120A  118A  	goto	l1268
  1228  0043  2844               	line	71
  1229                           ;Prin-Raspi.c: 71:         mandar(3);
  1230                           	
  1231                           l113:	
  1232  0044                     	line	73
  1233                           	
  1234                           l1268:	
  1235  0044                     ;Prin-Raspi.c: 73:         }
  1236                           	movlw	01h
  1237  0044  3001               	bcf	status, 5	;RP0=0, select bank0
  1238  0045  1283               	bcf	status, 6	;RP1=0, select bank0
  1239  0046  1303               	movwf	(mandar@dato)
  1240  0047  00BA               	movlw	0
  1241  0048  3000               	movwf	((mandar@dato))+1
  1242  0049  00BB               	fcall	_mandar
  1243  004A  120A  118A  23A3  120A  118A  	line	74
  1244                           ;Prin-Raspi.c: 74:         C1 = RCREG;
  1245                           	goto	l114
  1246  004F  2850               	
  1247                           l115:	
  1248  0050                     	line	75
  1249                           ;Prin-Raspi.c: 75:         if(C1%2){
  1250                           	
  1251                           l114:	
  1252  0050                     	line	74
  1253                           ;Prin-Raspi.c: 74:         C1 = RCREG;
  1254                           	bcf	status, 5	;RP0=0, select bank0
  1255  0050  1283               	bcf	status, 6	;RP1=0, select bank0
  1256  0051  1303               	btfss	(101/8),(101)&7	;volatile
  1257  0052  1E8C               	goto	u811
  1258  0053  2855               	goto	u810
  1259  0054  2856               u811:
  1260  0055                     	goto	l114
  1261  0055  2850               u810:
  1262  0056                     	goto	l1270
  1263  0056  2857               	
  1264                           l116:	
  1265  0057                     	line	76
  1266                           	
  1267                           l1270:	
  1268  0057                     ;Prin-Raspi.c: 76:             C = C1/2;
  1269                           	movf	(26),w	;volatile
  1270  0057  081A               	movwf	(??_main+0)+0
  1271  0058  00C3               	clrf	(??_main+0)+0+1
  1272  0059  01C4               	movf	0+(??_main+0)+0,w
  1273  005A  0843               	movwf	(_A1)
  1274  005B  00A8               	movf	1+(??_main+0)+0,w
  1275  005C  0844               	movwf	(_A1+1)
  1276  005D  00A9               	line	77
  1277                           	
  1278                           l1272:	
  1279  005E                     ;Prin-Raspi.c: 77:             c = C+1;
  1280                           	btfss	(_A1),(0)&7
  1281  005E  1C28               	goto	u821
  1282  005F  2861               	goto	u820
  1283  0060  2862               u821:
  1284  0061                     	goto	l1278
  1285  0061  287E               u820:
  1286  0062                     	line	78
  1287                           	
  1288                           l1274:	
  1289  0062                     ;Prin-Raspi.c: 78:         } else{
  1290                           	movlw	02h
  1291  0062  3002               	movwf	(___awdiv@divisor)
  1292  0063  00BA               	movlw	0
  1293  0064  3000               	movwf	((___awdiv@divisor))+1
  1294  0065  00BB               	movf	(_A1+1),w
  1295  0066  0829               	movwf	(___awdiv@dividend+1)
  1296  0067  00BD               	movf	(_A1),w
  1297  0068  0828               	movwf	(___awdiv@dividend)
  1298  0069  00BC               	fcall	___awdiv
  1299  006A  120A  118A  22FD  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1300  006F  1283               	bcf	status, 6	;RP1=0, select bank0
  1301  0070  1303               	movf	(1+(?___awdiv)),w
  1302  0071  083B               	movwf	(_A+1)
  1303  0072  00F5               	movf	(0+(?___awdiv)),w
  1304  0073  083A               	movwf	(_A)
  1305  0074  00F4               	line	79
  1306                           	
  1307                           l1276:	
  1308  0075                     ;Prin-Raspi.c: 79:             C = C1/2;
  1309                           	movf	(_A),w
  1310  0075  0874               	addlw	low(01h)
  1311  0076  3E01               	movwf	(_a)
  1312  0077  00B8               	movf	(_A+1),w
  1313  0078  0875               	skipnc
  1314  0079  1803               	addlw	1
  1315  007A  3E01               	addlw	high(01h)
  1316  007B  3E00               	movwf	1+(_a)
  1317  007C  00B9               	line	80
  1318                           ;Prin-Raspi.c: 80:             c = C;
  1319                           	goto	l1282
  1320  007D  2896               	
  1321                           l117:	
  1322  007E                     	line	81
  1323                           	
  1324                           l1278:	
  1325  007E                     ;Prin-Raspi.c: 81:         }
  1326                           	movlw	02h
  1327  007E  3002               	movwf	(___awdiv@divisor)
  1328  007F  00BA               	movlw	0
  1329  0080  3000               	movwf	((___awdiv@divisor))+1
  1330  0081  00BB               	movf	(_A1+1),w
  1331  0082  0829               	movwf	(___awdiv@dividend+1)
  1332  0083  00BD               	movf	(_A1),w
  1333  0084  0828               	movwf	(___awdiv@dividend)
  1334  0085  00BC               	fcall	___awdiv
  1335  0086  120A  118A  22FD  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1336  008B  1283               	bcf	status, 6	;RP1=0, select bank0
  1337  008C  1303               	movf	(1+(?___awdiv)),w
  1338  008D  083B               	movwf	(_A+1)
  1339  008E  00F5               	movf	(0+(?___awdiv)),w
  1340  008F  083A               	movwf	(_A)
  1341  0090  00F4               	line	82
  1342                           	
  1343                           l1280:	
  1344  0091                     ;Prin-Raspi.c: 82:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1345                           	movf	(_A+1),w
  1346  0091  0875               	movwf	(_a+1)
  1347  0092  00B9               	movf	(_A),w
  1348  0093  0874               	movwf	(_a)
  1349  0094  00B8               	goto	l1282
  1350  0095  2896               	line	83
  1351                           ;Prin-Raspi.c: 83: 
  1352                           	
  1353                           l118:	
  1354  0096                     	line	84
  1355                           	
  1356                           l1282:	
  1357  0096                     ;Prin-Raspi.c: 84: 
  1358                           	opt asmopt_push
  1359                           opt asmopt_off
  1360                           movlw	130
  1361  0096  3082               	bcf	status, 5	;RP0=0, select bank0
  1362  0097  1283               	bcf	status, 6	;RP1=0, select bank0
  1363  0098  1303               movwf	((??_main+0)+0+1),f
  1364  0099  00C4               	movlw	221
  1365  009A  30DD               movwf	((??_main+0)+0),f
  1366  009B  00C3               	u917:
  1367  009C                     decfsz	((??_main+0)+0),f
  1368  009C  0BC3               	goto	u917
  1369  009D  289C               	decfsz	((??_main+0)+0+1),f
  1370  009E  0BC4               	goto	u917
  1371  009F  289C               opt asmopt_pop
  1372                           
  1373                           	line	87
  1374                           ;Prin-Raspi.c: 87:         }
  1375                           	movlw	02h
  1376  00A0  3002               	bcf	status, 5	;RP0=0, select bank0
  1377  00A1  1283               	bcf	status, 6	;RP1=0, select bank0
  1378  00A2  1303               	movwf	(mandar@dato)
  1379  00A3  00BA               	movlw	0
  1380  00A4  3000               	movwf	((mandar@dato))+1
  1381  00A5  00BB               	fcall	_mandar
  1382  00A6  120A  118A  23A3  120A  118A  	line	88
  1383                           ;Prin-Raspi.c: 88:         D1 = RCREG;
  1384                           	goto	l119
  1385  00AB  28AC               	
  1386                           l120:	
  1387  00AC                     	line	89
  1388                           ;Prin-Raspi.c: 89:         if(D1%2){
  1389                           	
  1390                           l119:	
  1391  00AC                     	line	88
  1392                           ;Prin-Raspi.c: 88:         D1 = RCREG;
  1393                           	bcf	status, 5	;RP0=0, select bank0
  1394  00AC  1283               	bcf	status, 6	;RP1=0, select bank0
  1395  00AD  1303               	btfss	(101/8),(101)&7	;volatile
  1396  00AE  1E8C               	goto	u831
  1397  00AF  28B1               	goto	u830
  1398  00B0  28B2               u831:
  1399  00B1                     	goto	l119
  1400  00B1  28AC               u830:
  1401  00B2                     	goto	l1284
  1402  00B2  28B3               	
  1403                           l121:	
  1404  00B3                     	line	90
  1405                           	
  1406                           l1284:	
  1407  00B3                     ;Prin-Raspi.c: 90:             D = D1/2;
  1408                           	movf	(26),w	;volatile
  1409  00B3  081A               	movwf	(??_main+0)+0
  1410  00B4  00C3               	clrf	(??_main+0)+0+1
  1411  00B5  01C4               	movf	0+(??_main+0)+0,w
  1412  00B6  0843               	movwf	(_B1)
  1413  00B7  00A6               	movf	1+(??_main+0)+0,w
  1414  00B8  0844               	movwf	(_B1+1)
  1415  00B9  00A7               	line	91
  1416                           	
  1417                           l1286:	
  1418  00BA                     ;Prin-Raspi.c: 91:             d = D+1;
  1419                           	btfss	(_B1),(0)&7
  1420  00BA  1C26               	goto	u841
  1421  00BB  28BD               	goto	u840
  1422  00BC  28BE               u841:
  1423  00BD                     	goto	l1292
  1424  00BD  28DA               u840:
  1425  00BE                     	line	92
  1426                           	
  1427                           l1288:	
  1428  00BE                     ;Prin-Raspi.c: 92:         } else{
  1429                           	movlw	02h
  1430  00BE  3002               	movwf	(___awdiv@divisor)
  1431  00BF  00BA               	movlw	0
  1432  00C0  3000               	movwf	((___awdiv@divisor))+1
  1433  00C1  00BB               	movf	(_B1+1),w
  1434  00C2  0827               	movwf	(___awdiv@dividend+1)
  1435  00C3  00BD               	movf	(_B1),w
  1436  00C4  0826               	movwf	(___awdiv@dividend)
  1437  00C5  00BC               	fcall	___awdiv
  1438  00C6  120A  118A  22FD  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1439  00CB  1283               	bcf	status, 6	;RP1=0, select bank0
  1440  00CC  1303               	movf	(1+(?___awdiv)),w
  1441  00CD  083B               	movwf	(_B+1)
  1442  00CE  00F3               	movf	(0+(?___awdiv)),w
  1443  00CF  083A               	movwf	(_B)
  1444  00D0  00F2               	line	93
  1445                           	
  1446                           l1290:	
  1447  00D1                     ;Prin-Raspi.c: 93:             D = D1/2;
  1448                           	movf	(_B),w
  1449  00D1  0872               	addlw	low(01h)
  1450  00D2  3E01               	movwf	(_b)
  1451  00D3  00B6               	movf	(_B+1),w
  1452  00D4  0873               	skipnc
  1453  00D5  1803               	addlw	1
  1454  00D6  3E01               	addlw	high(01h)
  1455  00D7  3E00               	movwf	1+(_b)
  1456  00D8  00B7               	line	94
  1457                           ;Prin-Raspi.c: 94:             d = D;
  1458                           	goto	l1296
  1459  00D9  28F2               	
  1460                           l122:	
  1461  00DA                     	line	95
  1462                           	
  1463                           l1292:	
  1464  00DA                     ;Prin-Raspi.c: 95:         }
  1465                           	movlw	02h
  1466  00DA  3002               	movwf	(___awdiv@divisor)
  1467  00DB  00BA               	movlw	0
  1468  00DC  3000               	movwf	((___awdiv@divisor))+1
  1469  00DD  00BB               	movf	(_B1+1),w
  1470  00DE  0827               	movwf	(___awdiv@dividend+1)
  1471  00DF  00BD               	movf	(_B1),w
  1472  00E0  0826               	movwf	(___awdiv@dividend)
  1473  00E1  00BC               	fcall	___awdiv
  1474  00E2  120A  118A  22FD  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1475  00E7  1283               	bcf	status, 6	;RP1=0, select bank0
  1476  00E8  1303               	movf	(1+(?___awdiv)),w
  1477  00E9  083B               	movwf	(_B+1)
  1478  00EA  00F3               	movf	(0+(?___awdiv)),w
  1479  00EB  083A               	movwf	(_B)
  1480  00EC  00F2               	line	96
  1481                           	
  1482                           l1294:	
  1483  00ED                     ;Prin-Raspi.c: 96:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1484                           	movf	(_B+1),w
  1485  00ED  0873               	movwf	(_b+1)
  1486  00EE  00B7               	movf	(_B),w
  1487  00EF  0872               	movwf	(_b)
  1488  00F0  00B6               	goto	l1296
  1489  00F1  28F2               	line	97
  1490                           ;Prin-Raspi.c: 97: 
  1491                           	
  1492                           l123:	
  1493  00F2                     	line	98
  1494                           	
  1495                           l1296:	
  1496  00F2                     ;Prin-Raspi.c: 98: 
  1497                           	opt asmopt_push
  1498                           opt asmopt_off
  1499                           movlw	130
  1500  00F2  3082               	bcf	status, 5	;RP0=0, select bank0
  1501  00F3  1283               	bcf	status, 6	;RP1=0, select bank0
  1502  00F4  1303               movwf	((??_main+0)+0+1),f
  1503  00F5  00C4               	movlw	221
  1504  00F6  30DD               movwf	((??_main+0)+0),f
  1505  00F7  00C3               	u927:
  1506  00F8                     decfsz	((??_main+0)+0),f
  1507  00F8  0BC3               	goto	u927
  1508  00F9  28F8               	decfsz	((??_main+0)+0+1),f
  1509  00FA  0BC4               	goto	u927
  1510  00FB  28F8               opt asmopt_pop
  1511                           
  1512                           	line	101
  1513                           ;Prin-Raspi.c: 101:         }
  1514                           	movlw	03h
  1515  00FC  3003               	bcf	status, 5	;RP0=0, select bank0
  1516  00FD  1283               	bcf	status, 6	;RP1=0, select bank0
  1517  00FE  1303               	movwf	(mandar@dato)
  1518  00FF  00BA               	movlw	0
  1519  0100  3000               	movwf	((mandar@dato))+1
  1520  0101  00BB               	fcall	_mandar
  1521  0102  120A  118A  23A3  120A  118A  	line	102
  1522                           ;Prin-Raspi.c: 102:         E1 = RCREG;
  1523                           	goto	l124
  1524  0107  2908               	
  1525                           l125:	
  1526  0108                     	line	103
  1527                           ;Prin-Raspi.c: 103:         if(E1%2){
  1528                           	
  1529                           l124:	
  1530  0108                     	line	102
  1531                           ;Prin-Raspi.c: 102:         E1 = RCREG;
  1532                           	bcf	status, 5	;RP0=0, select bank0
  1533  0108  1283               	bcf	status, 6	;RP1=0, select bank0
  1534  0109  1303               	btfss	(101/8),(101)&7	;volatile
  1535  010A  1E8C               	goto	u851
  1536  010B  290D               	goto	u850
  1537  010C  290E               u851:
  1538  010D                     	goto	l124
  1539  010D  2908               u850:
  1540  010E                     	goto	l1298
  1541  010E  290F               	
  1542                           l126:	
  1543  010F                     	line	104
  1544                           	
  1545                           l1298:	
  1546  010F                     ;Prin-Raspi.c: 104:             E = E1/2;
  1547                           	movf	(26),w	;volatile
  1548  010F  081A               	movwf	(??_main+0)+0
  1549  0110  00C3               	clrf	(??_main+0)+0+1
  1550  0111  01C4               	movf	0+(??_main+0)+0,w
  1551  0112  0843               	movwf	(_C1)
  1552  0113  00A4               	movf	1+(??_main+0)+0,w
  1553  0114  0844               	movwf	(_C1+1)
  1554  0115  00A5               	line	105
  1555                           	
  1556                           l1300:	
  1557  0116                     ;Prin-Raspi.c: 105:             e = E+1;
  1558                           	btfss	(_C1),(0)&7
  1559  0116  1C24               	goto	u861
  1560  0117  2919               	goto	u860
  1561  0118  291A               u861:
  1562  0119                     	goto	l1306
  1563  0119  2936               u860:
  1564  011A                     	line	106
  1565                           	
  1566                           l1302:	
  1567  011A                     ;Prin-Raspi.c: 106:         } else{
  1568                           	movlw	02h
  1569  011A  3002               	movwf	(___awdiv@divisor)
  1570  011B  00BA               	movlw	0
  1571  011C  3000               	movwf	((___awdiv@divisor))+1
  1572  011D  00BB               	movf	(_C1+1),w
  1573  011E  0825               	movwf	(___awdiv@dividend+1)
  1574  011F  00BD               	movf	(_C1),w
  1575  0120  0824               	movwf	(___awdiv@dividend)
  1576  0121  00BC               	fcall	___awdiv
  1577  0122  120A  118A  22FD  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1578  0127  1283               	bcf	status, 6	;RP1=0, select bank0
  1579  0128  1303               	movf	(1+(?___awdiv)),w
  1580  0129  083B               	movwf	(_C+1)
  1581  012A  00AF               	movf	(0+(?___awdiv)),w
  1582  012B  083A               	movwf	(_C)
  1583  012C  00AE               	line	107
  1584                           	
  1585                           l1304:	
  1586  012D                     ;Prin-Raspi.c: 107:             E = E1/2;
  1587                           	movf	(_C),w
  1588  012D  082E               	addlw	low(01h)
  1589  012E  3E01               	movwf	(_c)
  1590  012F  00B4               	movf	(_C+1),w
  1591  0130  082F               	skipnc
  1592  0131  1803               	addlw	1
  1593  0132  3E01               	addlw	high(01h)
  1594  0133  3E00               	movwf	1+(_c)
  1595  0134  00B5               	line	108
  1596                           ;Prin-Raspi.c: 108:             e = E;
  1597                           	goto	l1310
  1598  0135  294E               	
  1599                           l127:	
  1600  0136                     	line	109
  1601                           	
  1602                           l1306:	
  1603  0136                     ;Prin-Raspi.c: 109:         }
  1604                           	movlw	02h
  1605  0136  3002               	movwf	(___awdiv@divisor)
  1606  0137  00BA               	movlw	0
  1607  0138  3000               	movwf	((___awdiv@divisor))+1
  1608  0139  00BB               	movf	(_C1+1),w
  1609  013A  0825               	movwf	(___awdiv@dividend+1)
  1610  013B  00BD               	movf	(_C1),w
  1611  013C  0824               	movwf	(___awdiv@dividend)
  1612  013D  00BC               	fcall	___awdiv
  1613  013E  120A  118A  22FD  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1614  0143  1283               	bcf	status, 6	;RP1=0, select bank0
  1615  0144  1303               	movf	(1+(?___awdiv)),w
  1616  0145  083B               	movwf	(_C+1)
  1617  0146  00AF               	movf	(0+(?___awdiv)),w
  1618  0147  083A               	movwf	(_C)
  1619  0148  00AE               	line	110
  1620                           	
  1621                           l1308:	
  1622  0149                     ;Prin-Raspi.c: 110:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1623                           	movf	(_C+1),w
  1624  0149  082F               	movwf	(_c+1)
  1625  014A  00B5               	movf	(_C),w
  1626  014B  082E               	movwf	(_c)
  1627  014C  00B4               	goto	l1310
  1628  014D  294E               	line	111
  1629                           ;Prin-Raspi.c: 111:     }
  1630                           	
  1631                           l128:	
  1632  014E                     	line	112
  1633                           	
  1634                           l1310:	
  1635  014E                     ;Prin-Raspi.c: 112: }
  1636                           	opt asmopt_push
  1637                           opt asmopt_off
  1638                           movlw	130
  1639  014E  3082               	bcf	status, 5	;RP0=0, select bank0
  1640  014F  1283               	bcf	status, 6	;RP1=0, select bank0
  1641  0150  1303               movwf	((??_main+0)+0+1),f
  1642  0151  00C4               	movlw	221
  1643  0152  30DD               movwf	((??_main+0)+0),f
  1644  0153  00C3               	u937:
  1645  0154                     decfsz	((??_main+0)+0),f
  1646  0154  0BC3               	goto	u937
  1647  0155  2954               	decfsz	((??_main+0)+0+1),f
  1648  0156  0BC4               	goto	u937
  1649  0157  2954               opt asmopt_pop
  1650                           
  1651                           	line	115
  1652                           	movlw	04h
  1653  0158  3004               	bcf	status, 5	;RP0=0, select bank0
  1654  0159  1283               	bcf	status, 6	;RP1=0, select bank0
  1655  015A  1303               	movwf	(mandar@dato)
  1656  015B  00BA               	movlw	0
  1657  015C  3000               	movwf	((mandar@dato))+1
  1658  015D  00BB               	fcall	_mandar
  1659  015E  120A  118A  23A3  120A  118A  	line	116
  1660                           	goto	l129
  1661  0163  2964               	
  1662                           l130:	
  1663  0164                     	line	117
  1664                           	
  1665                           l129:	
  1666  0164                     	line	116
  1667                           	bcf	status, 5	;RP0=0, select bank0
  1668  0164  1283               	bcf	status, 6	;RP1=0, select bank0
  1669  0165  1303               	btfss	(101/8),(101)&7	;volatile
  1670  0166  1E8C               	goto	u871
  1671  0167  2969               	goto	u870
  1672  0168  296A               u871:
  1673  0169                     	goto	l129
  1674  0169  2964               u870:
  1675  016A                     	goto	l1312
  1676  016A  296B               	
  1677                           l131:	
  1678  016B                     	line	118
  1679                           	
  1680                           l1312:	
  1681  016B                     	movf	(26),w	;volatile
  1682  016B  081A               	movwf	(??_main+0)+0
  1683  016C  00C3               	clrf	(??_main+0)+0+1
  1684  016D  01C4               	movf	0+(??_main+0)+0,w
  1685  016E  0843               	movwf	(_D1)
  1686  016F  00A2               	movf	1+(??_main+0)+0,w
  1687  0170  0844               	movwf	(_D1+1)
  1688  0171  00A3               	line	119
  1689                           	
  1690                           l1314:	
  1691  0172                     	btfss	(_D1),(0)&7
  1692  0172  1C22               	goto	u881
  1693  0173  2975               	goto	u880
  1694  0174  2976               u881:
  1695  0175                     	goto	l1320
  1696  0175  2992               u880:
  1697  0176                     	line	120
  1698                           	
  1699                           l1316:	
  1700  0176                     	movlw	02h
  1701  0176  3002               	movwf	(___awdiv@divisor)
  1702  0177  00BA               	movlw	0
  1703  0178  3000               	movwf	((___awdiv@divisor))+1
  1704  0179  00BB               	movf	(_D1+1),w
  1705  017A  0823               	movwf	(___awdiv@dividend+1)
  1706  017B  00BD               	movf	(_D1),w
  1707  017C  0822               	movwf	(___awdiv@dividend)
  1708  017D  00BC               	fcall	___awdiv
  1709  017E  120A  118A  22FD  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1710  0183  1283               	bcf	status, 6	;RP1=0, select bank0
  1711  0184  1303               	movf	(1+(?___awdiv)),w
  1712  0185  083B               	movwf	(_D+1)
  1713  0186  00AD               	movf	(0+(?___awdiv)),w
  1714  0187  083A               	movwf	(_D)
  1715  0188  00AC               	line	121
  1716                           	
  1717                           l1318:	
  1718  0189                     	movf	(_D),w
  1719  0189  082C               	addlw	low(01h)
  1720  018A  3E01               	movwf	(_d)
  1721  018B  00B2               	movf	(_D+1),w
  1722  018C  082D               	skipnc
  1723  018D  1803               	addlw	1
  1724  018E  3E01               	addlw	high(01h)
  1725  018F  3E00               	movwf	1+(_d)
  1726  0190  00B3               	line	122
  1727                           	goto	l1324
  1728  0191  29AA               	
  1729                           l132:	
  1730  0192                     	line	123
  1731                           	
  1732                           l1320:	
  1733  0192                     	movlw	02h
  1734  0192  3002               	movwf	(___awdiv@divisor)
  1735  0193  00BA               	movlw	0
  1736  0194  3000               	movwf	((___awdiv@divisor))+1
  1737  0195  00BB               	movf	(_D1+1),w
  1738  0196  0823               	movwf	(___awdiv@dividend+1)
  1739  0197  00BD               	movf	(_D1),w
  1740  0198  0822               	movwf	(___awdiv@dividend)
  1741  0199  00BC               	fcall	___awdiv
  1742  019A  120A  118A  22FD  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1743  019F  1283               	bcf	status, 6	;RP1=0, select bank0
  1744  01A0  1303               	movf	(1+(?___awdiv)),w
  1745  01A1  083B               	movwf	(_D+1)
  1746  01A2  00AD               	movf	(0+(?___awdiv)),w
  1747  01A3  083A               	movwf	(_D)
  1748  01A4  00AC               	line	124
  1749                           	
  1750                           l1322:	
  1751  01A5                     	movf	(_D+1),w
  1752  01A5  082D               	movwf	(_d+1)
  1753  01A6  00B3               	movf	(_D),w
  1754  01A7  082C               	movwf	(_d)
  1755  01A8  00B2               	goto	l1324
  1756  01A9  29AA               	line	125
  1757                           	
  1758                           l133:	
  1759  01AA                     	line	126
  1760                           	
  1761                           l1324:	
  1762  01AA                     	opt asmopt_push
  1763                           opt asmopt_off
  1764                           movlw	130
  1765  01AA  3082               	bcf	status, 5	;RP0=0, select bank0
  1766  01AB  1283               	bcf	status, 6	;RP1=0, select bank0
  1767  01AC  1303               movwf	((??_main+0)+0+1),f
  1768  01AD  00C4               	movlw	221
  1769  01AE  30DD               movwf	((??_main+0)+0),f
  1770  01AF  00C3               	u947:
  1771  01B0                     decfsz	((??_main+0)+0),f
  1772  01B0  0BC3               	goto	u947
  1773  01B1  29B0               	decfsz	((??_main+0)+0+1),f
  1774  01B2  0BC4               	goto	u947
  1775  01B3  29B0               opt asmopt_pop
  1776                           
  1777                           	line	129
  1778                           	movlw	05h
  1779  01B4  3005               	bcf	status, 5	;RP0=0, select bank0
  1780  01B5  1283               	bcf	status, 6	;RP1=0, select bank0
  1781  01B6  1303               	movwf	(mandar@dato)
  1782  01B7  00BA               	movlw	0
  1783  01B8  3000               	movwf	((mandar@dato))+1
  1784  01B9  00BB               	fcall	_mandar
  1785  01BA  120A  118A  23A3  120A  118A  	line	130
  1786                           	goto	l134
  1787  01BF  29C0               	
  1788                           l135:	
  1789  01C0                     	line	131
  1790                           	
  1791                           l134:	
  1792  01C0                     	line	130
  1793                           	bcf	status, 5	;RP0=0, select bank0
  1794  01C0  1283               	bcf	status, 6	;RP1=0, select bank0
  1795  01C1  1303               	btfss	(101/8),(101)&7	;volatile
  1796  01C2  1E8C               	goto	u891
  1797  01C3  29C5               	goto	u890
  1798  01C4  29C6               u891:
  1799  01C5                     	goto	l134
  1800  01C5  29C0               u890:
  1801  01C6                     	goto	l1326
  1802  01C6  29C7               	
  1803                           l136:	
  1804  01C7                     	line	132
  1805                           	
  1806                           l1326:	
  1807  01C7                     	movf	(26),w	;volatile
  1808  01C7  081A               	movwf	(??_main+0)+0
  1809  01C8  00C3               	clrf	(??_main+0)+0+1
  1810  01C9  01C4               	movf	0+(??_main+0)+0,w
  1811  01CA  0843               	movwf	(_E1)
  1812  01CB  00A0               	movf	1+(??_main+0)+0,w
  1813  01CC  0844               	movwf	(_E1+1)
  1814  01CD  00A1               	line	133
  1815                           	
  1816                           l1328:	
  1817  01CE                     	btfss	(_E1),(0)&7
  1818  01CE  1C20               	goto	u901
  1819  01CF  29D1               	goto	u900
  1820  01D0  29D2               u901:
  1821  01D1                     	goto	l1334
  1822  01D1  29EE               u900:
  1823  01D2                     	line	134
  1824                           	
  1825                           l1330:	
  1826  01D2                     	movlw	02h
  1827  01D2  3002               	movwf	(___awdiv@divisor)
  1828  01D3  00BA               	movlw	0
  1829  01D4  3000               	movwf	((___awdiv@divisor))+1
  1830  01D5  00BB               	movf	(_E1+1),w
  1831  01D6  0821               	movwf	(___awdiv@dividend+1)
  1832  01D7  00BD               	movf	(_E1),w
  1833  01D8  0820               	movwf	(___awdiv@dividend)
  1834  01D9  00BC               	fcall	___awdiv
  1835  01DA  120A  118A  22FD  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1836  01DF  1283               	bcf	status, 6	;RP1=0, select bank0
  1837  01E0  1303               	movf	(1+(?___awdiv)),w
  1838  01E1  083B               	movwf	(_E+1)
  1839  01E2  00AB               	movf	(0+(?___awdiv)),w
  1840  01E3  083A               	movwf	(_E)
  1841  01E4  00AA               	line	135
  1842                           	
  1843                           l1332:	
  1844  01E5                     	movf	(_E),w
  1845  01E5  082A               	addlw	low(01h)
  1846  01E6  3E01               	movwf	(_e)
  1847  01E7  00B0               	movf	(_E+1),w
  1848  01E8  082B               	skipnc
  1849  01E9  1803               	addlw	1
  1850  01EA  3E01               	addlw	high(01h)
  1851  01EB  3E00               	movwf	1+(_e)
  1852  01EC  00B1               	line	136
  1853                           	goto	l1338
  1854  01ED  2A06               	
  1855                           l137:	
  1856  01EE                     	line	137
  1857                           	
  1858                           l1334:	
  1859  01EE                     	movlw	02h
  1860  01EE  3002               	movwf	(___awdiv@divisor)
  1861  01EF  00BA               	movlw	0
  1862  01F0  3000               	movwf	((___awdiv@divisor))+1
  1863  01F1  00BB               	movf	(_E1+1),w
  1864  01F2  0821               	movwf	(___awdiv@dividend+1)
  1865  01F3  00BD               	movf	(_E1),w
  1866  01F4  0820               	movwf	(___awdiv@dividend)
  1867  01F5  00BC               	fcall	___awdiv
  1868  01F6  120A  118A  22FD  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1869  01FB  1283               	bcf	status, 6	;RP1=0, select bank0
  1870  01FC  1303               	movf	(1+(?___awdiv)),w
  1871  01FD  083B               	movwf	(_E+1)
  1872  01FE  00AB               	movf	(0+(?___awdiv)),w
  1873  01FF  083A               	movwf	(_E)
  1874  0200  00AA               	line	138
  1875                           	
  1876                           l1336:	
  1877  0201                     	movf	(_E+1),w
  1878  0201  082B               	movwf	(_e+1)
  1879  0202  00B1               	movf	(_E),w
  1880  0203  082A               	movwf	(_e)
  1881  0204  00B0               	goto	l1338
  1882  0205  2A06               	line	139
  1883                           	
  1884                           l138:	
  1885  0206                     	line	140
  1886                           	
  1887                           l1338:	
  1888  0206                     	opt asmopt_push
  1889                           opt asmopt_off
  1890                           movlw	130
  1891  0206  3082               	bcf	status, 5	;RP0=0, select bank0
  1892  0207  1283               	bcf	status, 6	;RP1=0, select bank0
  1893  0208  1303               movwf	((??_main+0)+0+1),f
  1894  0209  00C4               	movlw	221
  1895  020A  30DD               movwf	((??_main+0)+0),f
  1896  020B  00C3               	u957:
  1897  020C                     decfsz	((??_main+0)+0),f
  1898  020C  0BC3               	goto	u957
  1899  020D  2A0C               	decfsz	((??_main+0)+0+1),f
  1900  020E  0BC4               	goto	u957
  1901  020F  2A0C               opt asmopt_pop
  1902                           
  1903                           	goto	l1268
  1904  0210  2844               	line	141
  1905                           	
  1906                           l139:	
  1907  0211                     	goto	l1268
  1908  0211  2844               	
  1909                           l140:	
  1910  0212                     	line	142
  1911                           	
  1912                           l141:	
  1913  0212                     	global	start
  1914                           	ljmp	start
  1915  0212  120A  118A  280C   	opt stack 0
  1916                           GLOBAL	__end_of_main
  1917                           	__end_of_main:
  1918  0215                     	signat	_main,89
  1919                           	global	_spiInit
  1920                           
  1921 ;; *************** function _spiInit *****************
  1922 ;; Defined at:
  1923 ;;		line 12 in file "SPI.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;  sType           1    wreg     enum E1264
  1926 ;;  sDataSample     1    0[BANK0 ] enum E1272
  1927 ;;  sClockIdle      1    1[BANK0 ] enum E1276
  1928 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;  sType           1    3[BANK0 ] enum E1264
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      void 
  1933 ;; Registers used:
  1934 ;;		wreg, status,2, status,0
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1940 ;;      Params:         0       3       0       0       0
  1941 ;;      Locals:         0       1       0       0       0
  1942 ;;      Temps:          0       0       0       0       0
  1943 ;;      Totals:         0       4       0       0       0
  1944 ;;Total ram usage:        4 bytes
  1945 ;; Hardware stack levels used:    1
  1946 ;; Hardware stack levels required when called:    3
  1947 ;; This function calls:
  1948 ;;		Nothing
  1949 ;; This function is called by:
  1950 ;;		_main
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1954                           	file	"SPI.c"
  1955                           	line	12
  1956                           global __ptext1
  1957                           __ptext1:	;psect for function _spiInit
  1958  0370                     psect	text1
  1959                           	file	"SPI.c"
  1960                           	line	12
  1961                           	global	__size_of_spiInit
  1962                           	__size_of_spiInit	equ	__end_of_spiInit-_spiInit
  1963  001F                     	
  1964                           _spiInit:	
  1965  0370                     ;incstack = 0
  1966                           	opt	stack 4
  1967                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1968                           ;spiInit@sType stored from wreg
  1969                           	bcf	status, 5	;RP0=0, select bank0
  1970  0370  1283               	bcf	status, 6	;RP1=0, select bank0
  1971  0371  1303               	movwf	(spiInit@sType)
  1972  0372  00BD               	line	14
  1973                           	
  1974                           l1198:	
  1975  0373                     ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
                                 ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  1976                           	bsf	status, 5	;RP0=1, select bank1
  1977  0373  1683               	bcf	status, 6	;RP1=0, select bank1
  1978  0374  1303               	bcf	(1085/8)^080h,(1085)&7	;volatile
  1979  0375  1287               	line	15
  1980                           ;SPI.c: 15:     if(sType & 0b00000100)
  1981                           	bcf	status, 5	;RP0=0, select bank0
  1982  0376  1283               	bcf	status, 6	;RP1=0, select bank0
  1983  0377  1303               	btfss	(spiInit@sType),(2)&7
  1984  0378  1D3D               	goto	u701
  1985  0379  2B7B               	goto	u700
  1986  037A  2B7C               u701:
  1987  037B                     	goto	l1204
  1988  037B  2B82               u700:
  1989  037C                     	line	17
  1990                           	
  1991                           l1200:	
  1992  037C                     ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  1993                           	movf	(spiInit@sTransmitEdge),w
  1994  037C  083C               	bsf	status, 5	;RP0=1, select bank1
  1995  037D  1683               	bcf	status, 6	;RP1=0, select bank1
  1996  037E  1303               	movwf	(148)^080h	;volatile
  1997  037F  0094               	line	18
  1998                           	
  1999                           l1202:	
  2000  0380                     ;SPI.c: 18:         TRISC3 = 1;
  2001                           	bsf	(1083/8)^080h,(1083)&7	;volatile
  2002  0380  1587               	line	19
  2003                           ;SPI.c: 19:     }
  2004                           	goto	l157
  2005  0381  2B89               	line	20
  2006                           ;SPI.c: 20:     else
  2007                           	
  2008                           l156:	
  2009  0382                     	line	22
  2010                           	
  2011                           l1204:	
  2012  0382                     ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  2013                           	bcf	status, 5	;RP0=0, select bank0
  2014  0382  1283               	movf	(spiInit@sDataSample),w
  2015  0383  083A               	iorwf	(spiInit@sTransmitEdge),w
  2016  0384  043C               	bsf	status, 5	;RP0=1, select bank1
  2017  0385  1683               	bcf	status, 6	;RP1=0, select bank1
  2018  0386  1303               	movwf	(148)^080h	;volatile
  2019  0387  0094               	line	23
  2020                           	
  2021                           l1206:	
  2022  0388                     ;SPI.c: 23:         TRISC3 = 0;
  2023                           	bcf	(1083/8)^080h,(1083)&7	;volatile
  2024  0388  1187               	line	24
  2025                           ;SPI.c: 24:     }
  2026                           	
  2027                           l157:	
  2028  0389                     	line	26
  2029                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  2030                           	bcf	status, 5	;RP0=0, select bank0
  2031  0389  1283               	bcf	status, 6	;RP1=0, select bank0
  2032  038A  1303               	movf	(spiInit@sType),w
  2033  038B  083D               	iorwf	(spiInit@sClockIdle),w
  2034  038C  043B               	movwf	(20)	;volatile
  2035  038D  0094               	line	27
  2036                           	
  2037                           l158:	
  2038  038E                     	return
  2039  038E  0008               	opt stack 0
  2040                           GLOBAL	__end_of_spiInit
  2041                           	__end_of_spiInit:
  2042  038F                     	signat	_spiInit,16505
  2043                           	global	_mandar
  2044                           
  2045 ;; *************** function _mandar *****************
  2046 ;; Defined at:
  2047 ;;		line 24 in file "USART1.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;  dato            2    0[BANK0 ] int 
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;		None
  2052 ;; Return value:  Size  Location     Type
  2053 ;;                  1    wreg      void 
  2054 ;; Registers used:
  2055 ;;		wreg
  2056 ;; Tracked objects:
  2057 ;;		On entry : 0/0
  2058 ;;		On exit  : 0/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2061 ;;      Params:         0       2       0       0       0
  2062 ;;      Locals:         0       0       0       0       0
  2063 ;;      Temps:          0       0       0       0       0
  2064 ;;      Totals:         0       2       0       0       0
  2065 ;;Total ram usage:        2 bytes
  2066 ;; Hardware stack levels used:    1
  2067 ;; Hardware stack levels required when called:    3
  2068 ;; This function calls:
  2069 ;;		Nothing
  2070 ;; This function is called by:
  2071 ;;		_main
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2075                           	file	"USART1.c"
  2076                           	line	24
  2077                           global __ptext2
  2078                           __ptext2:	;psect for function _mandar
  2079  03A3                     psect	text2
  2080                           	file	"USART1.c"
  2081                           	line	24
  2082                           	global	__size_of_mandar
  2083                           	__size_of_mandar	equ	__end_of_mandar-_mandar
  2084  000D                     	
  2085                           _mandar:	
  2086  03A3                     ;incstack = 0
  2087                           	opt	stack 4
  2088                           ; Regs used in _mandar: [wreg]
  2089                           	line	25
  2090                           	
  2091                           l1194:	
  2092  03A3                     ;USART1.c: 25:     while (TXSTAbits.TRMT == 0){}
  2093                           	goto	l18
  2094  03A3  2BA4               	
  2095                           l19:	
  2096  03A4                     	
  2097                           l18:	
  2098  03A4                     	bsf	status, 5	;RP0=1, select bank1
  2099  03A4  1683               	bcf	status, 6	;RP1=0, select bank1
  2100  03A5  1303               	btfss	(152)^080h,1	;volatile
  2101  03A6  1C98               	goto	u691
  2102  03A7  2BA9               	goto	u690
  2103  03A8  2BAA               u691:
  2104  03A9                     	goto	l18
  2105  03A9  2BA4               u690:
  2106  03AA                     	goto	l1196
  2107  03AA  2BAB               	
  2108                           l20:	
  2109  03AB                     	line	26
  2110                           	
  2111                           l1196:	
  2112  03AB                     ;USART1.c: 26:     TXREG = dato;
  2113                           	bcf	status, 5	;RP0=0, select bank0
  2114  03AB  1283               	bcf	status, 6	;RP1=0, select bank0
  2115  03AC  1303               	movf	(mandar@dato),w
  2116  03AD  083A               	movwf	(25)	;volatile
  2117  03AE  0099               	line	27
  2118                           	
  2119                           l21:	
  2120  03AF                     	return
  2121  03AF  0008               	opt stack 0
  2122                           GLOBAL	__end_of_mandar
  2123                           	__end_of_mandar:
  2124  03B0                     	signat	_mandar,4217
  2125                           	global	_config
  2126                           
  2127 ;; *************** function _config *****************
  2128 ;; Defined at:
  2129 ;;		line 12 in file "USART1.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;		None
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;		None
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		wreg, status,2
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2143 ;;      Params:         0       0       0       0       0
  2144 ;;      Locals:         0       0       0       0       0
  2145 ;;      Temps:          0       0       0       0       0
  2146 ;;      Totals:         0       0       0       0       0
  2147 ;;Total ram usage:        0 bytes
  2148 ;; Hardware stack levels used:    1
  2149 ;; Hardware stack levels required when called:    3
  2150 ;; This function calls:
  2151 ;;		Nothing
  2152 ;; This function is called by:
  2153 ;;		_main
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2157                           	line	12
  2158                           global __ptext3
  2159                           __ptext3:	;psect for function _config
  2160  038F                     psect	text3
  2161                           	file	"USART1.c"
  2162                           	line	12
  2163                           	global	__size_of_config
  2164                           	__size_of_config	equ	__end_of_config-_config
  2165  0014                     	
  2166                           _config:	
  2167  038F                     ;incstack = 0
  2168                           	opt	stack 4
  2169                           ; Regs used in _config: [wreg+status,2]
  2170                           	line	13
  2171                           	
  2172                           l1182:	
  2173  038F                     ;USART1.c: 13:     TXSTAbits.SYNC = 0;
  2174                           	bsf	status, 5	;RP0=1, select bank1
  2175  038F  1683               	bcf	status, 6	;RP1=0, select bank1
  2176  0390  1303               	bcf	(152)^080h,4	;volatile
  2177  0391  1218               	line	14
  2178                           ;USART1.c: 14:     TXSTAbits.BRGH = 0;
  2179                           	bcf	(152)^080h,2	;volatile
  2180  0392  1118               	line	15
  2181                           ;USART1.c: 15:     BAUDCTLbits.BRG16 = 1;
  2182                           	bsf	status, 5	;RP0=1, select bank3
  2183  0393  1683               	bsf	status, 6	;RP1=1, select bank3
  2184  0394  1703               	bsf	(391)^0180h,3	;volatile
  2185  0395  1587               	line	16
  2186                           	
  2187                           l1184:	
  2188  0396                     ;USART1.c: 16:     SPBRG = 25;
  2189                           	movlw	low(019h)
  2190  0396  3019               	bsf	status, 5	;RP0=1, select bank1
  2191  0397  1683               	bcf	status, 6	;RP1=0, select bank1
  2192  0398  1303               	movwf	(153)^080h	;volatile
  2193  0399  0099               	line	17
  2194                           	
  2195                           l1186:	
  2196  039A                     ;USART1.c: 17:     SPBRGH = 0;
  2197                           	clrf	(154)^080h	;volatile
  2198  039A  019A               	line	18
  2199                           	
  2200                           l1188:	
  2201  039B                     ;USART1.c: 18:     RCSTAbits.SPEN = 1;
  2202                           	bcf	status, 5	;RP0=0, select bank0
  2203  039B  1283               	bcf	status, 6	;RP1=0, select bank0
  2204  039C  1303               	bsf	(24),7	;volatile
  2205  039D  1798               	line	19
  2206                           	
  2207                           l1190:	
  2208  039E                     ;USART1.c: 19:     RCSTAbits.CREN = 1;
  2209                           	bsf	(24),4	;volatile
  2210  039E  1618               	line	20
  2211                           	
  2212                           l1192:	
  2213  039F                     ;USART1.c: 20:     TXSTAbits.TXEN = 1;
  2214                           	bsf	status, 5	;RP0=1, select bank1
  2215  039F  1683               	bcf	status, 6	;RP1=0, select bank1
  2216  03A0  1303               	bsf	(152)^080h,5	;volatile
  2217  03A1  1698               	line	21
  2218                           	
  2219                           l15:	
  2220  03A2                     	return
  2221  03A2  0008               	opt stack 0
  2222                           GLOBAL	__end_of_config
  2223                           	__end_of_config:
  2224  03A3                     	signat	_config,89
  2225                           	global	___awdiv
  2226                           
  2227 ;; *************** function ___awdiv *****************
  2228 ;; Defined at:
  2229 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;  divisor         2    0[BANK0 ] int 
  2232 ;;  dividend        2    2[BANK0 ] int 
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;  quotient        2    7[BANK0 ] int 
  2235 ;;  sign            1    6[BANK0 ] unsigned char 
  2236 ;;  counter         1    5[BANK0 ] unsigned char 
  2237 ;; Return value:  Size  Location     Type
  2238 ;;                  2    0[BANK0 ] int 
  2239 ;; Registers used:
  2240 ;;		wreg, status,2, status,0
  2241 ;; Tracked objects:
  2242 ;;		On entry : 0/0
  2243 ;;		On exit  : 0/0
  2244 ;;		Unchanged: 0/0
  2245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2246 ;;      Params:         0       4       0       0       0
  2247 ;;      Locals:         0       4       0       0       0
  2248 ;;      Temps:          0       1       0       0       0
  2249 ;;      Totals:         0       9       0       0       0
  2250 ;;Total ram usage:        9 bytes
  2251 ;; Hardware stack levels used:    1
  2252 ;; Hardware stack levels required when called:    3
  2253 ;; This function calls:
  2254 ;;		Nothing
  2255 ;; This function is called by:
  2256 ;;		_main
  2257 ;; This function uses a non-reentrant model
  2258 ;;
  2259                           psect	text4,local,class=CODE,delta=2,merge=1,group=1
  2260                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  2261                           	line	5
  2262                           global __ptext4
  2263                           __ptext4:	;psect for function ___awdiv
  2264  02FD                     psect	text4
  2265                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  2266                           	line	5
  2267                           	global	__size_of___awdiv
  2268                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  2269  0073                     	
  2270                           ___awdiv:	
  2271  02FD                     ;incstack = 0
  2272                           	opt	stack 4
  2273                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2274                           	line	13
  2275                           	
  2276                           l1208:	
  2277  02FD                     	bcf	status, 5	;RP0=0, select bank0
  2278  02FD  1283               	bcf	status, 6	;RP1=0, select bank0
  2279  02FE  1303               	clrf	(___awdiv@sign)
  2280  02FF  01C0               	line	14
  2281                           	
  2282                           l1210:	
  2283  0300                     	btfss	(___awdiv@divisor+1),7
  2284  0300  1FBB               	goto	u711
  2285  0301  2B03               	goto	u710
  2286  0302  2B04               u711:
  2287  0303                     	goto	l1216
  2288  0303  2B0C               u710:
  2289  0304                     	line	15
  2290                           	
  2291                           l1212:	
  2292  0304                     	comf	(___awdiv@divisor),f
  2293  0304  09BA               	comf	(___awdiv@divisor+1),f
  2294  0305  09BB               	incf	(___awdiv@divisor),f
  2295  0306  0ABA               	skipnz
  2296  0307  1903               	incf	(___awdiv@divisor+1),f
  2297  0308  0ABB               	line	16
  2298                           	
  2299                           l1214:	
  2300  0309                     	clrf	(___awdiv@sign)
  2301  0309  01C0               	incf	(___awdiv@sign),f
  2302  030A  0AC0               	goto	l1216
  2303  030B  2B0C               	line	17
  2304                           	
  2305                           l404:	
  2306  030C                     	line	18
  2307                           	
  2308                           l1216:	
  2309  030C                     	btfss	(___awdiv@dividend+1),7
  2310  030C  1FBD               	goto	u721
  2311  030D  2B0F               	goto	u720
  2312  030E  2B10               u721:
  2313  030F                     	goto	l1222
  2314  030F  2B1A               u720:
  2315  0310                     	line	19
  2316                           	
  2317                           l1218:	
  2318  0310                     	comf	(___awdiv@dividend),f
  2319  0310  09BC               	comf	(___awdiv@dividend+1),f
  2320  0311  09BD               	incf	(___awdiv@dividend),f
  2321  0312  0ABC               	skipnz
  2322  0313  1903               	incf	(___awdiv@dividend+1),f
  2323  0314  0ABD               	line	20
  2324                           	
  2325                           l1220:	
  2326  0315                     	movlw	low(01h)
  2327  0315  3001               	movwf	(??___awdiv+0)+0
  2328  0316  00BE               	movf	(??___awdiv+0)+0,w
  2329  0317  083E               	xorwf	(___awdiv@sign),f
  2330  0318  06C0               	goto	l1222
  2331  0319  2B1A               	line	21
  2332                           	
  2333                           l405:	
  2334  031A                     	line	22
  2335                           	
  2336                           l1222:	
  2337  031A                     	clrf	(___awdiv@quotient)
  2338  031A  01C1               	clrf	(___awdiv@quotient+1)
  2339  031B  01C2               	line	23
  2340                           	
  2341                           l1224:	
  2342  031C                     	movf	((___awdiv@divisor)),w
  2343  031C  083A               iorwf	((___awdiv@divisor+1)),w
  2344  031D  043B               	btfsc	status,2
  2345  031E  1903               	goto	u731
  2346  031F  2B21               	goto	u730
  2347  0320  2B22               u731:
  2348  0321                     	goto	l1244
  2349  0321  2B5F               u730:
  2350  0322                     	line	24
  2351                           	
  2352                           l1226:	
  2353  0322                     	clrf	(___awdiv@counter)
  2354  0322  01BF               	incf	(___awdiv@counter),f
  2355  0323  0ABF               	line	25
  2356                           	goto	l1232
  2357  0324  2B31               	
  2358                           l408:	
  2359  0325                     	line	26
  2360                           	
  2361                           l1228:	
  2362  0325                     	movlw	01h
  2363  0325  3001               	
  2364                           u745:
  2365  0326                     	clrc
  2366  0326  1003               	rlf	(___awdiv@divisor),f
  2367  0327  0DBA               	rlf	(___awdiv@divisor+1),f
  2368  0328  0DBB               	addlw	-1
  2369  0329  3EFF               	skipz
  2370  032A  1D03               	goto	u745
  2371  032B  2B26               	line	27
  2372                           	
  2373                           l1230:	
  2374  032C                     	movlw	low(01h)
  2375  032C  3001               	movwf	(??___awdiv+0)+0
  2376  032D  00BE               	movf	(??___awdiv+0)+0,w
  2377  032E  083E               	addwf	(___awdiv@counter),f
  2378  032F  07BF               	goto	l1232
  2379  0330  2B31               	line	28
  2380                           	
  2381                           l407:	
  2382  0331                     	line	25
  2383                           	
  2384                           l1232:	
  2385  0331                     	btfss	(___awdiv@divisor+1),(15)&7
  2386  0331  1FBB               	goto	u751
  2387  0332  2B34               	goto	u750
  2388  0333  2B35               u751:
  2389  0334                     	goto	l1228
  2390  0334  2B25               u750:
  2391  0335                     	goto	l1234
  2392  0335  2B37               	
  2393                           l409:	
  2394  0336                     	goto	l1234
  2395  0336  2B37               	line	29
  2396                           	
  2397                           l410:	
  2398  0337                     	line	30
  2399                           	
  2400                           l1234:	
  2401  0337                     	movlw	01h
  2402  0337  3001               	
  2403                           u765:
  2404  0338                     	clrc
  2405  0338  1003               	rlf	(___awdiv@quotient),f
  2406  0339  0DC1               	rlf	(___awdiv@quotient+1),f
  2407  033A  0DC2               	addlw	-1
  2408  033B  3EFF               	skipz
  2409  033C  1D03               	goto	u765
  2410  033D  2B38               	line	31
  2411                           	movf	(___awdiv@divisor+1),w
  2412  033E  083B               	subwf	(___awdiv@dividend+1),w
  2413  033F  023D               	skipz
  2414  0340  1D03               	goto	u775
  2415  0341  2B44               	movf	(___awdiv@divisor),w
  2416  0342  083A               	subwf	(___awdiv@dividend),w
  2417  0343  023C               u775:
  2418  0344                     	skipc
  2419  0344  1C03               	goto	u771
  2420  0345  2B47               	goto	u770
  2421  0346  2B48               u771:
  2422  0347                     	goto	l1240
  2423  0347  2B50               u770:
  2424  0348                     	line	32
  2425                           	
  2426                           l1236:	
  2427  0348                     	movf	(___awdiv@divisor),w
  2428  0348  083A               	subwf	(___awdiv@dividend),f
  2429  0349  02BC               	movf	(___awdiv@divisor+1),w
  2430  034A  083B               	skipc
  2431  034B  1C03               	decf	(___awdiv@dividend+1),f
  2432  034C  03BD               	subwf	(___awdiv@dividend+1),f
  2433  034D  02BD               	line	33
  2434                           	
  2435                           l1238:	
  2436  034E                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  2437  034E  1441               	goto	l1240
  2438  034F  2B50               	line	34
  2439                           	
  2440                           l411:	
  2441  0350                     	line	35
  2442                           	
  2443                           l1240:	
  2444  0350                     	movlw	01h
  2445  0350  3001               	
  2446                           u785:
  2447  0351                     	clrc
  2448  0351  1003               	rrf	(___awdiv@divisor+1),f
  2449  0352  0CBB               	rrf	(___awdiv@divisor),f
  2450  0353  0CBA               	addlw	-1
  2451  0354  3EFF               	skipz
  2452  0355  1D03               	goto	u785
  2453  0356  2B51               	line	36
  2454                           	
  2455                           l1242:	
  2456  0357                     	movlw	01h
  2457  0357  3001               	subwf	(___awdiv@counter),f
  2458  0358  02BF               	btfss	status,2
  2459  0359  1D03               	goto	u791
  2460  035A  2B5C               	goto	u790
  2461  035B  2B5D               u791:
  2462  035C                     	goto	l1234
  2463  035C  2B37               u790:
  2464  035D                     	goto	l1244
  2465  035D  2B5F               	
  2466                           l412:	
  2467  035E                     	goto	l1244
  2468  035E  2B5F               	line	37
  2469                           	
  2470                           l406:	
  2471  035F                     	line	38
  2472                           	
  2473                           l1244:	
  2474  035F                     	movf	((___awdiv@sign)),w
  2475  035F  0840               	btfsc	status,2
  2476  0360  1903               	goto	u801
  2477  0361  2B63               	goto	u800
  2478  0362  2B64               u801:
  2479  0363                     	goto	l1248
  2480  0363  2B6A               u800:
  2481  0364                     	line	39
  2482                           	
  2483                           l1246:	
  2484  0364                     	comf	(___awdiv@quotient),f
  2485  0364  09C1               	comf	(___awdiv@quotient+1),f
  2486  0365  09C2               	incf	(___awdiv@quotient),f
  2487  0366  0AC1               	skipnz
  2488  0367  1903               	incf	(___awdiv@quotient+1),f
  2489  0368  0AC2               	goto	l1248
  2490  0369  2B6A               	
  2491                           l413:	
  2492  036A                     	line	40
  2493                           	
  2494                           l1248:	
  2495  036A                     	movf	(___awdiv@quotient+1),w
  2496  036A  0842               	movwf	(?___awdiv+1)
  2497  036B  00BB               	movf	(___awdiv@quotient),w
  2498  036C  0841               	movwf	(?___awdiv)
  2499  036D  00BA               	goto	l414
  2500  036E  2B6F               	
  2501                           l1250:	
  2502  036F                     	line	41
  2503                           	
  2504                           l414:	
  2505  036F                     	return
  2506  036F  0008               	opt stack 0
  2507                           GLOBAL	__end_of___awdiv
  2508                           	__end_of___awdiv:
  2509  0370                     	signat	___awdiv,8314
  2510                           	global	_isr
  2511                           
  2512 ;; *************** function _isr *****************
  2513 ;; Defined at:
  2514 ;;		line 33 in file "Prin-Raspi.c"
  2515 ;; Parameters:    Size  Location     Type
  2516 ;;		None
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;		None
  2519 ;; Return value:  Size  Location     Type
  2520 ;;                  1    wreg      void 
  2521 ;; Registers used:
  2522 ;;		wreg, status,2, status,0, pclath, cstack
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2528 ;;      Params:         0       0       0       0       0
  2529 ;;      Locals:         0       0       0       0       0
  2530 ;;      Temps:          4       0       0       0       0
  2531 ;;      Totals:         4       0       0       0       0
  2532 ;;Total ram usage:        4 bytes
  2533 ;; Hardware stack levels used:    1
  2534 ;; Hardware stack levels required when called:    2
  2535 ;; This function calls:
  2536 ;;		_spiRead
  2537 ;;		_spiWrite
  2538 ;; This function is called by:
  2539 ;;		Interrupt level 1
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  2543                           	file	"Prin-Raspi.c"
  2544                           	line	33
  2545                           global __ptext5
  2546                           __ptext5:	;psect for function _isr
  2547  0215                     psect	text5
  2548                           	file	"Prin-Raspi.c"
  2549                           	line	33
  2550                           	global	__size_of_isr
  2551                           	__size_of_isr	equ	__end_of_isr-_isr
  2552  00E8                     	
  2553                           _isr:	
  2554  0215                     ;incstack = 0
  2555                           	opt	stack 4
  2556                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  2557                           psect	intentry,class=CODE,delta=2
  2558                           global __pintentry
  2559                           __pintentry:
  2560  0004                     global interrupt_function
  2561                           interrupt_function:
  2562  0004                     	global saved_w
  2563                           	saved_w	set	btemp+0
  2564  007E                     	movwf	saved_w
  2565  0004  00FE               	swapf	status,w
  2566  0005  0E03               	movwf	(??_isr+2)
  2567  0006  00FA               	movf	pclath,w
  2568  0007  080A               	movwf	(??_isr+3)
  2569  0008  00FB               	ljmp	_isr
  2570  0009  120A  118A  2A15   psect	text5
  2571                           	line	34
  2572                           	
  2573                           i1l1048:	
  2574  0215                     ;Prin-Raspi.c: 34:     INTCONbits.GIE = 1;
  2575                           	bcf	status, 5	;RP0=0, select bank0
  2576  0215  1283               	bcf	status, 6	;RP1=0, select bank0
  2577  0216  1303               	btfss	(99/8),(99)&7	;volatile
  2578  0217  1D8C               	goto	u48_21
  2579  0218  2A1A               	goto	u48_20
  2580  0219  2A1B               u48_21:
  2581  021A                     	goto	i1l108
  2582  021A  2AF6               u48_20:
  2583  021B                     	line	35
  2584                           	
  2585                           i1l1050:	
  2586  021B                     ;Prin-Raspi.c: 35:     INTCONbits.PEIE = 1;
  2587                           	fcall	_spiRead
  2588  021B  120A  118A  23B0  120A  118A  	movwf	(??_isr+0)+0
  2589  0220  00F8               	clrf	(??_isr+0)+0+1
  2590  0221  01F9               	movf	0+(??_isr+0)+0,w
  2591  0222  0878               	movwf	(_lectura)
  2592  0223  00F0               	movf	1+(??_isr+0)+0,w
  2593  0224  0879               	movwf	(_lectura+1)
  2594  0225  00F1               	line	36
  2595                           	
  2596                           i1l1052:	
  2597  0226                     ;Prin-Raspi.c: 36:     PIR1bits.SSPIF = 0;
  2598                           		decf	((_lectura)),w
  2599  0226  0370               iorwf	((_lectura+1)),w
  2600  0227  0471               	btfss	status,2
  2601  0228  1D03               	goto	u49_21
  2602  0229  2A2B               	goto	u49_20
  2603  022A  2A2C               u49_21:
  2604  022B                     	goto	i1l1056
  2605  022B  2A37               u49_20:
  2606  022C                     	line	37
  2607                           	
  2608                           i1l1054:	
  2609  022C                     ;Prin-Raspi.c: 37:     PIE1bits.SSPIE = 1;
  2610                           	clrc
  2611  022C  1003               	rlf	(_A),w
  2612  022D  0D74               	movwf	(spiWrite@dat)
  2613  022E  00F6               	rlf	(_A+1),w
  2614  022F  0D75               	movwf	1+(spiWrite@dat)
  2615  0230  00F7               	fcall	_spiWrite
  2616  0231  120A  118A  23CB  120A  118A  	line	38
  2617                           ;Prin-Raspi.c: 38:     TRISAbits.TRISA5 = 1;
  2618                           	goto	i1l1092
  2619  0236  2AF2               	
  2620                           i1l89:	
  2621  0237                     	
  2622                           i1l1056:	
  2623  0237                     		movlw	2
  2624  0237  3002               	xorwf	((_lectura)),w
  2625  0238  0670               iorwf	((_lectura+1)),w
  2626  0239  0471               	btfss	status,2
  2627  023A  1D03               	goto	u50_21
  2628  023B  2A3D               	goto	u50_20
  2629  023C  2A3E               u50_21:
  2630  023D                     	goto	i1l1060
  2631  023D  2A49               u50_20:
  2632  023E                     	line	39
  2633                           	
  2634                           i1l1058:	
  2635  023E                     ;Prin-Raspi.c: 39:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_L
                                 OW, SPI_IDLE_2_ACTIVE);
  2636                           	clrc
  2637  023E  1003               	rlf	(_B),w
  2638  023F  0D72               	movwf	(spiWrite@dat)
  2639  0240  00F6               	rlf	(_B+1),w
  2640  0241  0D73               	movwf	1+(spiWrite@dat)
  2641  0242  00F7               	fcall	_spiWrite
  2642  0243  120A  118A  23CB  120A  118A  	line	40
  2643                           ;Prin-Raspi.c: 40:     config();
  2644                           	goto	i1l1092
  2645  0248  2AF2               	
  2646                           i1l91:	
  2647  0249                     	
  2648                           i1l1060:	
  2649  0249                     		movlw	3
  2650  0249  3003               	xorwf	((_lectura)),w
  2651  024A  0670               iorwf	((_lectura+1)),w
  2652  024B  0471               	btfss	status,2
  2653  024C  1D03               	goto	u51_21
  2654  024D  2A4F               	goto	u51_20
  2655  024E  2A50               u51_21:
  2656  024F                     	goto	i1l1064
  2657  024F  2A5D               u51_20:
  2658  0250                     	line	41
  2659                           	
  2660                           i1l1062:	
  2661  0250                     ;Prin-Raspi.c: 41:     while (1){
  2662                           	clrc
  2663  0250  1003               	bcf	status, 5	;RP0=0, select bank0
  2664  0251  1283               	bcf	status, 6	;RP1=0, select bank0
  2665  0252  1303               	rlf	(_C),w
  2666  0253  0D2E               	movwf	(spiWrite@dat)
  2667  0254  00F6               	rlf	(_C+1),w
  2668  0255  0D2F               	movwf	1+(spiWrite@dat)
  2669  0256  00F7               	fcall	_spiWrite
  2670  0257  120A  118A  23CB  120A  118A  	line	42
  2671                           ;Prin-Raspi.c: 42: 
  2672                           	goto	i1l1092
  2673  025C  2AF2               	
  2674                           i1l93:	
  2675  025D                     	
  2676                           i1l1064:	
  2677  025D                     		movlw	4
  2678  025D  3004               	xorwf	((_lectura)),w
  2679  025E  0670               iorwf	((_lectura+1)),w
  2680  025F  0471               	btfss	status,2
  2681  0260  1D03               	goto	u52_21
  2682  0261  2A63               	goto	u52_20
  2683  0262  2A64               u52_21:
  2684  0263                     	goto	i1l1068
  2685  0263  2A71               u52_20:
  2686  0264                     	line	43
  2687                           	
  2688                           i1l1066:	
  2689  0264                     ;Prin-Raspi.c: 43:         mandar(1);
  2690                           	clrc
  2691  0264  1003               	bcf	status, 5	;RP0=0, select bank0
  2692  0265  1283               	bcf	status, 6	;RP1=0, select bank0
  2693  0266  1303               	rlf	(_D),w
  2694  0267  0D2C               	movwf	(spiWrite@dat)
  2695  0268  00F6               	rlf	(_D+1),w
  2696  0269  0D2D               	movwf	1+(spiWrite@dat)
  2697  026A  00F7               	fcall	_spiWrite
  2698  026B  120A  118A  23CB  120A  118A  	line	44
  2699                           ;Prin-Raspi.c: 44:         while(!RCIF){
  2700                           	goto	i1l1092
  2701  0270  2AF2               	
  2702                           i1l95:	
  2703  0271                     	
  2704                           i1l1068:	
  2705  0271                     		movlw	5
  2706  0271  3005               	xorwf	((_lectura)),w
  2707  0272  0670               iorwf	((_lectura+1)),w
  2708  0273  0471               	btfss	status,2
  2709  0274  1D03               	goto	u53_21
  2710  0275  2A77               	goto	u53_20
  2711  0276  2A78               u53_21:
  2712  0277                     	goto	i1l1072
  2713  0277  2A85               u53_20:
  2714  0278                     	line	45
  2715                           	
  2716                           i1l1070:	
  2717  0278                     ;Prin-Raspi.c: 45:         }
  2718                           	clrc
  2719  0278  1003               	bcf	status, 5	;RP0=0, select bank0
  2720  0279  1283               	bcf	status, 6	;RP1=0, select bank0
  2721  027A  1303               	rlf	(_E),w
  2722  027B  0D2A               	movwf	(spiWrite@dat)
  2723  027C  00F6               	rlf	(_E+1),w
  2724  027D  0D2B               	movwf	1+(spiWrite@dat)
  2725  027E  00F7               	fcall	_spiWrite
  2726  027F  120A  118A  23CB  120A  118A  	line	46
  2727                           ;Prin-Raspi.c: 46:         A1 = RCREG;
  2728                           	goto	i1l1092
  2729  0284  2AF2               	
  2730                           i1l97:	
  2731  0285                     	
  2732                           i1l1072:	
  2733  0285                     		movlw	6
  2734  0285  3006               	xorwf	((_lectura)),w
  2735  0286  0670               iorwf	((_lectura+1)),w
  2736  0287  0471               	btfss	status,2
  2737  0288  1D03               	goto	u54_21
  2738  0289  2A8B               	goto	u54_20
  2739  028A  2A8C               u54_21:
  2740  028B                     	goto	i1l1076
  2741  028B  2A99               u54_20:
  2742  028C                     	line	47
  2743                           	
  2744                           i1l1074:	
  2745  028C                     ;Prin-Raspi.c: 47:         if(A1%2){
  2746                           	clrc
  2747  028C  1003               	bcf	status, 5	;RP0=0, select bank0
  2748  028D  1283               	bcf	status, 6	;RP1=0, select bank0
  2749  028E  1303               	rlf	(_a),w
  2750  028F  0D38               	movwf	(spiWrite@dat)
  2751  0290  00F6               	rlf	(_a+1),w
  2752  0291  0D39               	movwf	1+(spiWrite@dat)
  2753  0292  00F7               	fcall	_spiWrite
  2754  0293  120A  118A  23CB  120A  118A  	line	48
  2755                           ;Prin-Raspi.c: 48:             A = A1/2;
  2756                           	goto	i1l1092
  2757  0298  2AF2               	
  2758                           i1l99:	
  2759  0299                     	
  2760                           i1l1076:	
  2761  0299                     		movlw	7
  2762  0299  3007               	xorwf	((_lectura)),w
  2763  029A  0670               iorwf	((_lectura+1)),w
  2764  029B  0471               	btfss	status,2
  2765  029C  1D03               	goto	u55_21
  2766  029D  2A9F               	goto	u55_20
  2767  029E  2AA0               u55_21:
  2768  029F                     	goto	i1l1080
  2769  029F  2AAD               u55_20:
  2770  02A0                     	line	49
  2771                           	
  2772                           i1l1078:	
  2773  02A0                     ;Prin-Raspi.c: 49:             a = A+1;
  2774                           	clrc
  2775  02A0  1003               	bcf	status, 5	;RP0=0, select bank0
  2776  02A1  1283               	bcf	status, 6	;RP1=0, select bank0
  2777  02A2  1303               	rlf	(_b),w
  2778  02A3  0D36               	movwf	(spiWrite@dat)
  2779  02A4  00F6               	rlf	(_b+1),w
  2780  02A5  0D37               	movwf	1+(spiWrite@dat)
  2781  02A6  00F7               	fcall	_spiWrite
  2782  02A7  120A  118A  23CB  120A  118A  	line	50
  2783                           ;Prin-Raspi.c: 50:         } else{
  2784                           	goto	i1l1092
  2785  02AC  2AF2               	
  2786                           i1l101:	
  2787  02AD                     	
  2788                           i1l1080:	
  2789  02AD                     		movlw	8
  2790  02AD  3008               	xorwf	((_lectura)),w
  2791  02AE  0670               iorwf	((_lectura+1)),w
  2792  02AF  0471               	btfss	status,2
  2793  02B0  1D03               	goto	u56_21
  2794  02B1  2AB3               	goto	u56_20
  2795  02B2  2AB4               u56_21:
  2796  02B3                     	goto	i1l1084
  2797  02B3  2AC1               u56_20:
  2798  02B4                     	line	51
  2799                           	
  2800                           i1l1082:	
  2801  02B4                     ;Prin-Raspi.c: 51:             A = A1/2;
  2802                           	clrc
  2803  02B4  1003               	bcf	status, 5	;RP0=0, select bank0
  2804  02B5  1283               	bcf	status, 6	;RP1=0, select bank0
  2805  02B6  1303               	rlf	(_c),w
  2806  02B7  0D34               	movwf	(spiWrite@dat)
  2807  02B8  00F6               	rlf	(_c+1),w
  2808  02B9  0D35               	movwf	1+(spiWrite@dat)
  2809  02BA  00F7               	fcall	_spiWrite
  2810  02BB  120A  118A  23CB  120A  118A  	line	52
  2811                           ;Prin-Raspi.c: 52:             a = A;
  2812                           	goto	i1l1092
  2813  02C0  2AF2               	
  2814                           i1l103:	
  2815  02C1                     	
  2816                           i1l1084:	
  2817  02C1                     		movlw	9
  2818  02C1  3009               	xorwf	((_lectura)),w
  2819  02C2  0670               iorwf	((_lectura+1)),w
  2820  02C3  0471               	btfss	status,2
  2821  02C4  1D03               	goto	u57_21
  2822  02C5  2AC7               	goto	u57_20
  2823  02C6  2AC8               u57_21:
  2824  02C7                     	goto	i1l1088
  2825  02C7  2AD5               u57_20:
  2826  02C8                     	line	53
  2827                           	
  2828                           i1l1086:	
  2829  02C8                     ;Prin-Raspi.c: 53:         }
  2830                           	clrc
  2831  02C8  1003               	bcf	status, 5	;RP0=0, select bank0
  2832  02C9  1283               	bcf	status, 6	;RP1=0, select bank0
  2833  02CA  1303               	rlf	(_d),w
  2834  02CB  0D32               	movwf	(spiWrite@dat)
  2835  02CC  00F6               	rlf	(_d+1),w
  2836  02CD  0D33               	movwf	1+(spiWrite@dat)
  2837  02CE  00F7               	fcall	_spiWrite
  2838  02CF  120A  118A  23CB  120A  118A  	line	54
  2839                           ;Prin-Raspi.c: 54:         _delay((unsigned long)((100)*(4000000/4000.0)));
  2840                           	goto	i1l1092
  2841  02D4  2AF2               	
  2842                           i1l105:	
  2843  02D5                     	
  2844                           i1l1088:	
  2845  02D5                     		movlw	10
  2846  02D5  300A               	xorwf	((_lectura)),w
  2847  02D6  0670               iorwf	((_lectura+1)),w
  2848  02D7  0471               	btfss	status,2
  2849  02D8  1D03               	goto	u58_21
  2850  02D9  2ADB               	goto	u58_20
  2851  02DA  2ADC               u58_21:
  2852  02DB                     	goto	i1l1092
  2853  02DB  2AF2               u58_20:
  2854  02DC                     	line	55
  2855                           	
  2856                           i1l1090:	
  2857  02DC                     ;Prin-Raspi.c: 55: 
  2858                           	clrc
  2859  02DC  1003               	bcf	status, 5	;RP0=0, select bank0
  2860  02DD  1283               	bcf	status, 6	;RP1=0, select bank0
  2861  02DE  1303               	rlf	(_e),w
  2862  02DF  0D30               	movwf	(spiWrite@dat)
  2863  02E0  00F6               	rlf	(_e+1),w
  2864  02E1  0D31               	movwf	1+(spiWrite@dat)
  2865  02E2  00F7               	fcall	_spiWrite
  2866  02E3  120A  118A  23CB  120A  118A  	goto	i1l1092
  2867  02E8  2AF2               	line	56
  2868                           ;Prin-Raspi.c: 56: 
  2869                           	
  2870                           i1l107:	
  2871  02E9                     	goto	i1l1092
  2872  02E9  2AF2               	
  2873                           i1l106:	
  2874  02EA                     	goto	i1l1092
  2875  02EA  2AF2               	
  2876                           i1l104:	
  2877  02EB                     	goto	i1l1092
  2878  02EB  2AF2               	
  2879                           i1l102:	
  2880  02EC                     	goto	i1l1092
  2881  02EC  2AF2               	
  2882                           i1l100:	
  2883  02ED                     	goto	i1l1092
  2884  02ED  2AF2               	
  2885                           i1l98:	
  2886  02EE                     	goto	i1l1092
  2887  02EE  2AF2               	
  2888                           i1l96:	
  2889  02EF                     	goto	i1l1092
  2890  02EF  2AF2               	
  2891                           i1l94:	
  2892  02F0                     	goto	i1l1092
  2893  02F0  2AF2               	
  2894                           i1l92:	
  2895  02F1                     	goto	i1l1092
  2896  02F1  2AF2               	
  2897                           i1l90:	
  2898  02F2                     	line	57
  2899                           	
  2900                           i1l1092:	
  2901  02F2                     ;Prin-Raspi.c: 57:         mandar(2);
  2902                           	bcf	status, 5	;RP0=0, select bank0
  2903  02F2  1283               	bcf	status, 6	;RP1=0, select bank0
  2904  02F3  1303               	bcf	(99/8),(99)&7	;volatile
  2905  02F4  118C               	goto	i1l108
  2906  02F5  2AF6               	line	58
  2907                           ;Prin-Raspi.c: 58:         while(!RCIF){
  2908                           	
  2909                           i1l88:	
  2910  02F6                     	line	59
  2911                           	
  2912                           i1l108:	
  2913  02F6                     	movf	(??_isr+3),w
  2914  02F6  087B               	movwf	pclath
  2915  02F7  008A               	swapf	(??_isr+2)^0FFFFFF80h,w
  2916  02F8  0E7A               	movwf	status
  2917  02F9  0083               	swapf	saved_w,f
  2918  02FA  0EFE               	swapf	saved_w,w
  2919  02FB  0E7E               	retfie
  2920  02FC  0009               	opt stack 0
  2921                           GLOBAL	__end_of_isr
  2922                           	__end_of_isr:
  2923  02FD                     	signat	_isr,89
  2924                           	global	_spiWrite
  2925                           
  2926 ;; *************** function _spiWrite *****************
  2927 ;; Defined at:
  2928 ;;		line 34 in file "SPI.c"
  2929 ;; Parameters:    Size  Location     Type
  2930 ;;  dat             2    0[COMMON] int 
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;		None
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  1    wreg      void 
  2935 ;; Registers used:
  2936 ;;		wreg
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2942 ;;      Params:         2       0       0       0       0
  2943 ;;      Locals:         0       0       0       0       0
  2944 ;;      Temps:          0       0       0       0       0
  2945 ;;      Totals:         2       0       0       0       0
  2946 ;;Total ram usage:        2 bytes
  2947 ;; Hardware stack levels used:    1
  2948 ;; This function calls:
  2949 ;;		Nothing
  2950 ;; This function is called by:
  2951 ;;		_isr
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  2955                           	file	"SPI.c"
  2956                           	line	34
  2957                           global __ptext6
  2958                           __ptext6:	;psect for function _spiWrite
  2959  03CB                     psect	text6
  2960                           	file	"SPI.c"
  2961                           	line	34
  2962                           	global	__size_of_spiWrite
  2963                           	__size_of_spiWrite	equ	__end_of_spiWrite-_spiWrite
  2964  0005                     	
  2965                           _spiWrite:	
  2966  03CB                     ;incstack = 0
  2967                           	opt	stack 5
  2968                           ; Regs used in _spiWrite: [wreg]
  2969                           	line	36
  2970                           	
  2971                           i1l992:	
  2972  03CB                     ;SPI.c: 34: void spiWrite(int dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  2973                           	movf	(spiWrite@dat),w
  2974  03CB  0876               	bcf	status, 5	;RP0=0, select bank0
  2975  03CC  1283               	bcf	status, 6	;RP1=0, select bank0
  2976  03CD  1303               	movwf	(19)	;volatile
  2977  03CE  0093               	line	37
  2978                           	
  2979                           i1l167:	
  2980  03CF                     	return
  2981  03CF  0008               	opt stack 0
  2982                           GLOBAL	__end_of_spiWrite
  2983                           	__end_of_spiWrite:
  2984  03D0                     	signat	_spiWrite,4217
  2985                           	global	_spiRead
  2986                           
  2987 ;; *************** function _spiRead *****************
  2988 ;; Defined at:
  2989 ;;		line 47 in file "SPI.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;		None
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;		None
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  1    wreg      unsigned char 
  2996 ;; Registers used:
  2997 ;;		wreg, status,2, status,0, pclath, cstack
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3003 ;;      Params:         0       0       0       0       0
  3004 ;;      Locals:         0       0       0       0       0
  3005 ;;      Temps:          0       0       0       0       0
  3006 ;;      Totals:         0       0       0       0       0
  3007 ;;Total ram usage:        0 bytes
  3008 ;; Hardware stack levels used:    1
  3009 ;; Hardware stack levels required when called:    1
  3010 ;; This function calls:
  3011 ;;		_spiReceiveWait
  3012 ;; This function is called by:
  3013 ;;		_isr
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3017                           	line	47
  3018                           global __ptext7
  3019                           __ptext7:	;psect for function _spiRead
  3020  03B0                     psect	text7
  3021                           	file	"SPI.c"
  3022                           	line	47
  3023                           	global	__size_of_spiRead
  3024                           	__size_of_spiRead	equ	__end_of_spiRead-_spiRead
  3025  000A                     	
  3026                           _spiRead:	
  3027  03B0                     ;incstack = 0
  3028                           	opt	stack 4
  3029                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  3030                           	line	49
  3031                           	
  3032                           i1l986:	
  3033  03B0                     ;SPI.c: 49:     spiReceiveWait();
  3034                           	fcall	_spiReceiveWait
  3035  03B0  120A  118A  23BA  120A  118A  	line	50
  3036                           	
  3037                           i1l988:	
  3038  03B5                     ;SPI.c: 50:     return(SSPBUF);
  3039                           	bcf	status, 5	;RP0=0, select bank0
  3040  03B5  1283               	bcf	status, 6	;RP1=0, select bank0
  3041  03B6  1303               	movf	(19),w	;volatile
  3042  03B7  0813               	goto	i1l175
  3043  03B8  2BB9               	
  3044                           i1l990:	
  3045  03B9                     	line	51
  3046                           	
  3047                           i1l175:	
  3048  03B9                     	return
  3049  03B9  0008               	opt stack 0
  3050                           GLOBAL	__end_of_spiRead
  3051                           	__end_of_spiRead:
  3052  03BA                     	signat	_spiRead,89
  3053                           	global	_spiReceiveWait
  3054                           
  3055 ;; *************** function _spiReceiveWait *****************
  3056 ;; Defined at:
  3057 ;;		line 29 in file "SPI.c"
  3058 ;; Parameters:    Size  Location     Type
  3059 ;;		None
  3060 ;; Auto vars:     Size  Location     Type
  3061 ;;		None
  3062 ;; Return value:  Size  Location     Type
  3063 ;;                  1    wreg      void 
  3064 ;; Registers used:
  3065 ;;		None
  3066 ;; Tracked objects:
  3067 ;;		On entry : 0/0
  3068 ;;		On exit  : 0/0
  3069 ;;		Unchanged: 0/0
  3070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3071 ;;      Params:         0       0       0       0       0
  3072 ;;      Locals:         0       0       0       0       0
  3073 ;;      Temps:          0       0       0       0       0
  3074 ;;      Totals:         0       0       0       0       0
  3075 ;;Total ram usage:        0 bytes
  3076 ;; Hardware stack levels used:    1
  3077 ;; This function calls:
  3078 ;;		Nothing
  3079 ;; This function is called by:
  3080 ;;		_spiRead
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3084                           	line	29
  3085                           global __ptext8
  3086                           __ptext8:	;psect for function _spiReceiveWait
  3087  03BA                     psect	text8
  3088                           	file	"SPI.c"
  3089                           	line	29
  3090                           	global	__size_of_spiReceiveWait
  3091                           	__size_of_spiReceiveWait	equ	__end_of_spiReceiveWait-_spiReceiveWait
  3092  0009                     	
  3093                           _spiReceiveWait:	
  3094  03BA                     ;incstack = 0
  3095                           	opt	stack 4
  3096                           ; Regs used in _spiReceiveWait: []
  3097                           	line	31
  3098                           	
  3099                           i1l968:	
  3100  03BA                     ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  3101                           	goto	i1l161
  3102  03BA  2BBB               	
  3103                           i1l162:	
  3104  03BB                     	
  3105                           i1l161:	
  3106  03BB                     	bsf	status, 5	;RP0=1, select bank1
  3107  03BB  1683               	bcf	status, 6	;RP1=0, select bank1
  3108  03BC  1303               	btfss	(148)^080h,0	;volatile
  3109  03BD  1C14               	goto	u35_21
  3110  03BE  2BC0               	goto	u35_20
  3111  03BF  2BC1               u35_21:
  3112  03C0                     	goto	i1l161
  3113  03C0  2BBB               u35_20:
  3114  03C1                     	goto	i1l164
  3115  03C1  2BC2               	
  3116                           i1l163:	
  3117  03C2                     	line	32
  3118                           	
  3119                           i1l164:	
  3120  03C2                     	return
  3121  03C2  0008               	opt stack 0
  3122                           GLOBAL	__end_of_spiReceiveWait
  3123                           	__end_of_spiReceiveWait:
  3124  03C3                     	signat	_spiReceiveWait,89
  3125                           global	___latbits
  3126                           ___latbits	equ	2
  3127  0002                     	global	btemp
  3128                           	btemp set 07Eh
  3129  007E                     
  3130                           	DABS	1,126,2	;btemp
  3131                           	global	wtemp0
  3132                           	wtemp0 set btemp+0
  3133  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     11      37
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3182
                                              9 BANK0      2     2      0
                            ___awdiv
                             _config
                             _mandar
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _mandar                                               2     0      2     481
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    2245
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0     782
                                              2 COMMON     4     4      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             2     0      2     782
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   _config
   _mandar
   _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      31       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B      25       5       46.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      31      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sat Apr 11 16:53:02 2020

                       _A 0074                         _B 0072                         _C 002E  
                       _D 002C                         _E 002A                         _a 0038  
                       _b 0036                         _c 0034                         _d 0032  
                       _e 0030               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      _A1 0028                        _B1 0026                        _C1 0024  
                      _D1 0022                        _E1 0020                        l20 03AB  
                      l21 03AF                        l15 03A2                        l18 03A4  
                      l19 03A4              ___awdiv@sign 0040                        fsr 0004  
                     l120 00AC                       l121 00B3                       l113 0044  
                     l130 0164                       l122 00DA                       l114 0050  
                     l131 016B                       l123 00F2                       l115 0050  
                     l140 0212                       l132 0192                       l124 0108  
                     l116 0057                       l141 0212                       l133 01AA  
                     l125 0108                       l117 007E                       l134 01C0  
                     l126 010F                       l118 0096                       l135 01C0  
                     l127 0136                       l119 00AC                       l136 01C7  
                     l128 014E                       l137 01EE                       l129 0164  
                     l410 0337                       l138 0206                       l411 0350  
                     l139 0211                       l412 035E                       l404 030C  
                     l156 0382                       l413 036A                       l405 031A  
                     l157 0389                       l414 036F                       l406 035F  
                     l158 038E                       l407 0331                       l408 0325  
                     l409 0336              __CFG_CPD$OFF 0000                       u700 037C  
                     u701 037B                       u710 0304                       u711 0303  
                     u800 0364                       u720 0310                       u801 0363  
                     u721 030F                       u730 0322                       u810 0056  
                     u731 0321                       u811 0055                       u900 01D2  
                     u820 0062                       u901 01D1                       u821 0061  
                     u750 0335                       u830 00B2                       u751 0334  
                     u831 00B1                       u840 00BE                       u745 0326  
                     u841 00BD                       u770 0348                       u690 03AA  
                     u850 010E                       u771 0347                       u691 03A9  
                     u851 010D                       u860 011A                       u765 0338  
                     u861 0119                       u917 009C                       u790 035D  
                     u870 016A                       u791 035C                       u775 0344  
                     u871 0169                       u927 00F8                       u880 0176  
                     u785 0351                       u881 0175                       u937 0154  
                     u890 01C6                       u891 01C5                       u947 01B0  
                     u957 020C                       _isr 0215                       indf 0000  
            __CFG_LVP$OFF 0000                      l1200 037C                      l1210 0300  
                    l1202 0380                      l1220 0315                      l1212 0304  
                    l1204 0382                      l1300 0116                      l1230 032C  
                    l1222 031A                      l1214 0309                      l1206 0388  
                    l1310 014E                      l1302 011A                      l1240 0350  
                    l1232 0331                      l1224 031C                      l1216 030C  
                    l1208 02FD                      l1320 0192                      l1312 016B  
                    l1304 012D                      l1250 036F                      l1242 0357  
                    l1234 0337                      l1226 0322                      l1218 0310  
                    l1330 01D2                      l1322 01A5                      l1314 0172  
                    l1306 0136                      l1236 0348                      l1228 0325  
                    l1244 035F                      l1332 01E5                      l1324 01AA  
                    l1316 0176                      l1308 0149                      l1260 002F  
                    l1252 0022                      l1246 0364                      l1238 034E  
                    l1190 039E                      l1182 038F                      l1334 01EE  
                    l1326 01C7                      l1318 0189                      l1270 0057  
                    l1262 0032                      l1254 002A                      l1248 036A  
                    l1192 039F                      l1184 0396                      l1336 0201  
                    l1328 01CE                      l1280 0091                      l1272 005E  
                    l1264 0033                      l1256 002B                      l1186 039A  
                    l1194 03A3                      l1338 0206                      l1290 00D1  
                    l1282 0096                      l1274 0062                      l1266 003E  
                    l1258 002C                      l1188 039B                      l1196 03AB  
                    l1292 00DA                      l1284 00B3                      l1276 0075  
                    l1268 0044                      l1198 0373                      l1294 00ED  
                    l1286 00BA                      l1278 007E                      l1296 00F2  
                    l1288 00BE                      l1298 010F                      ?_isr 0076  
                    _RCIF 0065                      i1l90 02F2                      i1l91 0249  
                    i1l92 02F1                      i1l93 025D                      i1l94 02F0  
                    i1l95 0271                      i1l88 02F6                      i1l96 02EF  
                    i1l97 0285                      i1l89 0237                      i1l98 02EE  
                    i1l99 0299              __CFG_WRT$OFF 0000                      _main 0022  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
                   ??_isr 0078                     ?_main 0076           __end_of___awdiv 0370  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188           ___awdiv@divisor 003A  
                   i1l100 02ED                     i1l101 02AD                     i1l102 02EC  
                   i1l103 02C1                     i1l104 02EB                     i1l105 02D5  
                   i1l106 02EA                     i1l107 02E9                     i1l108 02F6  
                   i1l161 03BB                     i1l162 03BB                     i1l163 03C2  
                   i1l164 03C2                     i1l175 03B9                     i1l167 03CF  
                   i1l990 03B9                     i1l968 03BA                     i1l992 03CB  
                   i1l986 03B0                     i1l988 03B5           ___awdiv@counter 003F  
                   _RCREG 001A                     u50_20 023E                     u50_21 023D  
                   _SPBRG 0099                     u35_20 03C1                     u51_20 0250  
                   u35_21 03C0                     u51_21 024F                     u52_20 0264  
                   u52_21 0263                     u53_20 0278                     u53_21 0277  
                   u54_20 028C                     u54_21 028B                     u55_20 02A0  
                   u55_21 029F                     u56_20 02B4                     u48_20 021B  
                   u56_21 02B3                     u48_21 021A                     u57_20 02C8  
                   u49_20 022C                     u57_21 02C7                     u49_21 022B  
                   _TRISA 0085                     u58_20 02DC                     _SSPIF 0063  
                   u58_21 02DB                     _TXREG 0019            __CFG_FCMEN$OFF 0000  
          __CFG_BOREN$OFF 0000                     pclath 000A           __end_of_spiInit 038F  
         __end_of_spiRead 03BA                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 0215  
                  ??_main 0043          ___awdiv@dividend 003C                    i1l1050 021B  
                  i1l1060 0249                    i1l1052 0226                    i1l1070 0278  
                  i1l1062 0250                    i1l1054 022C                    i1l1080 02AD  
                  i1l1072 0285                    i1l1064 025D                    i1l1056 0237  
                  i1l1048 0215                    i1l1090 02DC                    i1l1082 02B4  
                  i1l1074 028C                    i1l1066 0264                    i1l1058 023E  
                  i1l1084 02C1                    i1l1076 0299                    i1l1068 0271  
                  i1l1092 02F2                    i1l1086 02C8                    i1l1078 02A0  
                  i1l1088 02D5                    _SPBRGH 009A                    _TRISC3 043B  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000                 ??___awdiv 003E                    _config 038F  
                  _mandar 03A3          ___awdiv@quotient 0041                    saved_w 007E  
        __end_of_spiWrite 03D0                 ??_spiInit 003D                 ??_spiRead 0076  
 __end_of__initialization 001E            __pcstackCOMMON 0076                __pbssBANK0 0020  
              __pmaintext 0022                __pintentry 0004                   ?_config 0076  
 __size_of_spiReceiveWait 0009                   ?_mandar 003A                   _SSPSTAT 0094  
               ?_spiWrite 0076                   ___awdiv 02FD           __size_of_config 0014  
         __size_of_mandar 000D                   __ptext1 0370                   __ptext2 03A3  
                 __ptext3 038F                   __ptext4 02FD                   __ptext5 0215  
                 __ptext6 03CB                   __ptext7 03B0                   __ptext8 03BA  
                 _lectura 0070              __size_of_isr 00E8                   _spiInit 0370  
                 _spiRead 03B0                   clrloop0 03C4      end_of_initialization 001E  
               _RCSTAbits 0018                ??_spiWrite 0078                 _TRISAbits 0085  
             spiWrite@dat 0076                 _TXSTAbits 0098            _spiReceiveWait 03BA  
             _BAUDCTLbits 0187                mandar@dato 003A            __end_of_config 03A3  
          __end_of_mandar 03B0       start_initialization 000F               __end_of_isr 02FD  
__CFG_FOSC$INTRC_NOCLKOUT 0000    __end_of_spiReceiveWait 03C3                  ??_config 003A  
                ??_mandar 003C               __pbssCOMMON 0070                 ___latbits 0002  
           __pcstackBANK0 003A           ?_spiReceiveWait 0076                  ?___awdiv 003A  
       __size_of_spiWrite 0005                  ?_spiInit 003A                  ?_spiRead 0076  
    spiInit@sTransmitEdge 003C         interrupt_function 0004                 clear_ram0 03C3  
                _PIE1bits 008C        spiInit@sDataSample 003A                  _PIR1bits 000C  
        __size_of___awdiv 0073          __size_of_spiInit 001F          __size_of_spiRead 000A  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 01F3                  _spiWrite 03CB  
            spiInit@sType 003D         spiInit@sClockIdle 003B                _INTCONbits 000B  
                intlevel1 0000          ??_spiReceiveWait 0076  
