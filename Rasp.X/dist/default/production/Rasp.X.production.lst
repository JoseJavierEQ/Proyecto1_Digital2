

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Mar 12 04:19:32 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     	FNCALL	_main,_config
   712                           	FNCALL	_main,_spiInit
   713                           	FNROOT	_main
   714                           	FNCALL	_isr,_spiRead
   715                           	FNCALL	_isr,_spiWrite
   716                           	FNCALL	_spiRead,_spiReceiveWait
   717                           	FNCALL	intlevel1,_isr
   718                           	global	intlevel1
   719                           	FNROOT	intlevel1
   720                           	global	_lectura
   721                           psect	idataCOMMON,class=CODE,space=0,delta=2,noexec
   722                           global __pidataCOMMON
   723                           __pidataCOMMON:
   724  0159                     	file	"Prinrasp.c"
   725                           	line	31
   726                           
   727                           ;initializer for _lectura
   728                           	retlw	01h
   729  0159  3401               	retlw	0
   730  015A  3400               
   731                           	global	_valor1
   732                           	global	_contador
   733                           	global	_valor4
   734                           	global	_valor3
   735                           	global	_valor2
   736                           	global	_SSPBUF
   737                           _SSPBUF	set	0x13
   738  0013                     	global	_SSPCON
   739                           _SSPCON	set	0x14
   740  0014                     	global	_TXREG
   741                           _TXREG	set	0x19
   742  0019                     	global	_RCSTAbits
   743                           _RCSTAbits	set	0x18
   744  0018                     	global	_RCREG
   745                           _RCREG	set	0x1A
   746  001A                     	global	_PIR1bits
   747                           _PIR1bits	set	0xC
   748  000C                     	global	_INTCONbits
   749                           _INTCONbits	set	0xB
   750  000B                     	global	_RCIF
   751                           _RCIF	set	0x65
   752  0065                     	global	_SSPIF
   753                           _SSPIF	set	0x63
   754  0063                     	global	_SSPSTATbits
   755                           _SSPSTATbits	set	0x94
   756  0094                     	global	_SSPSTAT
   757                           _SSPSTAT	set	0x94
   758  0094                     	global	_SPBRGH
   759                           _SPBRGH	set	0x9A
   760  009A                     	global	_SPBRG
   761                           _SPBRG	set	0x99
   762  0099                     	global	_TXSTAbits
   763                           _TXSTAbits	set	0x98
   764  0098                     	global	_TRISAbits
   765                           _TRISAbits	set	0x85
   766  0085                     	global	_PIE1bits
   767                           _PIE1bits	set	0x8C
   768  008C                     	global	_TRISA
   769                           _TRISA	set	0x85
   770  0085                     	global	_TRISC3
   771                           _TRISC3	set	0x43B
   772  043B                     	global	_TRISC5
   773                           _TRISC5	set	0x43D
   774  043D                     	global	_BAUDCTLbits
   775                           _BAUDCTLbits	set	0x187
   776  0187                     	global	_ANSEL
   777                           _ANSEL	set	0x188
   778  0188                     ; #config settings
   779                           global __CFG_FOSC$INTRC_NOCLKOUT
   780                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   781  0000                     global __CFG_WDTE$OFF
   782                           __CFG_WDTE$OFF equ 0x0
   783  0000                     global __CFG_PWRTE$OFF
   784                           __CFG_PWRTE$OFF equ 0x0
   785  0000                     global __CFG_MCLRE$OFF
   786                           __CFG_MCLRE$OFF equ 0x0
   787  0000                     global __CFG_CP$OFF
   788                           __CFG_CP$OFF equ 0x0
   789  0000                     global __CFG_CPD$OFF
   790                           __CFG_CPD$OFF equ 0x0
   791  0000                     global __CFG_BOREN$OFF
   792                           __CFG_BOREN$OFF equ 0x0
   793  0000                     global __CFG_IESO$OFF
   794                           __CFG_IESO$OFF equ 0x0
   795  0000                     global __CFG_FCMEN$OFF
   796                           __CFG_FCMEN$OFF equ 0x0
   797  0000                     global __CFG_LVP$OFF
   798                           __CFG_LVP$OFF equ 0x0
   799  0000                     global __CFG_BOR4V$BOR40V
   800                           __CFG_BOR4V$BOR40V equ 0x0
   801  0000                     global __CFG_WRT$OFF
   802                           __CFG_WRT$OFF equ 0x0
   803  0000                     	file	"C:\Users\JOSJAV~1\AppData\Local\Temp\somo."
   804                           	line	#
   805                           psect cinit,class=CODE,delta=2
   806                           global start_initialization
   807                           start_initialization:
   808  000F                     
   809                           global __initialization
   810                           __initialization:
   811  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
   812                           global __pbssCOMMON
   813                           __pbssCOMMON:
   814  0075                     _valor1:
   815  0075                            ds      2
   816  0075                     
   817                           psect	dataCOMMON,class=COMMON,space=1,noexec
   818                           global __pdataCOMMON
   819                           __pdataCOMMON:
   820  0077                     	file	"Prinrasp.c"
   821                           	line	31
   822                           _lectura:
   823  0077                            ds      2
   824  0077                     
   825                           psect	bssBANK0,class=BANK0,space=1,noexec
   826                           global __pbssBANK0
   827                           __pbssBANK0:
   828  0020                     _contador:
   829  0020                            ds      2
   830  0020                     
   831                           _valor4:
   832  0022                            ds      2
   833  0022                     
   834                           _valor3:
   835  0024                            ds      2
   836  0024                     
   837                           _valor2:
   838  0026                            ds      2
   839  0026                     
   840                           	file	"C:\Users\JOSJAV~1\AppData\Local\Temp\somo."
   841                           	line	#
   842                           ; Initialize objects allocated to COMMON
   843                           	global __pidataCOMMON
   844                           psect cinit,class=CODE,delta=2,merge=1
   845                           	fcall	__pidataCOMMON+0		;fetch initializer
   846  000F  120A  118A  2159  120A  118A  	movwf	__pdataCOMMON+0&07fh		
   847  0014  00F7               	fcall	__pidataCOMMON+1		;fetch initializer
   848  0015  120A  118A  215A  120A  118A  	movwf	__pdataCOMMON+1&07fh		
   849  001A  00F8               	line	#
   850                           ; Clear objects allocated to BANK0
   851                           psect cinit,class=CODE,delta=2,merge=1
   852                           	clrf	((__pbssBANK0)+0)&07Fh
   853  001B  01A0               	clrf	((__pbssBANK0)+1)&07Fh
   854  001C  01A1               	clrf	((__pbssBANK0)+2)&07Fh
   855  001D  01A2               	clrf	((__pbssBANK0)+3)&07Fh
   856  001E  01A3               	clrf	((__pbssBANK0)+4)&07Fh
   857  001F  01A4               	clrf	((__pbssBANK0)+5)&07Fh
   858  0020  01A5               	clrf	((__pbssBANK0)+6)&07Fh
   859  0021  01A6               	clrf	((__pbssBANK0)+7)&07Fh
   860  0022  01A7               ; Clear objects allocated to COMMON
   861                           psect cinit,class=CODE,delta=2,merge=1
   862                           	clrf	((__pbssCOMMON)+0)&07Fh
   863  0023  01F5               	clrf	((__pbssCOMMON)+1)&07Fh
   864  0024  01F6               psect cinit,class=CODE,delta=2,merge=1
   865                           global end_of_initialization,__end_of__initialization
   866                           
   867                           ;End of C runtime variable initialization code
   868                           
   869                           end_of_initialization:
   870  0025                     __end_of__initialization:
   871  0025                     clrf status
   872  0025  0183               ljmp _main	;jump to C main() function
   873  0026  120A  118A  2829   psect	cstackCOMMON,class=COMMON,space=1,noexec
   874                           global __pcstackCOMMON
   875                           __pcstackCOMMON:
   876  0070                     ?_spiRead:	; 1 bytes @ 0x0
   877  0070                     ??_spiRead:	; 1 bytes @ 0x0
   878  0070                     ?_spiWrite:	; 1 bytes @ 0x0
   879  0070                     ??_spiWrite:	; 1 bytes @ 0x0
   880  0070                     ?_config:	; 1 bytes @ 0x0
   881  0070                     ?_isr:	; 1 bytes @ 0x0
   882  0070                     ?_main:	; 1 bytes @ 0x0
   883  0070                     ?_spiReceiveWait:	; 1 bytes @ 0x0
   884  0070                     ??_spiReceiveWait:	; 1 bytes @ 0x0
   885  0070                     	global	spiWrite@dat
   886                           spiWrite@dat:	; 1 bytes @ 0x0
   887  0070                     	ds	1
   888  0070                     ??_isr:	; 1 bytes @ 0x1
   889  0071                     	ds	4
   890  0071                     ??_spiInit:	; 1 bytes @ 0x5
   891  0075                     ??_config:	; 1 bytes @ 0x5
   892  0075                     psect	cstackBANK0,class=BANK0,space=1,noexec
   893                           global __pcstackBANK0
   894                           __pcstackBANK0:
   895  0028                     ?_spiInit:	; 1 bytes @ 0x0
   896  0028                     	global	spiInit@sDataSample
   897                           spiInit@sDataSample:	; 1 bytes @ 0x0
   898  0028                     	ds	1
   899  0028                     	global	spiInit@sClockIdle
   900                           spiInit@sClockIdle:	; 1 bytes @ 0x1
   901  0029                     	ds	1
   902  0029                     	global	spiInit@sTransmitEdge
   903                           spiInit@sTransmitEdge:	; 1 bytes @ 0x2
   904  002A                     	ds	1
   905  002A                     	global	spiInit@sType
   906                           spiInit@sType:	; 1 bytes @ 0x3
   907  002B                     	ds	1
   908  002B                     ??_main:	; 1 bytes @ 0x4
   909  002C                     	ds	2
   910  002C                     ;!
   911                           ;!Data Sizes:
   912                           ;!    Strings     0
   913                           ;!    Constant    0
   914                           ;!    Data        2
   915                           ;!    BSS         10
   916                           ;!    Persistent  0
   917                           ;!    Stack       0
   918                           ;!
   919                           ;!Auto Spaces:
   920                           ;!    Space          Size  Autos    Used
   921                           ;!    COMMON           14      5       9
   922                           ;!    BANK0            80      6      14
   923                           ;!    BANK1            80      0       0
   924                           ;!    BANK3            96      0       0
   925                           ;!    BANK2            96      0       0
   926                           
   927                           ;!
   928                           ;!Pointer List with Targets:
   929                           ;!
   930                           ;!    None.
   931                           
   932                           
   933                           ;!
   934                           ;!Critical Paths under _main in COMMON
   935                           ;!
   936                           ;!    None.
   937                           ;!
   938                           ;!Critical Paths under _isr in COMMON
   939                           ;!
   940                           ;!    _isr->_spiWrite
   941                           ;!
   942                           ;!Critical Paths under _main in BANK0
   943                           ;!
   944                           ;!    _main->_spiInit
   945                           ;!
   946                           ;!Critical Paths under _isr in BANK0
   947                           ;!
   948                           ;!    None.
   949                           ;!
   950                           ;!Critical Paths under _main in BANK1
   951                           ;!
   952                           ;!    None.
   953                           ;!
   954                           ;!Critical Paths under _isr in BANK1
   955                           ;!
   956                           ;!    None.
   957                           ;!
   958                           ;!Critical Paths under _main in BANK3
   959                           ;!
   960                           ;!    None.
   961                           ;!
   962                           ;!Critical Paths under _isr in BANK3
   963                           ;!
   964                           ;!    None.
   965                           ;!
   966                           ;!Critical Paths under _main in BANK2
   967                           ;!
   968                           ;!    None.
   969                           ;!
   970                           ;!Critical Paths under _isr in BANK2
   971                           ;!
   972                           ;!    None.
   973                           
   974 ;;
   975 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   976 ;;
   977                           
   978                           ;!
   979                           ;!Call Graph Tables:
   980                           ;!
   981                           ;! ---------------------------------------------------------------------------------
   982                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   983                           ;! ---------------------------------------------------------------------------------
   984                           ;! (0) _main                                                 2     2      0     456
   985                           ;!                                              4 BANK0      2     2      0
   986                           ;!                             _config
   987                           ;!                            _spiInit
   988                           ;! ---------------------------------------------------------------------------------
   989                           ;! (1) _spiInit                                              4     1      3     456
   990                           ;!                                              0 BANK0      4     1      3
   991                           ;! ---------------------------------------------------------------------------------
   992                           ;! (1) _config                                               0     0      0       0
   993                           ;! ---------------------------------------------------------------------------------
   994                           ;! Estimated maximum stack depth 1
   995                           ;! ---------------------------------------------------------------------------------
   996                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   997                           ;! ---------------------------------------------------------------------------------
   998                           ;! (2) _isr                                                  4     4      0      22
   999                           ;!                                              1 COMMON     4     4      0
  1000                           ;!                            _spiRead
  1001                           ;!                           _spiWrite
  1002                           ;! ---------------------------------------------------------------------------------
  1003                           ;! (3) _spiWrite                                             1     1      0      22
  1004                           ;!                                              0 COMMON     1     1      0
  1005                           ;! ---------------------------------------------------------------------------------
  1006                           ;! (3) _spiRead                                              0     0      0       0
  1007                           ;!                     _spiReceiveWait
  1008                           ;! ---------------------------------------------------------------------------------
  1009                           ;! (4) _spiReceiveWait                                       0     0      0       0
  1010                           ;! ---------------------------------------------------------------------------------
  1011                           ;! Estimated maximum stack depth 4
  1012                           ;! ---------------------------------------------------------------------------------
  1013                           ;!
  1014                           ;! Call Graph Graphs:
  1015                           ;!
  1016                           ;! _main (ROOT)
  1017                           ;!   _config
  1018                           ;!   _spiInit
  1019                           ;!
  1020                           ;! _isr (ROOT)
  1021                           ;!   _spiRead
  1022                           ;!     _spiReceiveWait
  1023                           ;!   _spiWrite
  1024                           ;!
  1025                           
  1026                           ;! Address spaces:
  1027                           
  1028                           ;!Name               Size   Autos  Total    Cost      Usage
  1029                           ;!BANK3               60      0       0       9        0.0%
  1030                           ;!BITBANK3            60      0       0       8        0.0%
  1031                           ;!SFR3                 0      0       0       4        0.0%
  1032                           ;!BITSFR3              0      0       0       4        0.0%
  1033                           ;!BANK2               60      0       0      11        0.0%
  1034                           ;!BITBANK2            60      0       0      10        0.0%
  1035                           ;!SFR2                 0      0       0       5        0.0%
  1036                           ;!BITSFR2              0      0       0       5        0.0%
  1037                           ;!BANK1               50      0       0       7        0.0%
  1038                           ;!BITBANK1            50      0       0       6        0.0%
  1039                           ;!SFR1                 0      0       0       2        0.0%
  1040                           ;!BITSFR1              0      0       0       2        0.0%
  1041                           ;!BANK0               50      6       E       5       17.5%
  1042                           ;!BITBANK0            50      0       0       4        0.0%
  1043                           ;!SFR0                 0      0       0       1        0.0%
  1044                           ;!BITSFR0              0      0       0       1        0.0%
  1045                           ;!COMMON               E      5       9       1       64.3%
  1046                           ;!BITCOMMON            E      0       0       0        0.0%
  1047                           ;!CODE                 0      0       0       0        0.0%
  1048                           ;!DATA                 0      0      17      12        0.0%
  1049                           ;!ABS                  0      0      17       3        0.0%
  1050                           ;!NULL                 0      0       0       0        0.0%
  1051                           ;!STACK                0      0       0       2        0.0%
  1052                           ;!EEDATA             100      0       0       0        0.0%
  1053                           
  1054                           	global	_main
  1055                           
  1056 ;; *************** function _main *****************
  1057 ;; Defined at:
  1058 ;;		line 49 in file "Prinrasp.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;		None
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;		None
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      void 
  1065 ;; Registers used:
  1066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : B00/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1072 ;;      Params:         0       0       0       0       0
  1073 ;;      Locals:         0       0       0       0       0
  1074 ;;      Temps:          0       2       0       0       0
  1075 ;;      Totals:         0       2       0       0       0
  1076 ;;Total ram usage:        2 bytes
  1077 ;; Hardware stack levels required when called:    4
  1078 ;; This function calls:
  1079 ;;		_config
  1080 ;;		_spiInit
  1081 ;; This function is called by:
  1082 ;;		Startup code after reset
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1086                           	file	"Prinrasp.c"
  1087                           	line	49
  1088                           global __pmaintext
  1089                           __pmaintext:	;psect for function _main
  1090  0029                     psect	maintext
  1091                           	file	"Prinrasp.c"
  1092                           	line	49
  1093                           	global	__size_of_main
  1094                           	__size_of_main	equ	__end_of_main-_main
  1095  0090                     	
  1096                           _main:	
  1097  0029                     ;incstack = 0
  1098                           	opt	stack 4
  1099                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1100                           	line	50
  1101                           	
  1102                           l973:	
  1103  0029                     ;Prinrasp.c: 50:                     while(!RCIF){
  1104                           	movlw	low(0FFh)
  1105  0029  30FF               	bsf	status, 5	;RP0=1, select bank3
  1106  002A  1683               	bsf	status, 6	;RP1=1, select bank3
  1107  002B  1703               	movwf	(392)^0180h	;volatile
  1108  002C  0088               	line	51
  1109                           ;Prinrasp.c: 51:                     }
  1110                           	movlw	low(0FFh)
  1111  002D  30FF               	bsf	status, 5	;RP0=1, select bank1
  1112  002E  1683               	bcf	status, 6	;RP1=0, select bank1
  1113  002F  1303               	movwf	(133)^080h	;volatile
  1114  0030  0085               	line	52
  1115                           	
  1116                           l975:	
  1117  0031                     ;Prinrasp.c: 52:                     valor4 = RCREG;
  1118                           	bsf	(11),7	;volatile
  1119  0031  178B               	line	53
  1120                           	
  1121                           l977:	
  1122  0032                     ;Prinrasp.c: 53:                     break;
  1123                           	bsf	(11),6	;volatile
  1124  0032  170B               	line	54
  1125                           	
  1126                           l979:	
  1127  0033                     ;Prinrasp.c: 54:                 default:
  1128                           	bcf	status, 5	;RP0=0, select bank0
  1129  0033  1283               	bcf	status, 6	;RP1=0, select bank0
  1130  0034  1303               	bcf	(12),3	;volatile
  1131  0035  118C               	line	55
  1132                           	
  1133                           l981:	
  1134  0036                     ;Prinrasp.c: 55:                     while(!RCIF){
  1135                           	bsf	status, 5	;RP0=1, select bank1
  1136  0036  1683               	bcf	status, 6	;RP1=0, select bank1
  1137  0037  1303               	bsf	(140)^080h,3	;volatile
  1138  0038  158C               	line	56
  1139                           	
  1140                           l983:	
  1141  0039                     ;Prinrasp.c: 56:                     }
  1142                           	bsf	(133)^080h,5	;volatile
  1143  0039  1685               	line	57
  1144                           	
  1145                           l985:	
  1146  003A                     ;Prinrasp.c: 57:                     valor1 = RCREG;
  1147                           	bcf	status, 5	;RP0=0, select bank0
  1148  003A  1283               	bcf	status, 6	;RP1=0, select bank0
  1149  003B  1303               	clrf	(spiInit@sDataSample)
  1150  003C  01A8               	clrf	(spiInit@sClockIdle)
  1151  003D  01A9               	clrf	(spiInit@sTransmitEdge)
  1152  003E  01AA               	movlw	low(024h)
  1153  003F  3024               	fcall	_spiInit
  1154  0040  120A  118A  210D  120A  118A  	line	58
  1155                           	
  1156                           l987:	
  1157  0045                     ;Prinrasp.c: 58:                     break;
  1158                           	fcall	_config
  1159  0045  120A  118A  212C  120A  118A  	goto	l989
  1160  004A  284B               	line	59
  1161                           ;Prinrasp.c: 59:             }
  1162                           	
  1163                           l55:	
  1164  004B                     	line	61
  1165                           	
  1166                           l989:	
  1167  004B                     ;Prinrasp.c: 60:         };Prinrasp.c: 61:     }
  1168                           	bcf	status, 5	;RP0=0, select bank0
  1169  004B  1283               	bcf	status, 6	;RP1=0, select bank0
  1170  004C  1303               	btfss	(101/8),(101)&7	;volatile
  1171  004D  1E8C               	goto	u271
  1172  004E  2850               	goto	u270
  1173  004F  2851               u271:
  1174  0050                     	goto	l989
  1175  0050  284B               u270:
  1176  0051                     	line	62
  1177                           	
  1178                           l991:	
  1179  0051                     ;Prinrasp.c: 62: }
  1180                           	movf	(26),w	;volatile
  1181  0051  081A               	movwf	(??_main+0)+0
  1182  0052  00AC               	clrf	(??_main+0)+0+1
  1183  0053  01AD               	movf	0+(??_main+0)+0,w
  1184  0054  082C               	movwf	(_contador)
  1185  0055  00A0               	movf	1+(??_main+0)+0,w
  1186  0056  082D               	movwf	(_contador+1)
  1187  0057  00A1               	line	63
  1188                           	goto	l1005
  1189  0058  28A0               	line	64
  1190                           	
  1191                           l58:	
  1192  0059                     	line	65
  1193                           	goto	l59
  1194  0059  285A               	
  1195                           l60:	
  1196  005A                     	line	66
  1197                           	
  1198                           l59:	
  1199  005A                     	line	65
  1200                           	btfss	(101/8),(101)&7	;volatile
  1201  005A  1E8C               	goto	u281
  1202  005B  285D               	goto	u280
  1203  005C  285E               u281:
  1204  005D                     	goto	l59
  1205  005D  285A               u280:
  1206  005E                     	goto	l993
  1207  005E  285F               	
  1208                           l61:	
  1209  005F                     	line	67
  1210                           	
  1211                           l993:	
  1212  005F                     	movf	(26),w	;volatile
  1213  005F  081A               	movwf	(??_main+0)+0
  1214  0060  00AC               	clrf	(??_main+0)+0+1
  1215  0061  01AD               	movf	0+(??_main+0)+0,w
  1216  0062  082C               	movwf	(_valor1)
  1217  0063  00F5               	movf	1+(??_main+0)+0,w
  1218  0064  082D               	movwf	(_valor1+1)
  1219  0065  00F6               	line	68
  1220                           	goto	l989
  1221  0066  284B               	line	69
  1222                           	
  1223                           l63:	
  1224  0067                     	line	70
  1225                           	goto	l64
  1226  0067  2868               	
  1227                           l65:	
  1228  0068                     	line	71
  1229                           	
  1230                           l64:	
  1231  0068                     	line	70
  1232                           	btfss	(101/8),(101)&7	;volatile
  1233  0068  1E8C               	goto	u291
  1234  0069  286B               	goto	u290
  1235  006A  286C               u291:
  1236  006B                     	goto	l64
  1237  006B  2868               u290:
  1238  006C                     	goto	l995
  1239  006C  286D               	
  1240                           l66:	
  1241  006D                     	line	72
  1242                           	
  1243                           l995:	
  1244  006D                     	movf	(26),w	;volatile
  1245  006D  081A               	movwf	(??_main+0)+0
  1246  006E  00AC               	clrf	(??_main+0)+0+1
  1247  006F  01AD               	movf	0+(??_main+0)+0,w
  1248  0070  082C               	movwf	(_valor2)
  1249  0071  00A6               	movf	1+(??_main+0)+0,w
  1250  0072  082D               	movwf	(_valor2+1)
  1251  0073  00A7               	line	73
  1252                           	goto	l989
  1253  0074  284B               	line	74
  1254                           	
  1255                           l67:	
  1256  0075                     	line	75
  1257                           	goto	l68
  1258  0075  2876               	
  1259                           l69:	
  1260  0076                     	line	76
  1261                           	
  1262                           l68:	
  1263  0076                     	line	75
  1264                           	btfss	(101/8),(101)&7	;volatile
  1265  0076  1E8C               	goto	u301
  1266  0077  2879               	goto	u300
  1267  0078  287A               u301:
  1268  0079                     	goto	l68
  1269  0079  2876               u300:
  1270  007A                     	goto	l997
  1271  007A  287B               	
  1272                           l70:	
  1273  007B                     	line	77
  1274                           	
  1275                           l997:	
  1276  007B                     	movf	(26),w	;volatile
  1277  007B  081A               	movwf	(??_main+0)+0
  1278  007C  00AC               	clrf	(??_main+0)+0+1
  1279  007D  01AD               	movf	0+(??_main+0)+0,w
  1280  007E  082C               	movwf	(_valor3)
  1281  007F  00A4               	movf	1+(??_main+0)+0,w
  1282  0080  082D               	movwf	(_valor3+1)
  1283  0081  00A5               	line	78
  1284                           	goto	l989
  1285  0082  284B               	line	79
  1286                           	
  1287                           l71:	
  1288  0083                     	line	80
  1289                           	goto	l72
  1290  0083  2884               	
  1291                           l73:	
  1292  0084                     	line	81
  1293                           	
  1294                           l72:	
  1295  0084                     	line	80
  1296                           	btfss	(101/8),(101)&7	;volatile
  1297  0084  1E8C               	goto	u311
  1298  0085  2887               	goto	u310
  1299  0086  2888               u311:
  1300  0087                     	goto	l72
  1301  0087  2884               u310:
  1302  0088                     	goto	l999
  1303  0088  2889               	
  1304                           l74:	
  1305  0089                     	line	82
  1306                           	
  1307                           l999:	
  1308  0089                     	movf	(26),w	;volatile
  1309  0089  081A               	movwf	(??_main+0)+0
  1310  008A  00AC               	clrf	(??_main+0)+0+1
  1311  008B  01AD               	movf	0+(??_main+0)+0,w
  1312  008C  082C               	movwf	(_valor4)
  1313  008D  00A2               	movf	1+(??_main+0)+0,w
  1314  008E  082D               	movwf	(_valor4+1)
  1315  008F  00A3               	line	83
  1316                           	goto	l989
  1317  0090  284B               	line	84
  1318                           	
  1319                           l75:	
  1320  0091                     	line	85
  1321                           	goto	l76
  1322  0091  2892               	
  1323                           l77:	
  1324  0092                     	line	86
  1325                           	
  1326                           l76:	
  1327  0092                     	line	85
  1328                           	btfss	(101/8),(101)&7	;volatile
  1329  0092  1E8C               	goto	u321
  1330  0093  2895               	goto	u320
  1331  0094  2896               u321:
  1332  0095                     	goto	l76
  1333  0095  2892               u320:
  1334  0096                     	goto	l1001
  1335  0096  2897               	
  1336                           l78:	
  1337  0097                     	line	87
  1338                           	
  1339                           l1001:	
  1340  0097                     	movf	(26),w	;volatile
  1341  0097  081A               	movwf	(??_main+0)+0
  1342  0098  00AC               	clrf	(??_main+0)+0+1
  1343  0099  01AD               	movf	0+(??_main+0)+0,w
  1344  009A  082C               	movwf	(_valor1)
  1345  009B  00F5               	movf	1+(??_main+0)+0,w
  1346  009C  082D               	movwf	(_valor1+1)
  1347  009D  00F6               	line	88
  1348                           	goto	l989
  1349  009E  284B               	line	89
  1350                           	
  1351                           l1003:	
  1352  009F                     	goto	l989
  1353  009F  284B               	
  1354                           l57:	
  1355  00A0                     	
  1356                           l1005:	
  1357  00A0                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  1358                           ; Switch size 1, requested type "space"
  1359                           ; Number of cases is 1, Range of values is 0 to 0
  1360                           ; switch strategies available:
  1361                           ; Name         Instructions Cycles
  1362                           ; simple_byte            4     3 (average)
  1363                           ; direct_byte           11     8 (fixed)
  1364                           ; jumptable            260     6 (fixed)
  1365                           ;	Chosen strategy is simple_byte
  1366                           
  1367                           	movf (_contador+1),w
  1368  00A0  0821               	opt asmopt_push
  1369                           	opt asmopt_off
  1370                           	xorlw	0^0	; case 0
  1371  00A1  3A00               	skipnz
  1372  00A2  1903               	goto	l1043
  1373  00A3  28A5               	goto	l76
  1374  00A4  2892               	opt asmopt_pop
  1375                           	
  1376                           l1043:	
  1377  00A5                     ; Switch size 1, requested type "space"
  1378                           ; Number of cases is 4, Range of values is 1 to 4
  1379                           ; switch strategies available:
  1380                           ; Name         Instructions Cycles
  1381                           ; simple_byte           13     7 (average)
  1382                           ; direct_byte           23    11 (fixed)
  1383                           ; jumptable            263     9 (fixed)
  1384                           ;	Chosen strategy is simple_byte
  1385                           
  1386                           	movf (_contador),w
  1387  00A5  0820               	opt asmopt_push
  1388                           	opt asmopt_off
  1389                           	xorlw	1^0	; case 1
  1390  00A6  3A01               	skipnz
  1391  00A7  1903               	goto	l59
  1392  00A8  285A               	xorlw	2^1	; case 2
  1393  00A9  3A03               	skipnz
  1394  00AA  1903               	goto	l64
  1395  00AB  2868               	xorlw	3^2	; case 3
  1396  00AC  3A01               	skipnz
  1397  00AD  1903               	goto	l68
  1398  00AE  2876               	xorlw	4^3	; case 4
  1399  00AF  3A07               	skipnz
  1400  00B0  1903               	goto	l72
  1401  00B1  2884               	goto	l76
  1402  00B2  2892               	opt asmopt_pop
  1403                           
  1404                           	
  1405                           l62:	
  1406  00B3                     	goto	l989
  1407  00B3  284B               	line	90
  1408                           	
  1409                           l56:	
  1410  00B4                     	goto	l989
  1411  00B4  284B               	line	91
  1412                           	
  1413                           l79:	
  1414  00B5                     	goto	l989
  1415  00B5  284B               	
  1416                           l80:	
  1417  00B6                     	line	92
  1418                           	
  1419                           l81:	
  1420  00B6                     	global	start
  1421                           	ljmp	start
  1422  00B6  120A  118A  280C   	opt stack 0
  1423                           GLOBAL	__end_of_main
  1424                           	__end_of_main:
  1425  00B9                     	signat	_main,89
  1426                           	global	_spiInit
  1427                           
  1428 ;; *************** function _spiInit *****************
  1429 ;; Defined at:
  1430 ;;		line 12 in file "SPI.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;  sType           1    wreg     enum E1264
  1433 ;;  sDataSample     1    0[BANK0 ] enum E1272
  1434 ;;  sClockIdle      1    1[BANK0 ] enum E1276
  1435 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;  sType           1    3[BANK0 ] enum E1264
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      void 
  1440 ;; Registers used:
  1441 ;;		wreg, status,2, status,0
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1447 ;;      Params:         0       3       0       0       0
  1448 ;;      Locals:         0       1       0       0       0
  1449 ;;      Temps:          0       0       0       0       0
  1450 ;;      Totals:         0       4       0       0       0
  1451 ;;Total ram usage:        4 bytes
  1452 ;; Hardware stack levels used:    1
  1453 ;; Hardware stack levels required when called:    3
  1454 ;; This function calls:
  1455 ;;		Nothing
  1456 ;; This function is called by:
  1457 ;;		_main
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1461                           	file	"SPI.c"
  1462                           	line	12
  1463                           global __ptext1
  1464                           __ptext1:	;psect for function _spiInit
  1465  010D                     psect	text1
  1466                           	file	"SPI.c"
  1467                           	line	12
  1468                           	global	__size_of_spiInit
  1469                           	__size_of_spiInit	equ	__end_of_spiInit-_spiInit
  1470  001F                     	
  1471                           _spiInit:	
  1472  010D                     ;incstack = 0
  1473                           	opt	stack 4
  1474                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1475                           ;spiInit@sType stored from wreg
  1476                           	bcf	status, 5	;RP0=0, select bank0
  1477  010D  1283               	bcf	status, 6	;RP1=0, select bank0
  1478  010E  1303               	movwf	(spiInit@sType)
  1479  010F  00AB               	line	14
  1480                           	
  1481                           l963:	
  1482  0110                     ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
                                 ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  1483                           	bsf	status, 5	;RP0=1, select bank1
  1484  0110  1683               	bcf	status, 6	;RP1=0, select bank1
  1485  0111  1303               	bcf	(1085/8)^080h,(1085)&7	;volatile
  1486  0112  1287               	line	15
  1487                           ;SPI.c: 15:     if(sType & 0b00000100)
  1488                           	bcf	status, 5	;RP0=0, select bank0
  1489  0113  1283               	bcf	status, 6	;RP1=0, select bank0
  1490  0114  1303               	btfss	(spiInit@sType),(2)&7
  1491  0115  1D2B               	goto	u261
  1492  0116  2918               	goto	u260
  1493  0117  2919               u261:
  1494  0118                     	goto	l969
  1495  0118  291F               u260:
  1496  0119                     	line	17
  1497                           	
  1498                           l965:	
  1499  0119                     ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  1500                           	movf	(spiInit@sTransmitEdge),w
  1501  0119  082A               	bsf	status, 5	;RP0=1, select bank1
  1502  011A  1683               	bcf	status, 6	;RP1=0, select bank1
  1503  011B  1303               	movwf	(148)^080h	;volatile
  1504  011C  0094               	line	18
  1505                           	
  1506                           l967:	
  1507  011D                     ;SPI.c: 18:         TRISC3 = 1;
  1508                           	bsf	(1083/8)^080h,(1083)&7	;volatile
  1509  011D  1587               	line	19
  1510                           ;SPI.c: 19:     }
  1511                           	goto	l118
  1512  011E  2926               	line	20
  1513                           ;SPI.c: 20:     else
  1514                           	
  1515                           l117:	
  1516  011F                     	line	22
  1517                           	
  1518                           l969:	
  1519  011F                     ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1520                           	bcf	status, 5	;RP0=0, select bank0
  1521  011F  1283               	movf	(spiInit@sDataSample),w
  1522  0120  0828               	iorwf	(spiInit@sTransmitEdge),w
  1523  0121  042A               	bsf	status, 5	;RP0=1, select bank1
  1524  0122  1683               	bcf	status, 6	;RP1=0, select bank1
  1525  0123  1303               	movwf	(148)^080h	;volatile
  1526  0124  0094               	line	23
  1527                           	
  1528                           l971:	
  1529  0125                     ;SPI.c: 23:         TRISC3 = 0;
  1530                           	bcf	(1083/8)^080h,(1083)&7	;volatile
  1531  0125  1187               	line	24
  1532                           ;SPI.c: 24:     }
  1533                           	
  1534                           l118:	
  1535  0126                     	line	26
  1536                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  1537                           	bcf	status, 5	;RP0=0, select bank0
  1538  0126  1283               	bcf	status, 6	;RP1=0, select bank0
  1539  0127  1303               	movf	(spiInit@sType),w
  1540  0128  082B               	iorwf	(spiInit@sClockIdle),w
  1541  0129  0429               	movwf	(20)	;volatile
  1542  012A  0094               	line	27
  1543                           	
  1544                           l119:	
  1545  012B                     	return
  1546  012B  0008               	opt stack 0
  1547                           GLOBAL	__end_of_spiInit
  1548                           	__end_of_spiInit:
  1549  012C                     	signat	_spiInit,16505
  1550                           	global	_config
  1551                           
  1552 ;; *************** function _config *****************
  1553 ;; Defined at:
  1554 ;;		line 12 in file "USART1.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;		None
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;		None
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  1    wreg      void 
  1561 ;; Registers used:
  1562 ;;		wreg, status,2
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1568 ;;      Params:         0       0       0       0       0
  1569 ;;      Locals:         0       0       0       0       0
  1570 ;;      Temps:          0       0       0       0       0
  1571 ;;      Totals:         0       0       0       0       0
  1572 ;;Total ram usage:        0 bytes
  1573 ;; Hardware stack levels used:    1
  1574 ;; Hardware stack levels required when called:    3
  1575 ;; This function calls:
  1576 ;;		Nothing
  1577 ;; This function is called by:
  1578 ;;		_main
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1582                           	file	"USART1.c"
  1583                           	line	12
  1584                           global __ptext2
  1585                           __ptext2:	;psect for function _config
  1586  012C                     psect	text2
  1587                           	file	"USART1.c"
  1588                           	line	12
  1589                           	global	__size_of_config
  1590                           	__size_of_config	equ	__end_of_config-_config
  1591  0014                     	
  1592                           _config:	
  1593  012C                     ;incstack = 0
  1594                           	opt	stack 4
  1595                           ; Regs used in _config: [wreg+status,2]
  1596                           	line	13
  1597                           	
  1598                           l861:	
  1599  012C                     ;USART1.c: 13:     TXSTAbits.SYNC = 0;
  1600                           	bsf	status, 5	;RP0=1, select bank1
  1601  012C  1683               	bcf	status, 6	;RP1=0, select bank1
  1602  012D  1303               	bcf	(152)^080h,4	;volatile
  1603  012E  1218               	line	14
  1604                           ;USART1.c: 14:     TXSTAbits.BRGH = 0;
  1605                           	bcf	(152)^080h,2	;volatile
  1606  012F  1118               	line	15
  1607                           ;USART1.c: 15:     BAUDCTLbits.BRG16 = 1;
  1608                           	bsf	status, 5	;RP0=1, select bank3
  1609  0130  1683               	bsf	status, 6	;RP1=1, select bank3
  1610  0131  1703               	bsf	(391)^0180h,3	;volatile
  1611  0132  1587               	line	16
  1612                           	
  1613                           l863:	
  1614  0133                     ;USART1.c: 16:     SPBRG = 25;
  1615                           	movlw	low(019h)
  1616  0133  3019               	bsf	status, 5	;RP0=1, select bank1
  1617  0134  1683               	bcf	status, 6	;RP1=0, select bank1
  1618  0135  1303               	movwf	(153)^080h	;volatile
  1619  0136  0099               	line	17
  1620                           	
  1621                           l865:	
  1622  0137                     ;USART1.c: 17:     SPBRGH = 0;
  1623                           	clrf	(154)^080h	;volatile
  1624  0137  019A               	line	18
  1625                           	
  1626                           l867:	
  1627  0138                     ;USART1.c: 18:     RCSTAbits.SPEN = 1;
  1628                           	bcf	status, 5	;RP0=0, select bank0
  1629  0138  1283               	bcf	status, 6	;RP1=0, select bank0
  1630  0139  1303               	bsf	(24),7	;volatile
  1631  013A  1798               	line	19
  1632                           	
  1633                           l869:	
  1634  013B                     ;USART1.c: 19:     RCSTAbits.CREN = 1;
  1635                           	bsf	(24),4	;volatile
  1636  013B  1618               	line	20
  1637                           	
  1638                           l871:	
  1639  013C                     ;USART1.c: 20:     TXSTAbits.TXEN = 1;
  1640                           	bsf	status, 5	;RP0=1, select bank1
  1641  013C  1683               	bcf	status, 6	;RP1=0, select bank1
  1642  013D  1303               	bsf	(152)^080h,5	;volatile
  1643  013E  1698               	line	21
  1644                           	
  1645                           l96:	
  1646  013F                     	return
  1647  013F  0008               	opt stack 0
  1648                           GLOBAL	__end_of_config
  1649                           	__end_of_config:
  1650  0140                     	signat	_config,89
  1651                           	global	_isr
  1652                           
  1653 ;; *************** function _isr *****************
  1654 ;; Defined at:
  1655 ;;		line 33 in file "Prinrasp.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;		None
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;		None
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  1    wreg      void 
  1662 ;; Registers used:
  1663 ;;		wreg, status,2, status,0, pclath, cstack
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1669 ;;      Params:         0       0       0       0       0
  1670 ;;      Locals:         0       0       0       0       0
  1671 ;;      Temps:          4       0       0       0       0
  1672 ;;      Totals:         4       0       0       0       0
  1673 ;;Total ram usage:        4 bytes
  1674 ;; Hardware stack levels used:    1
  1675 ;; Hardware stack levels required when called:    2
  1676 ;; This function calls:
  1677 ;;		_spiRead
  1678 ;;		_spiWrite
  1679 ;; This function is called by:
  1680 ;;		Interrupt level 1
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1684                           	file	"Prinrasp.c"
  1685                           	line	33
  1686                           global __ptext3
  1687                           __ptext3:	;psect for function _isr
  1688  00B9                     psect	text3
  1689                           	file	"Prinrasp.c"
  1690                           	line	33
  1691                           	global	__size_of_isr
  1692                           	__size_of_isr	equ	__end_of_isr-_isr
  1693  0054                     	
  1694                           _isr:	
  1695  00B9                     ;incstack = 0
  1696                           	opt	stack 4
  1697                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1698                           psect	intentry,class=CODE,delta=2
  1699                           global __pintentry
  1700                           __pintentry:
  1701  0004                     global interrupt_function
  1702                           interrupt_function:
  1703  0004                     	global saved_w
  1704                           	saved_w	set	btemp+0
  1705  007E                     	movwf	saved_w
  1706  0004  00FE               	swapf	status,w
  1707  0005  0E03               	movwf	(??_isr+2)
  1708  0006  00F3               	movf	pclath,w
  1709  0007  080A               	movwf	(??_isr+3)
  1710  0008  00F4               	ljmp	_isr
  1711  0009  120A  118A  28B9   psect	text3
  1712                           	line	34
  1713                           	
  1714                           i1l873:	
  1715  00B9                     ;Prinrasp.c: 34:                 case 1:
  1716                           	bcf	status, 5	;RP0=0, select bank0
  1717  00B9  1283               	bcf	status, 6	;RP1=0, select bank0
  1718  00BA  1303               	btfss	(99/8),(99)&7	;volatile
  1719  00BB  1D8C               	goto	u16_21
  1720  00BC  28BE               	goto	u16_20
  1721  00BD  28BF               u16_21:
  1722  00BE                     	goto	i1l50
  1723  00BE  2906               u16_20:
  1724  00BF                     	line	35
  1725                           	
  1726                           i1l875:	
  1727  00BF                     ;Prinrasp.c: 35:                     while(!RCIF){
  1728                           	fcall	_spiRead
  1729  00BF  120A  118A  2140  120A  118A  	movwf	(??_isr+0)+0
  1730  00C4  00F1               	clrf	(??_isr+0)+0+1
  1731  00C5  01F2               	movf	0+(??_isr+0)+0,w
  1732  00C6  0871               	movwf	(_lectura)
  1733  00C7  00F7               	movf	1+(??_isr+0)+0,w
  1734  00C8  0872               	movwf	(_lectura+1)
  1735  00C9  00F8               	line	36
  1736                           	
  1737                           i1l877:	
  1738  00CA                     ;Prinrasp.c: 36:                     }
  1739                           		decf	((_lectura)),w
  1740  00CA  0377               iorwf	((_lectura+1)),w
  1741  00CB  0478               	btfss	status,2
  1742  00CC  1D03               	goto	u17_21
  1743  00CD  28CF               	goto	u17_20
  1744  00CE  28D0               u17_21:
  1745  00CF                     	goto	i1l881
  1746  00CF  28D7               u17_20:
  1747  00D0                     	line	37
  1748                           	
  1749                           i1l879:	
  1750  00D0                     ;Prinrasp.c: 37:                     valor1 = RCREG;
  1751                           	movf	(_valor1),w
  1752  00D0  0875               	fcall	_spiWrite
  1753  00D1  120A  118A  2153  120A  118A  	line	38
  1754                           ;Prinrasp.c: 38:                     break;
  1755                           	goto	i1l891
  1756  00D6  2902               	
  1757                           i1l44:	
  1758  00D7                     	
  1759                           i1l881:	
  1760  00D7                     		movlw	2
  1761  00D7  3002               	xorwf	((_lectura)),w
  1762  00D8  0677               iorwf	((_lectura+1)),w
  1763  00D9  0478               	btfss	status,2
  1764  00DA  1D03               	goto	u18_21
  1765  00DB  28DD               	goto	u18_20
  1766  00DC  28DE               u18_21:
  1767  00DD                     	goto	i1l885
  1768  00DD  28E7               u18_20:
  1769  00DE                     	line	39
  1770                           	
  1771                           i1l883:	
  1772  00DE                     ;Prinrasp.c: 39:                 case 2:
  1773                           	bcf	status, 5	;RP0=0, select bank0
  1774  00DE  1283               	bcf	status, 6	;RP1=0, select bank0
  1775  00DF  1303               	movf	(_valor2),w
  1776  00E0  0826               	fcall	_spiWrite
  1777  00E1  120A  118A  2153  120A  118A  	line	40
  1778                           ;Prinrasp.c: 40:                     while(!RCIF){
  1779                           	goto	i1l891
  1780  00E6  2902               	
  1781                           i1l46:	
  1782  00E7                     	
  1783                           i1l885:	
  1784  00E7                     		movlw	3
  1785  00E7  3003               	xorwf	((_lectura)),w
  1786  00E8  0677               iorwf	((_lectura+1)),w
  1787  00E9  0478               	btfss	status,2
  1788  00EA  1D03               	goto	u19_21
  1789  00EB  28ED               	goto	u19_20
  1790  00EC  28EE               u19_21:
  1791  00ED                     	goto	i1l889
  1792  00ED  28F7               u19_20:
  1793  00EE                     	line	41
  1794                           	
  1795                           i1l887:	
  1796  00EE                     ;Prinrasp.c: 41:                     }
  1797                           	bcf	status, 5	;RP0=0, select bank0
  1798  00EE  1283               	bcf	status, 6	;RP1=0, select bank0
  1799  00EF  1303               	movf	(_valor3),w
  1800  00F0  0824               	fcall	_spiWrite
  1801  00F1  120A  118A  2153  120A  118A  	line	42
  1802                           ;Prinrasp.c: 42:                     valor2 = RCREG;
  1803                           	goto	i1l891
  1804  00F6  2902               	
  1805                           i1l48:	
  1806  00F7                     	line	43
  1807                           	
  1808                           i1l889:	
  1809  00F7                     ;Prinrasp.c: 43:                     break;
  1810                           	bcf	status, 5	;RP0=0, select bank0
  1811  00F7  1283               	bcf	status, 6	;RP1=0, select bank0
  1812  00F8  1303               	movf	(_valor4),w
  1813  00F9  0822               	fcall	_spiWrite
  1814  00FA  120A  118A  2153  120A  118A  	goto	i1l891
  1815  00FF  2902               	line	44
  1816                           ;Prinrasp.c: 44:                 case 3:
  1817                           	
  1818                           i1l49:	
  1819  0100                     	goto	i1l891
  1820  0100  2902               	
  1821                           i1l47:	
  1822  0101                     	goto	i1l891
  1823  0101  2902               	
  1824                           i1l45:	
  1825  0102                     	line	45
  1826                           	
  1827                           i1l891:	
  1828  0102                     ;Prinrasp.c: 45:                     while(!RCIF){
  1829                           	bcf	status, 5	;RP0=0, select bank0
  1830  0102  1283               	bcf	status, 6	;RP1=0, select bank0
  1831  0103  1303               	bcf	(99/8),(99)&7	;volatile
  1832  0104  118C               	goto	i1l50
  1833  0105  2906               	line	46
  1834                           ;Prinrasp.c: 46:                     }
  1835                           	
  1836                           i1l43:	
  1837  0106                     	line	47
  1838                           	
  1839                           i1l50:	
  1840  0106                     	movf	(??_isr+3),w
  1841  0106  0874               	movwf	pclath
  1842  0107  008A               	swapf	(??_isr+2)^0FFFFFF80h,w
  1843  0108  0E73               	movwf	status
  1844  0109  0083               	swapf	saved_w,f
  1845  010A  0EFE               	swapf	saved_w,w
  1846  010B  0E7E               	retfie
  1847  010C  0009               	opt stack 0
  1848                           GLOBAL	__end_of_isr
  1849                           	__end_of_isr:
  1850  010D                     	signat	_isr,89
  1851                           	global	_spiWrite
  1852                           
  1853 ;; *************** function _spiWrite *****************
  1854 ;; Defined at:
  1855 ;;		line 34 in file "SPI.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;  dat             1    wreg     unsigned char 
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;  dat             1    0[COMMON] unsigned char 
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      void 
  1862 ;; Registers used:
  1863 ;;		wreg
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1869 ;;      Params:         0       0       0       0       0
  1870 ;;      Locals:         1       0       0       0       0
  1871 ;;      Temps:          0       0       0       0       0
  1872 ;;      Totals:         1       0       0       0       0
  1873 ;;Total ram usage:        1 bytes
  1874 ;; Hardware stack levels used:    1
  1875 ;; This function calls:
  1876 ;;		Nothing
  1877 ;; This function is called by:
  1878 ;;		_isr
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1882                           	file	"SPI.c"
  1883                           	line	34
  1884                           global __ptext4
  1885                           __ptext4:	;psect for function _spiWrite
  1886  0153                     psect	text4
  1887                           	file	"SPI.c"
  1888                           	line	34
  1889                           	global	__size_of_spiWrite
  1890                           	__size_of_spiWrite	equ	__end_of_spiWrite-_spiWrite
  1891  0006                     	
  1892                           _spiWrite:	
  1893  0153                     ;incstack = 0
  1894                           	opt	stack 5
  1895                           ; Regs used in _spiWrite: [wreg]
  1896                           ;spiWrite@dat stored from wreg
  1897                           	movwf	(spiWrite@dat)
  1898  0153  00F0               	line	36
  1899                           	
  1900                           i1l849:	
  1901  0154                     ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1902                           	movf	(spiWrite@dat),w
  1903  0154  0870               	bcf	status, 5	;RP0=0, select bank0
  1904  0155  1283               	bcf	status, 6	;RP1=0, select bank0
  1905  0156  1303               	movwf	(19)	;volatile
  1906  0157  0093               	line	37
  1907                           	
  1908                           i1l128:	
  1909  0158                     	return
  1910  0158  0008               	opt stack 0
  1911                           GLOBAL	__end_of_spiWrite
  1912                           	__end_of_spiWrite:
  1913  0159                     	signat	_spiWrite,4217
  1914                           	global	_spiRead
  1915                           
  1916 ;; *************** function _spiRead *****************
  1917 ;; Defined at:
  1918 ;;		line 47 in file "SPI.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;		None
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;		None
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  1    wreg      unsigned char 
  1925 ;; Registers used:
  1926 ;;		wreg, status,2, status,0, pclath, cstack
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1932 ;;      Params:         0       0       0       0       0
  1933 ;;      Locals:         0       0       0       0       0
  1934 ;;      Temps:          0       0       0       0       0
  1935 ;;      Totals:         0       0       0       0       0
  1936 ;;Total ram usage:        0 bytes
  1937 ;; Hardware stack levels used:    1
  1938 ;; Hardware stack levels required when called:    1
  1939 ;; This function calls:
  1940 ;;		_spiReceiveWait
  1941 ;; This function is called by:
  1942 ;;		_isr
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  1946                           	line	47
  1947                           global __ptext5
  1948                           __ptext5:	;psect for function _spiRead
  1949  0140                     psect	text5
  1950                           	file	"SPI.c"
  1951                           	line	47
  1952                           	global	__size_of_spiRead
  1953                           	__size_of_spiRead	equ	__end_of_spiRead-_spiRead
  1954  000A                     	
  1955                           _spiRead:	
  1956  0140                     ;incstack = 0
  1957                           	opt	stack 4
  1958                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1959                           	line	49
  1960                           	
  1961                           i1l843:	
  1962  0140                     ;SPI.c: 49:     spiReceiveWait();
  1963                           	fcall	_spiReceiveWait
  1964  0140  120A  118A  214A  120A  118A  	line	50
  1965                           	
  1966                           i1l845:	
  1967  0145                     ;SPI.c: 50:     return(SSPBUF);
  1968                           	bcf	status, 5	;RP0=0, select bank0
  1969  0145  1283               	bcf	status, 6	;RP1=0, select bank0
  1970  0146  1303               	movf	(19),w	;volatile
  1971  0147  0813               	goto	i1l136
  1972  0148  2949               	
  1973                           i1l847:	
  1974  0149                     	line	51
  1975                           	
  1976                           i1l136:	
  1977  0149                     	return
  1978  0149  0008               	opt stack 0
  1979                           GLOBAL	__end_of_spiRead
  1980                           	__end_of_spiRead:
  1981  014A                     	signat	_spiRead,89
  1982                           	global	_spiReceiveWait
  1983                           
  1984 ;; *************** function _spiReceiveWait *****************
  1985 ;; Defined at:
  1986 ;;		line 29 in file "SPI.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;		None
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;		None
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  1    wreg      void 
  1993 ;; Registers used:
  1994 ;;		None
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2000 ;;      Params:         0       0       0       0       0
  2001 ;;      Locals:         0       0       0       0       0
  2002 ;;      Temps:          0       0       0       0       0
  2003 ;;      Totals:         0       0       0       0       0
  2004 ;;Total ram usage:        0 bytes
  2005 ;; Hardware stack levels used:    1
  2006 ;; This function calls:
  2007 ;;		Nothing
  2008 ;; This function is called by:
  2009 ;;		_spiRead
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  2013                           	line	29
  2014                           global __ptext6
  2015                           __ptext6:	;psect for function _spiReceiveWait
  2016  014A                     psect	text6
  2017                           	file	"SPI.c"
  2018                           	line	29
  2019                           	global	__size_of_spiReceiveWait
  2020                           	__size_of_spiReceiveWait	equ	__end_of_spiReceiveWait-_spiReceiveWait
  2021  0009                     	
  2022                           _spiReceiveWait:	
  2023  014A                     ;incstack = 0
  2024                           	opt	stack 4
  2025                           ; Regs used in _spiReceiveWait: []
  2026                           	line	31
  2027                           	
  2028                           i1l841:	
  2029  014A                     ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  2030                           	goto	i1l122
  2031  014A  294B               	
  2032                           i1l123:	
  2033  014B                     	
  2034                           i1l122:	
  2035  014B                     	bsf	status, 5	;RP0=1, select bank1
  2036  014B  1683               	bcf	status, 6	;RP1=0, select bank1
  2037  014C  1303               	btfss	(148)^080h,0	;volatile
  2038  014D  1C14               	goto	u14_21
  2039  014E  2950               	goto	u14_20
  2040  014F  2951               u14_21:
  2041  0150                     	goto	i1l122
  2042  0150  294B               u14_20:
  2043  0151                     	goto	i1l125
  2044  0151  2952               	
  2045                           i1l124:	
  2046  0152                     	line	32
  2047                           	
  2048                           i1l125:	
  2049  0152                     	return
  2050  0152  0008               	opt stack 0
  2051                           GLOBAL	__end_of_spiReceiveWait
  2052                           	__end_of_spiReceiveWait:
  2053  0153                     	signat	_spiReceiveWait,89
  2054                           global	___latbits
  2055                           ___latbits	equ	2
  2056  0002                     	global	btemp
  2057                           	btemp set 07Eh
  2058  007E                     
  2059                           	DABS	1,126,2	;btemp
  2060                           	global	wtemp0
  2061                           	wtemp0 set btemp+0
  2062  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      6      14
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _main->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     456
                                              4 BANK0      2     2      0
                             _config
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0      22
                                              1 COMMON     4     4      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config
   _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      6       E       5       17.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      17      12        0.0%
ABS                  0      0      17       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Mar 12 04:19:32 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l60 005A  
                      l61 005F                        l62 00B3                        l70 007B  
                      l71 0083                        l63 0067                        l55 004B  
                      l80 00B6                        l56 00B4                        l72 0084  
                      l64 0068                        l81 00B6                        l57 00A0  
                      l73 0084                        l65 0068                        l74 0089  
                      l66 006D                        l58 0059                        l75 0091  
                      l67 0075                        l59 005A                        l76 0092  
                      l68 0076                        l77 0092                        l69 0076  
                      l78 0097                        l79 00B5                        l96 013F  
                     l117 011F                       l118 0126                       l119 012B  
                     l861 012C                       l871 013C                       l863 0133  
                     l865 0137                       l867 0138                       l971 0125  
                     l963 0110                       l869 013B                       l965 0119  
                     l981 0036                       l973 0029                       l967 011D  
                     l991 0051                       l983 0039                       l975 0031  
                     l969 011F                       l993 005F                       l985 003A  
                     l977 0032                       l995 006D                       l987 0045  
                     l979 0033                       l997 007B                       l989 004B  
                     l999 0089                       u300 007A                       u301 0079  
                     u310 0088                       u311 0087                       u320 0096  
                     u321 0095                       u260 0119                       u261 0118  
                     u270 0051                       u271 0050                       u280 005E  
                     u281 005D                       u290 006C              __CFG_CPD$OFF 0000  
                     u291 006B                       _isr 00B9              __CFG_LVP$OFF 0000  
                    l1001 0097                      l1003 009F                      l1005 00A0  
                    l1043 00A5                      ?_isr 0070                      i1l50 0106  
                    i1l43 0106                      i1l44 00D7                      _RCIF 0065  
                    i1l45 0102                      i1l46 00E7                      i1l47 0101  
                    i1l48 00F7                      i1l49 0100              __CFG_WRT$OFF 0000  
                    _main 0029                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000                     ??_isr 0071                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l122 014B  
                   i1l123 014B                     i1l124 0152                     i1l125 0152  
                   i1l136 0149                     i1l128 0158                     i1l841 014A  
                   i1l843 0140                     i1l845 0145                     i1l847 0149  
                   i1l849 0154                     i1l881 00D7                     i1l873 00B9  
                   i1l883 00DE                     i1l891 0102                     i1l875 00BF  
                   i1l885 00E7                     i1l877 00CA                     i1l887 00EE  
                   i1l879 00D0                     i1l889 00F7                     _RCREG 001A  
                   u14_20 0151                     u14_21 0150                     u16_20 00BF  
                   u16_21 00BE                     u17_20 00D0                     u17_21 00CF  
                   u18_20 00DE                     u18_21 00DD                     _SPBRG 0099  
                   u19_20 00EE                     u19_21 00ED                     _TRISA 0085  
                   _SSPIF 0063                     _TXREG 0019            __CFG_FCMEN$OFF 0000  
          __CFG_BOREN$OFF 0000                     pclath 000A           __end_of_spiInit 012C  
         __end_of_spiRead 014A                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 00B9  
                  ??_main 002C                    _SPBRGH 009A                    _TRISC3 043B  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000                    _config 012C                    _valor1 0075  
                  _valor2 0026                    _valor3 0024                    _valor4 0022  
            __pdataCOMMON 0077                    saved_w 007E          __end_of_spiWrite 0159  
               ??_spiInit 0075                 ??_spiRead 0070   __end_of__initialization 0025  
          __pcstackCOMMON 0070                __pbssBANK0 0020                __pmaintext 0029  
              __pintentry 0004                   ?_config 0070   __size_of_spiReceiveWait 0009  
                 _SSPSTAT 0094                 ?_spiWrite 0070           __size_of_config 0014  
                 __ptext1 010D                   __ptext2 012C                   __ptext3 00B9  
                 __ptext4 0153                   __ptext5 0140                   __ptext6 014A  
                 _lectura 0077              __size_of_isr 0054                   _spiInit 010D  
                 _spiRead 0140      end_of_initialization 0025                 _RCSTAbits 0018  
              ??_spiWrite 0070                 _TRISAbits 0085               spiWrite@dat 0070  
               _TXSTAbits 0098            _spiReceiveWait 014A             __pidataCOMMON 0159  
             _BAUDCTLbits 0187            __end_of_config 0140       start_initialization 000F  
             __end_of_isr 010D  __CFG_FOSC$INTRC_NOCLKOUT 0000    __end_of_spiReceiveWait 0153  
                ??_config 0075               __pbssCOMMON 0075                 ___latbits 0002  
           __pcstackBANK0 0028           ?_spiReceiveWait 0070         __size_of_spiWrite 0006  
                ?_spiInit 0028                  ?_spiRead 0070      spiInit@sTransmitEdge 002A  
       interrupt_function 0004                  _PIE1bits 008C        spiInit@sDataSample 0028  
                _PIR1bits 000C          __size_of_spiInit 001F          __size_of_spiRead 000A  
       __CFG_BOR4V$BOR40V 0000                  _contador 0020             __size_of_main 0090  
                _spiWrite 0153              spiInit@sType 002B         spiInit@sClockIdle 0029  
              _INTCONbits 000B                  intlevel1 0000          ??_spiReceiveWait 0070  
